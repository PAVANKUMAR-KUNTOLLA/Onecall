{"version":3,"sources":["webpack:///./src/views/Home/home.page.js","webpack:///./src/views/Profile/profile.page.js","webpack:///./src/components/Page.js"],"names":["customTextStyles","makeStyles","theme","tableHeader","_defineProperty","fontSize","fontWeight","lineHeight","breakpoints","down","display","tableData","headerText","marginTop","marginBottom","color","confirmButton","padding","mobileViewTableCellValue","mobileView","borderRadius","boxShadow","backgroundColor","cursor","border","up","mobileViewTableCellHeader","HomePage","customStyles","navigate","useNavigate","_useState2","useSelector","state","issue","_slicedToArray","useState","myServices","setMyServices","_useState4","taxYearServices","setTaxYearServices","_useState6","setIsMyServicesLoading","_useState8","setIsTaxYearsLoading","_useState10","currSelectedYear","setCurrSelectedYear","handleNavigate","useDispatch","value","useEffect","privateApiGET","Api","taxYears","then","response","status","data","console","log","error","React","createElement","Page","title","Box","Container","maxWidth","Typography","className","TableContainer","sx","Table","borderCollapse","TableHead","TableRow","TableCell","TableBody","length","map","row","index","key","id","service_type","year","Link","to","concat","onClick","flexWrap","justifyContent","FormControl","FormLabel","RadioGroup","name","onChange","event","target","Grid","container","each","item","xs","marginLeft","FormControlLabel","control","Radio","label","style","whiteSpace","overflow","textOverflow","width","Button","payload","new","privateApiPOST","handleAddTaxServiceChange","variant","opacity","customProfileStyles","mainBlock","alignItems","alignSelf","textAlign","account","textTransform","letterSpacing","subTitle","ProfilePage","first_name","last_name","gender","email","phone_no","address","userInfo","setUserInfo","scrollEl","sessionStorage","getItem","profile","info","prev","_objectSpread","scrollTop","Avatar","_extends","split","children","height","marginRight","Card","CardHeader","subheader","CardContent","spacing","md","TextField","fullWidth","InputProps","readOnly","disabled","forwardRef","_ref","ref","_ref$title","rest","_objectWithoutProperties","_excluded","Helmet","propTypes","PropTypes","node","isRequired","string"],"mappings":"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","file":"profile.page.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Page from \"../../components/Page\";\r\n\r\n// Material UI\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Link,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TextField,\r\n  Radio,\r\n  RadioGroup,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport config from \"../../config\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport taxServicesData from \"../../mock-adapter/taxServicesData.json\";\r\nimport { thousands_separators } from \"../../utils\";\r\n\r\nimport Api from \"../../components/Api\";\r\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\r\n\r\nexport const customTextStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"23px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  tableData: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"700\",\r\n    lineHeight: \"22px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      // marginBottom: \"8px\",\r\n      display: \"none\",\r\n    },\r\n  },\r\n  headerText: {\r\n    fontSize: \"24px\",\r\n    fontWeight: \"600\",\r\n    marginTop: \"32px\",\r\n    marginBottom: \"16px\",\r\n    color: \"#2069DB\",\r\n  },\r\n  confirmButton: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"19px\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"10px 40px 9px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  mobileViewTableCellValue: {\r\n    color: \"rgb(71, 71, 71)\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n  mobileView: {\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\r\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\r\n    cursor: \"pointer\",\r\n    border: \"none !important\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellHeader: {\r\n    color: \"rgb(245, 166, 35)\",\r\n    fontSize: \"10px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"14px\",\r\n  },\r\n}));\r\n\r\nconst HomePage = () => {\r\n  const customStyles = customTextStyles();\r\n  let navigate = useNavigate();\r\n  const state = useSelector((state) => state.issue);\r\n  const [myServices, setMyServices] = useState([]);\r\n  const [taxYearServices, setTaxYearServices] = useState([]);\r\n  const [isMyServicesLoading, setIsMyServicesLoading] = useState(false);\r\n  const [isTaxYearsLoading, setIsTaxYearsLoading] = useState(false);\r\n  const [currSelectedYear, setCurrSelectedYear] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNavigate = (value) => {\r\n    let path = value;\r\n    navigate(path);\r\n  };\r\n\r\n  const handleCurrYearTaxServiceChange = (event) => {\r\n    setCurrSelectedYear(event.target.value);\r\n  };\r\n\r\n  const handleAddTaxServiceChange = () => {\r\n    setIsMyServicesLoading(true);\r\n    let payload = { new: true, year: currSelectedYear };\r\n    privateApiPOST(Api.myServices, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setMyServices(data?.data);\r\n          setIsMyServicesLoading(false);\r\n          setCurrSelectedYear(\"\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsMyServicesLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleFetchTaxYearServices = () => {\r\n    setIsTaxYearsLoading(true);\r\n    privateApiGET(Api.taxYears)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setTaxYearServices(data?.data);\r\n          setIsTaxYearsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsTaxYearsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleFetchMyServices = () => {\r\n    setIsMyServicesLoading(true);\r\n    privateApiGET(Api.myServices)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setMyServices(data?.data);\r\n          setIsMyServicesLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsMyServicesLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchTaxYearServices();\r\n    handleFetchMyServices();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title={\"One Call Tax Services\"}>\r\n      <Box>\r\n        <Container maxWidth=\"md\">\r\n          <Typography className={customStyles.headerText}>\r\n            My Selected Services\r\n          </Typography>\r\n          <TableContainer sx={{ marginTop: \"32px\" }}>\r\n            <Table\r\n              sx={{\r\n                borderCollapse: \"collapse\",\r\n              }}\r\n              aria-label=\"Place Order Series Table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={customStyles.tableHeader}>ID</TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    SERVICE TYPE\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    YEAR\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    STATUS\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    ACTIONS\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    PAY NOW\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {myServices.length > 0 &&\r\n                  myServices.map((row, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.id}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.service_type}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.year}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.status}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        <Link\r\n                          to={`../tax-filing/${row.year}/${row.id}/0`}\r\n                          onClick={() =>\r\n                            handleNavigate(\r\n                              `../tax-filing/${row.year}/${row.id}/0`\r\n                            )\r\n                          }\r\n                          sx={{ cursor: \"pointer\" }}\r\n                        >\r\n                          Start Process\r\n                        </Link>\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        <Link\r\n                          to={`../tax-filing/${row.year}/${row.id}/6`}\r\n                          onClick={() =>\r\n                            handleNavigate(\r\n                              `../tax-filing/${row.year}/${row.id}/6`\r\n                            )\r\n                          }\r\n                          sx={{ cursor: \"pointer\" }}\r\n                        >\r\n                          Pay Now\r\n                        </Link>\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.mobileView}>\r\n                        <Box>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexWrap: \"wrap\",\r\n                              justifyContent: \"space-between\",\r\n                              marginTop: \"16px\",\r\n                            }}\r\n                          >\r\n                            <Box>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                id\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.id}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Year\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.year}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Service Type\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.service_type}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Box>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexWrap: \"wrap\",\r\n                              justifyContent: \"space-between\",\r\n                              marginTop: \"16px\",\r\n                            }}\r\n                          >\r\n                            <Box>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Status\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.status}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Actions\r\n                              </Typography>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                <Link\r\n                                  to={`../tax-filing/${row.year}/${row.id}/0`}\r\n                                  onClick={() =>\r\n                                    handleNavigate(\r\n                                      `../tax-filing/${row.year}/${row.id}/0`\r\n                                    )\r\n                                  }\r\n                                  sx={{ cursor: \"pointer\" }}\r\n                                >\r\n                                  Start Process\r\n                                </Link>\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Pay Now\r\n                              </Typography>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                <Link\r\n                                  to={`../tax-filing/${row.year}/${row.id}/6`}\r\n                                  onClick={() =>\r\n                                    handleNavigate(\r\n                                      `../tax-filing/${row.year}/${row.id}/6`\r\n                                    )\r\n                                  }\r\n                                  sx={{ cursor: \"pointer\" }}\r\n                                >\r\n                                  Pay Now\r\n                                </Link>\r\n                              </Typography>\r\n                            </Box>\r\n                          </Box>\r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Box\r\n            sx={{\r\n              marginTop: \"25px\",\r\n            }}\r\n          >\r\n            <FormControl>\r\n              <FormLabel\r\n                id=\"demo-radio-buttons-group-label\"\r\n                className={customStyles.headerText}\r\n              >\r\n                Select Tax Service\r\n              </FormLabel>\r\n              <RadioGroup\r\n                aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                name=\"radio-buttons-group\"\r\n                value={currSelectedYear}\r\n                onChange={handleCurrYearTaxServiceChange}\r\n                color=\"secondary\"\r\n              >\r\n                <Grid container>\r\n                  {taxYearServices.length > 0 &&\r\n                    taxYearServices.map((each, id) => (\r\n                      <Grid item xs={4} key={id} sx={{ marginLeft: \"30px\" }}>\r\n                        <FormControlLabel\r\n                          value={each.name}\r\n                          control={<Radio />}\r\n                          label={\r\n                            <div\r\n                              style={{\r\n                                whiteSpace: \"nowrap\",\r\n                                overflow: \"hidden\",\r\n                                textOverflow: \"ellipsis\",\r\n                                width: \"100%\",\r\n                              }}\r\n                            >\r\n                              {`${each.name} - Tax Filing`}\r\n                            </div>\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                    ))}\r\n                </Grid>\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <Button\r\n              onClick={() => currSelectedYear && handleAddTaxServiceChange()}\r\n              variant=\"contained\"\r\n              className={customStyles.confirmButton}\r\n              color=\"secondary\"\r\n              sx={{\r\n                opacity:\r\n                  // isLoadingSpin ||\r\n                  !currSelectedYear ? 0.5 : 1,\r\n                marginLeft: \"12px\",\r\n                marginTop: \"10px\",\r\n                display: \"block\",\r\n              }}\r\n            >\r\n              Add Service{\"  \"}\r\n              {/* {isLoadingSpin && (\r\n                <CircularProgress\r\n                  size={15}\r\n                  color=\"primary\"\r\n                  sx={{ marginLeft: \"15px\" }}\r\n                />\r\n              )} */}\r\n            </Button>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Page from \"../../components/Page\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  useMediaQuery,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n} from \"@mui/material\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { privateApiGET } from \"../../components/PrivateRoute\";\r\nimport Api from \"../../components/Api\";\r\nimport HomePage from \"../Home/home.page\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst customProfileStyles = makeStyles((theme) => ({\r\n  mainBlock: {\r\n    marginTop: \"0px\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  account: {\r\n    justifyContent: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      maxWidth: \"100%\",\r\n      marginBottom: \"10px\",\r\n    },\r\n  },\r\n  title: {\r\n    textTransform: \"uppercase\",\r\n    color: \"#3e4152\",\r\n    fontSize: \"28px\",\r\n    fontWeight: \"700\",\r\n    marginTop: \"34px\",\r\n    marginBottom: \"10px\",\r\n    letterSpacing: \"1.5px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"0\",\r\n      fontSize: \"20px\",\r\n      letterSpacing: \"0.5px\",\r\n    },\r\n  },\r\n  subTitle: {\r\n    textTransform: \"uppercase\",\r\n    color: \"#3e4152\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"left\",\r\n    marginTop: \"24px\",\r\n    letterSpacing: \"1px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"16px\",\r\n      letterSpacing: \"0.5px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ProfilePage = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [userInfo, setUserInfo] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    gender: \"\",\r\n    email: \"\",\r\n    phone_no: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  const [scrollEl, setScrollEl] = useState();\r\n  const customStyles = customProfileStyles();\r\n\r\n  const handleFetchProfileData = () => {\r\n    privateApiGET(Api.profile)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          let info = data?.data;\r\n          setUserInfo((prev) => ({\r\n            ...prev,\r\n            id: info.id,\r\n            first_name: info.first_name,\r\n            last_name: info.last_name,\r\n            gender: info.gender,\r\n            email: info.email,\r\n            phone_no: info.phone_no,\r\n            address: info.address,\r\n          }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n      });\r\n  };\r\n\r\n  function stringAvatar(name) {\r\n    if (name.split(\" \").length == 1) {\r\n      return {\r\n        children: `${name.split(\" \")[0][0]}`,\r\n      };\r\n    }\r\n    return {\r\n      children: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`,\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"token\")) {\r\n      handleFetchProfileData();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (scrollEl) {\r\n      scrollEl.scrollTop = 100;\r\n    }\r\n  }, [scrollEl]);\r\n\r\n  return (\r\n    <Page title=\"Profile\">\r\n      <Container maxWidth=\"md\" className={customStyles.mainBlock}>\r\n        <Box className={customStyles.account}>\r\n          {userInfo.first_name && (\r\n            <Avatar\r\n              {...stringAvatar(userInfo.first_name + userInfo.last_name)}\r\n              sx={{\r\n                width: \"100px\",\r\n                height: \"100px\",\r\n                fontSize: \"48px\",\r\n                color: \"white\",\r\n                backgroundColor: \"rgb(0,76,153,0.8)\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n              }}\r\n            />\r\n          )}\r\n\r\n          <Typography\r\n            sx={{ fontWeight: \"700\", marginTop: \"10px\", fontSize: \"16px\" }}\r\n          >\r\n            {userInfo.first_name} {userInfo.last_name}\r\n          </Typography>\r\n\r\n          <Card sx={{ marginTop: \"20px\" }}>\r\n            <CardHeader\r\n              subheader={\"This information can't be edited\"}\r\n              title={\"PROFILE\"}\r\n            />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={12} xs={12}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item md={4} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"First_Name\"\r\n                        name=\"name\"\r\n                        value={userInfo?.[\"first_name\"]}\r\n                        variant=\"outlined\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={4} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Last_Name\"\r\n                        name=\"name\"\r\n                        value={userInfo?.[\"last_name\"]}\r\n                        variant=\"outlined\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={4} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Gender\"\r\n                        name=\"name\"\r\n                        value={userInfo?.[\"gender\"]}\r\n                        variant=\"outlined\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={4} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={userInfo?.[\"email\"]}\r\n                        variant=\"outlined\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={4} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Phone Number\"\r\n                        name=\"phone_no\"\r\n                        value={userInfo ? userInfo[\"phone_no\"] : \"\"}\r\n                        variant=\"outlined\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={4} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Address\"\r\n                        name=\"address\"\r\n                        value={userInfo ? userInfo[\"address\"] : \"\"}\r\n                        variant=\"outlined\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n      <HomePage />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React, { forwardRef } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\r\n  return (\r\n    <div ref={ref} {...rest}>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n"],"sourceRoot":""}