{"version":3,"sources":["webpack:///./src/views/Refer/referFriend.js","webpack:///./src/views/Refer/referralDiscount.js","webpack:///./src/views/Refer/myReferrer.js","webpack:///./src/views/Refer/myReferrals.js","webpack:///./src/views/Refer/tabsDesktop.js","webpack:///./src/views/Refer/accordinMobile.js","webpack:///./src/views/Refer/index.js","webpack:///./src/constants/index.js","webpack:///./src/views/TaxFilling/filerDeatils.js","webpack:///./src/views/TaxFilling/incomeDetails.js","webpack:///./src/views/TaxFilling/bankDetails.js","webpack:///./src/views/TaxFilling/confirmDetails.js","webpack:///./src/views/TaxFilling/pickAppointment.js","webpack:///./src/views/Home/payPalPayment.js","webpack:///./src/views/TaxFilling/taxReturns.js","webpack:///./src/views/TaxFilling/TaxDocs.js","webpack:///./src/views/TaxFilling/TabsDesktop.js","webpack:///./src/views/TaxFilling/refundQuote.js","webpack:///./src/views/TaxFilling/AccordionMobile.js","webpack:///./src/views/TaxFilling/index.js","webpack:///./src/views/Auth/LoginView.js","webpack:///./src/views/Auth/ForgotPassword.js","webpack:///./src/views/Auth/index.js","webpack:///./src/components/CustomInputField.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["initialValues","firstName","lastName","email","contact","validationSchema","Yup","shape","required","ReferFriend","_ref","_useState2","_slicedToArray","useState","setIsReferalDetailsLoading","React","createElement","Box","sx","marginTop","backgroundColor","padding","sm","xs","paddingTop","paddingBottom","bgcolor","transition","borderRadius","boxShadow","overflow","_defineProperty","Container","Typography","variant","Formik","onSubmit","values","_ref2","setSubmitting","resetForm","payload","_objectSpread","privateApiPOST","Api","makeReferal","then","response","status","data","console","log","error","_ref3","handleChange","errors","touched","handleBlur","Form","Grid","container","spacing","marginLeft","marginBottom","item","marginRight","CustomInputTextField","attribute","margin","name","onBlur","onChange","fullWidth","value","Boolean","helperText","justifyContent","alignItems","textAlign","Button","type","color","ReferralDiscount","List","ListItem","size","MyReferrer","setIsReferralDetailsLoading","_useState4","referralEmail","referralID","referralDetails","setReferralDetails","useEffect","sessionStorage","getItem","privateApiGET","profile","disabled","customTextStyles","makeStyles","theme","tableHeader","fontSize","fontWeight","lineHeight","breakpoints","down","display","tableData","headerText","confirmButton","mobileViewTableCellValue","mobileView","cursor","border","up","mobileViewTableCellHeader","MyReferrals","customStyles","joined","not_joined","referalDetails","setReferalDetails","TableContainer","Table","borderCollapse","TableHead","TableRow","TableCell","className","TableBody","length","map","row","id","key","first_name","last_name","phone_no","flexDirection","contact_no","accordion","accordionHeader","opacity","paddingLeft","maxHeight","accordionHeaderText","accordionColumn","accordionColumnHeaderText","accordionColumnText","footerText","collpaseIcon","TabsDesktop","handleFetchData","customTextClasses","setValue","CustomTabPanel","props","children","index","other","_objectWithoutProperties","_excluded","_extends","role","hidden","concat","a11yProps","propTypes","PropTypes","node","number","isRequired","width","borderBottom","borderColor","Tabs","event","newValue","Tab","label","tabHeaderText","BasicAccordion","expanded","setExpanded","panel","isExpanded","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","ReferPage","Page","title","maxWidth","statesNames","countryCode","buttons","CustomLabel","style","FilerDetails","personalDetails","contactDetails","spouseDetails","incomeDetails","providedLivingSupport","handleDownloadTemplate","isFilerDetailsLoading","setIsFilerDetailsLoading","isDependantDetailsLoading","setIsDependantDetailsLoading","_useState6","dependantDetails","setDependantDetails","transform","input","includes","replace","_useState8","middleName","ssn","dateOfBirth","gender","occupation","residentialStatus","street","apartment","city","state","zipCode","country","primaryCountryCode","primaryPhoneNumber","secondaryCountryCode","secondaryPhoneNumber","contactEmail","taxFiledLastYear","taxPayerStatus","spouseFirstName","spouseMiddleInitial","spouseLastName","spouseSsnOrItin","spouseApplyForItin","spouseDateOfBirth","spouseGender","spouseOccupation","spouseResidentialStatus","spouseEmail","isNewDependant","additionalFirstName","additionalMiddleInitial","additionalLastName","additionalSsnOrItin","additionalApplyForItin","additionalDateOfBirth","additionalGender","additionalOccupation","additionalVisaType","additionalEmail","additionalStayCount","additionalRelationship","formData","stateOptions","countryCodes","handleDeleteDependant","dependantId","taxFilingId","deleteDependant","handleFetchDependantDetails","minHeight","CircularProgress","max","matches","Date","when","is","otherwise","personalContactDetails","_ref4","handleSubmit","isSubmitting","setFieldValue","autoComplete","lg","leftSide","flexWrap","attributeTextAlign","is_required","InputLabelProps","shrink","InputProps","inputProps","placeholder","select","MenuItem","rightSide","option","TextField","ButtonBase","onClick","textDecoration","disableTouchRipple","wordSpacing","each","startIcon","DeleteIcon","ml","IncomeDetails","isIncomeDetailsLoading","setIsIncomeDetailsLoading","interestIncome","dividendIncome","soldStocks","soldCrypto","foreignIncome","retirementAccounts","stateTaxRefund","foreignBankAccount","foreignAssets","rentalIncome","income1099","incomeDescription","incomeAmount","addAdditionalInformation","FormControl","component","FormLabel","RadioGroup","FormControlLabel","control","Radio","Tooltip","placement","bankingType","bankName","accountHolderName","ownership","routingNumber","confirmRoutingNumber","oneOf","accountNumber","confirmAccountNumber","accountType","confirmAccountType","BankDetails","isBankDetailsLoading","setIsBankDetailsLoading","bankDetails","align","useStyles","ConfirmDetails","handlePickAppointment","PickAppointment","isPickAppointmentDetailsLoading","setIsPickAppointmentDetailsLoading","useSelector","app","date","time","timezone","appointmentData","setAppointmentData","appointmentDetails","setAppointmentDetails","handleCancelAppointment","appointmentId","deleteAppointment","handleFetchAppointmentDetails","showMsg","timeOptions","hours","minutes","hourStr","String","padStart","minuteStr","timeOption","push","generateTimeOptions","isMarginTopNotRequired","readOnly","preventDefault","bookAppointment","handleFetchAppointmentChange","target","start_time","end_time","visibility","PayPalPayment","fontFamily","p","mt","src","alt","height","TaxReturns","alertCard","alertIcon","root","link","info","UploadTaxDocs","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","isLoading","setIsLoading","isImport","isImpoFormSubmitting","selectedFile","isMyTaxDocsLoading","myTaxDocs","setState","handleDownloadFile","file","file_name","downloadTaxDocsFile","responseType","res","url","window","URL","createObjectURL","Blob","anchor","document","href","setAttribute","body","appendChild","click","err","handleDeleteFile","deleteTaxDocsFile","handleFetchMyTaxDocs","prev","uploadTaxDocs","CustomAlert","open","onClose","Card","CardContent","Link","Paper","elevation","valign","e","files","accept","htmlFor","CloudUploadIcon","fontStyle","FormData","append","token","axios","post","headers","Authorization","upload_time","file_size","GetApp","params","useParams","parseInt","action","FilerDeatils","RefundQuote","tabButton","TaxFillingPage","setData","isLoadingSpin","setIsLoadingSpin","isActiveTab","setIsActiveTab","handleActiveTabChange","tabName","handleFetchTaxFilingDetails","taxFiling","templateDownload","minWidth","position","zIndex","left","top","PerfectScrollbar","year","_rightSide","submitProgress","mainBlock","avatarLogo","paddingRight","LoginView","classes","navigate","useNavigate","dispatch","useDispatch","Fragment","password","login","config","Cookies","get","_res$data","setItem","setTaxYear","taxYear","mb","my","ForgotPasswordView","setIsForgotPassword","forgotPasswordState","setForgetPasswordState","isResetPasswordSubmitting","setIsRestPasswordSubmitting","autoFocus","forgotPassword","_logoAvatar","box","logoAvatar","AppBar","Avatar","Authentication","NO_WRAP_ATTRIBUTES","others","whiteSpace","prototype","bool","string","forwardRef","ref","_ref$title","rest","Helmet","alertContainer","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { useState } from \"react\";\nimport Page from \"../../components/Page\";\nimport { Grid, Box, Typography, Button, Container } from \"@mui/material\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Api from \"../../components/Api\";\nimport { privateApiPOST } from \"../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  contact: \"\",\n};\n\nconst validationSchema = Yup.object().shape({\n  firstName: Yup.string().required(\"First Name is required\"),\n  lastName: Yup.string().required(\"Last Name is required\"),\n  email: Yup.string()\n    .email(\"Invalid email format\")\n    .required(\"Email is required\"),\n  contact: Yup.string().required(\"Contact number is required\"),\n});\n\nconst ReferFriend = () => {\n  const [isReferalDetailsLoading, setIsReferalDetailsLoading] = useState(false);\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n      }}\n    >\n      <Container>\n        <Typography variant=\"h4\">Referal Details:</Typography>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            setIsReferalDetailsLoading(true);\n            setSubmitting(true);\n            let payload = { ...values };\n            privateApiPOST(Api.makeReferal, payload)\n              .then((response) => {\n                const { status, data } = response;\n                if (status === 200) {\n                  console.log(\"data\", data);\n                  setIsReferalDetailsLoading(false);\n                  resetForm();\n                  setSubmitting(false);\n                }\n              })\n              .catch((error) => {\n                console.log(\"Error\", error);\n                setIsReferalDetailsLoading(false);\n                setSubmitting(false);\n              });\n          }}\n        >\n          {({ values, handleChange, errors, touched, handleBlur }) => (\n            <Form>\n              <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\n                <Grid\n                  container\n                  sx={{\n                    marginBottom: \"30px\",\n                    marginTop: \"30px\",\n                  }}\n                >\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                    <CustomInputTextField\n                      attribute=\"First Name\"\n                      margin=\"normal\"\n                      name=\"firstName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.firstName}\n                      variant=\"outlined\"\n                      error={Boolean(touched.firstName && errors.firstName)}\n                      helperText={touched.firstName && errors.firstName}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                    <CustomInputTextField\n                      attribute=\"Last Name\"\n                      margin=\"normal\"\n                      name=\"lastName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.lastName}\n                      variant=\"outlined\"\n                      error={Boolean(touched.lastName && errors.lastName)}\n                      helperText={touched.lastName && errors.lastName}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                    <CustomInputTextField\n                      attribute=\"Email\"\n                      margin=\"normal\"\n                      name=\"email\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.email}\n                      variant=\"outlined\"\n                      error={Boolean(touched.email && errors.email)}\n                      helperText={touched.email && errors.email}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                    <CustomInputTextField\n                      attribute=\"Contact\"\n                      margin=\"normal\"\n                      name=\"contact\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.contact}\n                      variant=\"outlined\"\n                      error={Boolean(touched.contact && errors.contact)}\n                      helperText={touched.contact && errors.contact}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid\n                  container\n                  justifyContent=\"center\" // Center horizontally\n                  alignItems=\"center\" // Center vertically\n                >\n                  <Box\n                    sx={{\n                      textAlign: \"center\",\n                      paddingBottom: { xs: \"20px\" },\n                    }}\n                  >\n                    <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      sx={{\n                        marginRight: { xs: \"0px\", sm: \"130px\" },\n                      }}\n                    >\n                      Submit\n                    </Button>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n    </Box>\n  );\n};\n\nexport default ReferFriend;\n","import { Typography, Box, Container, List, ListItem } from \"@mui/material\";\nimport React from \"react\";\n\nconst ReferralDiscount = () => {\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n      }}\n    >\n      <Container>\n        <Box>\n          <Typography variant=\"h3\">Referral Discount Details :</Typography>\n          <Typography sx={{ marginTop: \"10px\" }}>\n            1 - 4 New Clients Referred : $10 for each client who completes their\n            tax filing with us\n          </Typography>\n          <Typography sx={{ marginTop: \"10px\" }}>\n            5 - 9 New Clients Referred : $20 for each client who completes their\n            tax filing with us\n          </Typography>\n          <Typography sx={{ marginTop: \"10px\" }}>\n            10 or more New Clients Referred : $30 for each client who completes\n            their tax filing with us\n          </Typography>\n          <List>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> All Referral Discounts will be applied only\n                if newly referred clients complete their tax filing with us\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> Referral discount will be used towards your\n                tax filing fee\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> If you have more referral discount than your\n                tax filing fee, it will be carried forward and used towards your\n                future service fee with Taxcooler Inc\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> Referral discount cannot be transferred from\n                one client to another\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> You can earn as much referral discount as\n                possible by referring more new clients to us every year\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> New Client means who did not file with\n                TaxCooler Inc in any of the previous years\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Box variant=\"body1\">\n                <font color=\"green\" size=\"2\">\n                  Example:\n                  <ul>\n                    <li>You referred 5 new clients in this year</li>\n                    <li>\n                      3 of them filed with us and 2 of them did not complete\n                      their tax return with us. You get referral discount for 3\n                      new clients who completed their filing with us\n                    </li>\n                    <li>\n                      Referral discount would be $10 per client. So you have\n                      earned $30 referral discount\n                    </li>\n                    <li>\n                      This discount will be applied on your filing fee when you\n                      are filing your tax return. If you filed your tax return\n                      already, the discount will be carried forward to your\n                      future filing fee (or any other service fee with Taxcooler\n                      Inc)\n                    </li>\n                  </ul>\n                </font>\n              </Box>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> All amounts indicated here are in legal US\n                Dollars\n              </Typography>\n            </ListItem>\n          </List>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default ReferralDiscount;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Container, Typography, Box, Grid, TextField } from \"@mui/material\";\nimport Api from \"../../components/Api\";\nimport { privateApiGET } from \"../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst MyReferrer = () => {\n  const [isReferralDetailsLoading, setIsReferralDetailsLoading] =\n    useState(false);\n  const [referralDetails, setReferralDetails] = useState({\n    referralEmail: \"\",\n    referralID: \"\",\n  });\n\n  const handleFetchProfileDetails = () => {\n    setIsReferralDetailsLoading(true);\n    privateApiGET(Api.profile)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setReferralDetails({\n            ...referralDetails,\n            referralEmail: data?.data[\"referred_by\"],\n            referralID: data?.data[\"referral_id\"],\n          });\n          setIsReferralDetailsLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsReferralDetailsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\")) {\n      handleFetchProfileDetails();\n    }\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n      }}\n    >\n      <Container>\n        <Typography variant=\"h4\">Referal Details:</Typography>\n\n        <Grid container>\n          <Grid item sm={5} xs={12} sx={{ marginRight: \"20px\" }}>\n            <CustomInputTextField\n              fullWidth\n              attribute=\"Referral ID\"\n              margin=\"normal\"\n              name=\"referralID\" // Updated name\n              disabled\n              value={referralDetails.referralID} // Updated value\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item sm={5} xs={12} sx={{ marginRight: \"20px\" }}>\n            <CustomInputTextField\n              fullWidth\n              attribute=\"Referral Email\"\n              margin=\"normal\"\n              name=\"referralEmail\" // Updated name\n              value={referralDetails.referralEmail} // Updated value\n              variant=\"outlined\"\n              disabled\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default MyReferrer;\n","import React, { useState, useEffect, Component } from \"react\";\nimport {\n  Grid,\n  Box,\n  Link,\n  Avatar,\n  Typography,\n  Button,\n  Container,\n  Card,\n  CardContent,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  TextField,\n  Radio,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n  FormControl,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport Api from \"../../components/Api\";\nimport { privateApiGET } from \"../../components/PrivateRoute\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: \"700\",\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  headerText: {\n    fontSize: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"32px\",\n    marginBottom: \"16px\",\n    color: \"#2069DB\",\n  },\n  confirmButton: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    lineHeight: \"19px\",\n    color: \"#FFFFFF\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n}));\n\nconst MyReferrals = () => {\n  const customStyles = customTextStyles();\n  const [isReferalDetailsLoading, setIsReferalDetailsLoading] = useState(false);\n  const [referalDetails, setReferalDetails] = useState({\n    joined: [],\n    not_joined: [],\n  });\n\n  const handleFetchReferalDetails = () => {\n    privateApiGET(Api.referalDetails)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setReferalDetails({\n            joined: data?.data[\"joined\"],\n            not_joined: data?.data[\"not_joined\"],\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n      });\n  };\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\")) {\n      handleFetchReferalDetails();\n    }\n  }, []);\n  console.log(referalDetails);\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n      }}\n    >\n      <Container>\n        <Box>\n          <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\n            Registerd Till Now:\n          </Typography>\n          <TableContainer sx={{ marginTop: \"32px\" }}>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n              aria-label=\"Place Order Series Table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={customStyles.tableHeader}>\n                    First Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Last Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Email Id\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Phone Number\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {referalDetails[\"joined\"].length > 0 &&\n                  referalDetails[\"joined\"].map((row, id) => (\n                    <TableRow key={id}>\n                      <TableCell className={customStyles.tableData}>\n                        {row.first_name}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.last_name}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.email}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.phone_no}\n                      </TableCell>\n                      <TableCell className={customStyles.mobileView}>\n                        <Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                First Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.first_name}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Last Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.last_name}\n                              </Typography>\n                            </Box>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Email Id\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.email}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Phone Number\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.phone_no}\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n        <Box sx={{ marginTop: { xs: \"16px\", sm: \"24px\" } }}>\n          <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\n            Referred Till Now:\n          </Typography>\n          <TableContainer sx={{ marginTop: \"32px\" }}>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n              aria-label=\"Place Order Series Table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={customStyles.tableHeader}>\n                    First Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Last Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Email Id\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Phone Number\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {referalDetails[\"not_joined\"].length > 0 &&\n                  referalDetails[\"not_joined\"].map((row, id) => (\n                    <TableRow key={id}>\n                      <TableCell className={customStyles.tableData}>\n                        {row.first_name}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.last_name}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.email}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.contact_no}\n                      </TableCell>\n                      <TableCell className={customStyles.mobileView}>\n                        <Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\", marginRight: \"10px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                First Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.first_name}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\", marginRight: \"10px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Last Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.last_name}\n                              </Typography>\n                            </Box>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Email Id\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.email}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Phone Number\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.contact_no}\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default MyReferrals;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport config from \"../../config\";\n// Material UI\nimport { Grid, Box, Avatar, Typography, Tabs, Tab } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport PropTypes from \"prop-types\";\nimport PercentIcon from \"@mui/icons-material/Percent\";\nimport Groups from \"@mui/icons-material/Groups\";\nimport ListAlt from \"@mui/icons-material/ListAlt\";\nimport AspectRatioOutlined from \"@mui/icons-material/AspectRatioOutlined\";\nimport UnfoldLess from \"@mui/icons-material/UnfoldLess\";\nimport UnfoldMore from \"@mui/icons-material/UnfoldMore\";\nimport DiscountOutlined from \"@mui/icons-material/DiscountOutlined\";\nimport MonetizationOnOutlined from \"@mui/icons-material/MonetizationOnOutlined\";\nimport InsertPageBreakOutlined from \"@mui/icons-material/InsertPageBreakOutlined\";\nimport DescriptionOutlined from \"@mui/icons-material/DescriptionOutlined\";\nimport StackedBarChartOutlined from \"@mui/icons-material/StackedBarChartOutlined\";\nimport PriceCheckOutlined from \"@mui/icons-material/PriceCheckOutlined\";\nimport SavingsOutlinedIcon from \"@mui/icons-material/SavingsOutlined\";\nimport AccountBalanceWalletOutlinedIcon from \"@mui/icons-material/AccountBalanceWalletOutlined\";\nimport ReferFriend from \"./referFriend\";\nimport ReferralDiscount from \"./referralDiscount\";\nimport MyReferrer from \"./myReferrer\";\nimport MyReferrals from \"./myReferrals\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst TabsDesktop = ({ data, handleFetchData }) => {\n  const customTextClasses = customTextStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function CustomTabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box>{children}</Box>}\n      </div>\n    );\n  }\n\n  CustomTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Box\n        sx={{\n          width: \"100%\",\n          marginBottom: \"64px\",\n        }}\n      >\n        <Box\n          sx={{\n            borderBottom: 1,\n            borderColor: \"divider\",\n            margin: \"8px 32px 32px 10px\",\n          }}\n        >\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"basic tabs example\"\n          >\n            <Tab\n              label=\"Referral Discount\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(0)}\n            />\n            <Tab\n              label=\"My Referrals\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(1)}\n            />\n            <Tab\n              label=\"Refer a Friend\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(2)}\n            />\n            <Tab\n              label=\"My Referrer\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(2)}\n            />\n          </Tabs>\n        </Box>\n\n        <CustomTabPanel value={value} index={0}>\n          <ReferralDiscount />\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={1}>\n          <MyReferrals />\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={2}>\n          <Grid container>\n            <Grid item xs={12}>\n              <Box>\n                <ReferFriend />\n              </Box>\n            </Grid>\n          </Grid>\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={3}>\n          <MyReferrer />\n        </CustomTabPanel>\n      </Box>\n    </Grid>\n  );\n};\nexport default TabsDesktop;\n","import React, { useState } from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport PercentIcon from \"@mui/icons-material/Percent\";\nimport Groups from \"@mui/icons-material/Groups\";\nimport ListAlt from \"@mui/icons-material/ListAlt\";\nimport AspectRatioOutlined from \"@mui/icons-material/AspectRatioOutlined\";\nimport UnfoldLess from \"@mui/icons-material/UnfoldLess\";\nimport UnfoldMore from \"@mui/icons-material/UnfoldMore\";\nimport DiscountOutlined from \"@mui/icons-material/DiscountOutlined\";\nimport MonetizationOnOutlined from \"@mui/icons-material/MonetizationOnOutlined\";\nimport InsertPageBreakOutlined from \"@mui/icons-material/InsertPageBreakOutlined\";\nimport DescriptionOutlined from \"@mui/icons-material/DescriptionOutlined\";\nimport StackedBarChartOutlined from \"@mui/icons-material/StackedBarChartOutlined\";\nimport PriceCheckOutlined from \"@mui/icons-material/PriceCheckOutlined\";\nimport { Grid, Box, Avatar, Typography } from \"@mui/material\";\nimport SavingsOutlinedIcon from \"@mui/icons-material/SavingsOutlined\";\nimport AccountBalanceWalletOutlinedIcon from \"@mui/icons-material/AccountBalanceWalletOutlined\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport config from \"../../config\";\nimport { makeStyles } from \"@mui/styles\";\nimport ReferFriend from \"./referFriend\";\nimport ReferralDiscount from \"./referralDiscount\";\nimport MyReferrer from \"./myReferrer\";\nimport MyReferrals from \"./myReferrals\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst BasicAccordion = ({ data, handleFetchData }) => {\n  const customTextClasses = customTextStyles();\n  const [expanded, setExpanded] = useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <Box>\n      <Accordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel1\" ? \"600\" : \"400\" }}\n          >\n            Referral Discount\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails\n          sx={{\n            bgcolor: \"#FAFAFA\",\n          }}\n        >\n          <ReferralDiscount />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel2\"}\n        onChange={handleChange(\"panel2\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel2\" ? \"600\" : \"400\" }}\n          >\n            My Referrals\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <MyReferrals />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel3\"}\n        onChange={handleChange(\"panel3\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3a-content\"\n          id=\"panel3a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\n          >\n            Refer a Friend\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <ReferFriend />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel4\"}\n        onChange={handleChange(\"panel4\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel4a-content\"\n          id=\"panel4a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\n          >\n            My Referral\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <MyReferrer />\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n};\n\nexport default BasicAccordion;\n","import React, { useEffect, useState } from \"react\";\nimport Page from \"../../components/Page\";\nimport { Grid, Container, Box, CircularProgress } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\n\nimport TabsDesktop from \"./tabsDesktop\";\nimport BasicAccordion from \"./accordinMobile\";\n\nimport Api from \"../../components/Api\";\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\nimport DrawerAppBar from \"../../Layout/MainLayout/appBarMaterialUI\";\n\nconst ReferPage = () => {\n  return (\n    <Page title={\"Refer\"}>\n      <Container maxWidth=\"lg\">\n        <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n          <TabsDesktop />\n        </Box>\n        <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\n          <BasicAccordion />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ReferPage;\n","export const charactersList = [\n  \"Avengers\",\n  \"Marvel\",\n  \"My Hero\",\n  \"Transformers\",\n  \"Spiderman\",\n  \"Jurassic\",\n  \"Game of Thrones\",\n  \"The Flash\",\n  \"Batman\",\n];\nexport const categoriesList = [\n  \"Accessories\",\n  \"Action-figures\",\n  \"Statue\",\n  \"Collectibles\",\n  \"T-shirt\",\n];\nexport const priceRangesList = [\n  \"0-999\",\n  \"1000-9999\",\n  \"10000-99999\",\n  \"above 100000\",\n];\nexport const profilePageList = [\n  \"Order History\",\n  \"Favourite\",\n  \"Account Details\",\n  \"Payment Methods\",\n  \"My Addresses\",\n];\n\nexport const statesNames = [\n  { value: \"SELECT\", label: \"SELECT\" },\n  { value: \"Alabama\", label: \"Alabama\" },\n  { value: \"Alaska\", label: \"Alaska\" },\n  { value: \"Arizona\", label: \"Arizona\" },\n  { value: \"Arkansas\", label: \"Arkansas\" },\n  { value: \"California\", label: \"California\" },\n  { value: \"Colorado\", label: \"Colorado\" },\n  { value: \"Connecticut\", label: \"Connecticut\" },\n  { value: \"Delaware\", label: \"Delaware\" },\n  { value: \"Florida\", label: \"Florida\" },\n  { value: \"Georgia\", label: \"Georgia\" },\n  { value: \"Hawaii\", label: \"Hawaii\" },\n  { value: \"Idaho\", label: \"Idaho\" },\n  { value: \"Illinois\", label: \"Illinois\" },\n  { value: \"Indiana\", label: \"Indiana\" },\n  { value: \"Iowa\", label: \"Iowa\" },\n  { value: \"Kansas\", label: \"Kansas\" },\n  { value: \"Kentucky\", label: \"Kentucky\" },\n  { value: \"Louisiana\", label: \"Louisiana\" },\n  { value: \"Maine\", label: \"Maine\" },\n  { value: \"Maryland\", label: \"Maryland\" },\n  { value: \"Massachusetts\", label: \"Massachusetts\" },\n  { value: \"Michigan\", label: \"Michigan\" },\n  { value: \"Minnesota\", label: \"Minnesota\" },\n  { value: \"Mississippi\", label: \"Mississippi\" },\n  { value: \"Missouri\", label: \"Missouri\" },\n  { value: \"Montana\", label: \"Montana\" },\n  { value: \"Nebraska\", label: \"Nebraska\" },\n  { value: \"Nevada\", label: \"Nevada\" },\n  { value: \"New Hampshire\", label: \"New Hampshire\" },\n  { value: \"New Jersey\", label: \"New Jersey\" },\n  { value: \"New Mexico\", label: \"New Mexico\" },\n  { value: \"New York\", label: \"New York\" },\n  { value: \"North Carolina\", label: \"North Carolina\" },\n  { value: \"North Dakota\", label: \"North Dakota\" },\n  { value: \"Ohio\", label: \"Ohio\" },\n  { value: \"Oklahoma\", label: \"Oklahoma\" },\n  { value: \"Oregon\", label: \"Oregon\" },\n  { value: \"Pennsylvania\", label: \"Pennsylvania\" },\n  { value: \"Rhode Island\", label: \"Rhode Island\" },\n  { value: \"South Carolina\", label: \"South Carolina\" },\n  { value: \"South Dakota\", label: \"South Dakota\" },\n  { value: \"Tennessee\", label: \"Tennessee\" },\n  { value: \"Texas\", label: \"Texas\" },\n  { value: \"Utah\", label: \"Utah\" },\n  { value: \"Vermont\", label: \"Vermont\" },\n  { value: \"Virginia\", label: \"Virginia\" },\n  { value: \"Washington\", label: \"Washington\" },\n  { value: \"West Virginia\", label: \"West Virginia\" },\n  { value: \"Wisconsin\", label: \"Wisconsin\" },\n  { value: \"Wyoming\", label: \"Wyoming\" },\n  { value: \"Foreign\", label: \"Foreign\" },\n  { value: \"District of Columbia\", label: \"District of Columbia\" },\n];\n\nexport const countryCode = [\n  { value: \"Select\", label: \"Select\" },\n  { value: \"+91 (India)\", label: \"+91 (India)\" },\n  { value: \"+1 (USA / Canada)\", label: \"+1 (USA / Canada)\" },\n  { value: \"+44 (U.K)\", label: \"+44 (U.K)\" },\n  { value: \"+49 (Germany)\", label: \"+49 (Germany)\" },\n  { value: \"+60 (Malaysia)\", label: \"+60 (Malaysia)\" },\n  { value: \"+61 (Australia)\", label: \"+61 (Australia)\" },\n  { value: \"+65 (Singapore)\", label: \"+65 (Singapore)\" },\n  { value: \"+81 (Japan)\", label: \"+81 (Japan)\" },\n  { value: \"+86 (China)\", label: \"+86 (China)\" },\n  { value: \"Others\", label: \"Others\" },\n];\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  MenuItem,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  CircularProgress,\n  ButtonBase,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { makeStyles } from \"@mui/styles\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { statesNames, countryCode } from \"../../constants\";\nimport Api from \"../../components/Api\";\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../components/CustomInputField\";\nimport { ALIGN_LEFT } from \"@blueprintjs/core/lib/esm/common/classes\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: \"700\",\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    marginBottom: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nexport function CustomLabel({ label, required }) {\n  return (\n    <label style={{ display: \"flex\", alignItems: \"center\" }}>\n      {label}\n      {required && (\n        <span\n          style={{\n            color: \"red\",\n            fontSize: \"16px\",\n            marginLeft: \"3px\",\n          }}\n        >\n          *\n        </span>\n      )}\n    </label>\n  );\n}\n\nconst FilerDetails = ({\n  id,\n  personalDetails,\n  contactDetails,\n  spouseDetails,\n  incomeDetails,\n  providedLivingSupport,\n  handleFetchData,\n  handleDownloadTemplate,\n}) => {\n  const customStyles = customTextStyles();\n  const [isFilerDetailsLoading, setIsFilerDetailsLoading] = useState(false);\n  const [isDependantDetailsLoading, setIsDependantDetailsLoading] =\n    useState(false);\n  const [dependantDetails, setDependantDetails] = useState([]);\n\n  const transform = (input) => {\n    if (input === undefined || input === null) {\n      return \"\";\n    }\n\n    if (input.includes(\"-\")) {\n      return input;\n    }\n\n    const rawSsn = input.replace(/-/g, \"\"); // Remove hyphens\n    const formattedSsn = rawSsn\n      .replace(/\\D/g, \"\") // Remove non-digits\n      .replace(/(\\d{3})(\\d{3})(\\d{3})/, \"$1-$2-$3\"); // Format as 123-45-6789\n    return formattedSsn;\n  };\n\n  const [formData, setFormData] = useState({\n    // Personal Details\n\n    firstName: personalDetails[\"firstName\"],\n    middleName: personalDetails[\"middleName\"],\n    lastName: personalDetails[\"lastName\"],\n    ssn: personalDetails[\"ssn\"],\n    dateOfBirth: personalDetails[\"dateOfBirth\"],\n    gender: personalDetails[\"gender\"],\n    occupation: personalDetails[\"occupation\"],\n    residentialStatus: personalDetails[\"residentialStatus\"],\n    email: personalDetails[\"email\"],\n\n    // Contact Details\n    street: contactDetails[\"street\"],\n    apartment: contactDetails[\"apartment\"],\n    city: contactDetails[\"city\"],\n    state: contactDetails[\"state\"],\n    zipCode: contactDetails[\"zipCode\"],\n    country: contactDetails[\"country\"],\n    primaryCountryCode: contactDetails[\"primaryCountryCode\"],\n    primaryPhoneNumber: contactDetails[\"primaryPhoneNumber\"],\n    secondaryCountryCode: contactDetails[\"secondaryCountryCode\"],\n    secondaryPhoneNumber: contactDetails[\"secondaryPhoneNumber\"],\n    contactEmail: contactDetails[\"contactEmail\"],\n\n    taxFiledLastYear: incomeDetails[\"taxFiledLastYear\"], // Set an initial value for taxFiledLastYear\n\n    // additional Spouse Details (Initially hidden)\n    taxPayerStatus: personalDetails[\"taxPayerStatus\"], // Default to \"No\" (Single)\n    spouseFirstName: spouseDetails[\"spouseFirstName\"],\n    spouseMiddleInitial: spouseDetails[\"spouseMiddleInitial\"],\n    spouseLastName: spouseDetails[\"spouseLastName\"],\n    spouseSsnOrItin: spouseDetails[\"spouseSsnOrItin\"],\n    spouseApplyForItin: spouseDetails[\"spouseApplyForItin\"], // Default to \"No\"\n    spouseDateOfBirth: spouseDetails[\"spouseDateOfBirth\"],\n    spouseGender: spouseDetails[\"spouseGender\"],\n    spouseOccupation: spouseDetails[\"spouseOccupation\"],\n    spouseResidentialStatus: spouseDetails[\"spouseResidentialStatus\"],\n    spouseEmail: spouseDetails[\"spouseEmail\"],\n\n    providedLivingSupport: providedLivingSupport,\n    isNewDependant: false,\n    additionalFirstName: \"\",\n    additionalMiddleInitial: \"\",\n    additionalLastName: \"\",\n    additionalSsnOrItin: \"\",\n    additionalApplyForItin: false, // Default to \"No\"\n    additionalDateOfBirth: \"\",\n    additionalGender: \"\",\n    additionalOccupation: \"\",\n    additionalVisaType: \"\",\n    additionalEmail: \"\",\n    additionalStayCount: \"\",\n    additionalRelationship: \"\",\n  });\n\n  const stateOptions = statesNames;\n  const countryCodes = countryCode;\n\n  const handleDeleteDependant = (dependantId) => {\n    setIsDependantDetailsLoading(true);\n    let payload = { taxFilingId: id, id: dependantId };\n    privateApiPOST(Api.deleteDependant, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setIsDependantDetailsLoading(false);\n          handleFetchDependantDetails();\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsFilerDetailsLoading(false);\n      });\n  };\n\n  const handleFetchDependantDetails = () => {\n    setIsDependantDetailsLoading(true);\n    let payload = { id: id };\n    privateApiPOST(Api.dependantDetails, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setDependantDetails(data?.data);\n          setIsDependantDetailsLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsDependantDetailsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    handleFetchDependantDetails();\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      <Container>\n        {isFilerDetailsLoading ? (\n          <CircularProgress />\n        ) : (\n          <Box>\n            <Formik\n              initialValues={formData}\n              validationSchema={Yup.object().shape({\n                firstName: Yup.string()\n                  .max(255)\n                  .required(\"First Name is required\"),\n                middleName: Yup.string().max(255),\n                lastName: Yup.string()\n                  .max(255)\n                  .required(\"Last Name is required\"),\n                ssn: Yup.string()\n                  .matches(\n                    /^\\d{9}$/,\n                    \"SSN must be exactly 9 digits long and contain only numbers\"\n                  )\n                  .required(\"SSN is required\"),\n                dateOfBirth: Yup.date()\n                  .max(new Date(), \"Date of Birth cannot be in the future\")\n                  .required(\"Date of Birth is required\"),\n                gender: Yup.string().required(\"Gender is required\"),\n                occupation: Yup.string()\n                  .max(255)\n                  .required(\"Occupation is required\"),\n                residentialStatus: Yup.string().required(\n                  \"Residential Status is required\"\n                ),\n                street: Yup.string().max(255).required(\"Street is required\"),\n                apartment: Yup.string().max(255),\n                city: Yup.string().max(255).required(\"City is required\"),\n                state: Yup.string().max(255).required(\"State is required\"),\n                zipCode: Yup.string().max(10).required(\"Zip Code is required\"),\n                country: Yup.string().max(255).required(\"Country is required\"),\n                primaryCountryCode: Yup.string().required(\n                  \" Country Code is required\"\n                ),\n                primaryPhoneNumber: Yup.string().required(\n                  \"Primary Phone Number is required\"\n                ),\n                secondaryCountryCode: Yup.string(),\n                secondaryPhoneNumber: Yup.string(),\n                contactEmail: Yup.string()\n                  .email(\"Must be a valid email\")\n                  .max(255)\n                  .required(\"Contact Email is required\"),\n                taxFiledLastYear: Yup.boolean().required(\n                  \"Please select an option\"\n                ),\n                taxPayerStatus: Yup.string().required(\n                  \"Please select your status\"\n                ),\n\n                // additional Spouse Details (Add validation rules as needed)\n                spouseFirstName: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string().required(\"Spouse First Name is required\"),\n                  otherwise: Yup.string(),\n                }),\n                spouseMiddleInitial: Yup.string(),\n                spouseLastName: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string().required(\"Spouse Last Name is required\"),\n                  otherwise: Yup.string(),\n                }),\n                spouseSsnOrItin: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string()\n                    .required(\"Spouse SSN/ITIN is required if married\")\n                    .matches(/^\\d{9}$/, \"Spouse SSN/ITIN must be 9 digits\"),\n                  otherwise: Yup.string(),\n                }),\n                spouseApplyForItin: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string().required(\n                    \"Please select whether you want to apply for ITIN\"\n                  ),\n                  otherwise: Yup.string(),\n                }),\n                spouseDateOfBirth: Yup.date().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.date().required(\"Spouse Date of Birth is required\"),\n                  otherwise: Yup.date(),\n                }),\n                spouseGender: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string().required(\"Spouse Gender is required\"),\n                  otherwise: Yup.string(),\n                }),\n                spouseOccupation: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string().required(\"Spouse Occupation is required\"),\n                  otherwise: Yup.string(),\n                }),\n                spouseResidentialStatus: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string().required(\n                    \"Spouse Residential Status is required\"\n                  ),\n                  otherwise: Yup.string(),\n                }),\n                spouseEmail: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string()\n                    .email(\"Must be a valid email\")\n                    .max(255)\n                    .required(\"Spouse Email is required\"),\n                  otherwise: Yup.string(),\n                }),\n\n                //  additional Details (Add validation rules as needed)\n\n                providedLivingSupport: Yup.boolean().required(\n                  \"Please select an option\"\n                ),\n\n                isNewDependant: Yup.boolean().required(\n                  \"Please select an option\"\n                ),\n\n                additionalFirstName: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\"First Name is required\"),\n                  otherwise: Yup.string(),\n                }),\n                additionalMiddleInitial: Yup.string(),\n                additionalLastName: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\"Last Name is required\"),\n                  otherwise: Yup.string(),\n                }),\n                additionalSsnOrItin: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\n                    \"SSN/ITIN is required if married\"\n                  ),\n                  otherwise: Yup.string(),\n                }),\n                additionalApplyForItin: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\n                    \"Please select whether you want to apply for ITIN\"\n                  ),\n                  otherwise: Yup.string(),\n                }),\n                additionalDateOfBirth: Yup.date().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.date().required(\"Date of Birth is required\"),\n                  otherwise: Yup.date(),\n                }),\n                additionalGender: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\"Gender is required\"),\n                  otherwise: Yup.string(),\n                }),\n                additionalOccupation: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\"Occupation is required\"),\n                  otherwise: Yup.string(),\n                }),\n                additionalVisaType: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\"Residential Status is required\"),\n                  otherwise: Yup.string(),\n                }),\n                additionalEmail: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string()\n                    .email(\"Must be a valid email\")\n                    .max(255)\n                    .required(\"Email is required\"),\n                  otherwise: Yup.string(),\n                }),\n                additionalRelationship: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\"Relationship is required\"),\n                  otherwise: Yup.string(),\n                }),\n                additionalStayCount: Yup.number().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.number().required(\n                    \"No. of months dependent has stayed with you in U.S is required\"\n                  ),\n                  otherwise: Yup.number(),\n                }),\n              })}\n              onSubmit={(values, { setSubmitting, resetForm }) => {\n                setIsFilerDetailsLoading(true);\n                setSubmitting(true);\n                let payload = { ...values, id: id };\n                privateApiPOST(Api.personalContactDetails, payload)\n                  .then((response) => {\n                    const { status, data } = response;\n                    if (status === 200) {\n                      console.log(\"data\", data);\n                      setIsFilerDetailsLoading(false);\n                      handleFetchData();\n                      setSubmitting(false);\n                    }\n                  })\n                  .catch((error) => {\n                    console.log(\"Error\", error);\n                    setIsFilerDetailsLoading(false);\n                    setSubmitting(false);\n                  });\n              }}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values,\n                setFieldValue,\n              }) => (\n                <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                  <Grid container spacing={2}>\n                    {/* Left Side - Personal Details */}\n\n                    <Grid item lg={6} sm={6} xs={12}>\n                      <Box className={customStyles.leftSide}>\n                        <Typography variant=\"h4\" sx={{ marginBottom: \"16px\" }}>\n                          Personal Details\n                        </Typography>\n\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            justifyContent: \"space-between\",\n                            maxWidth: \"96%\",\n                          }}\n                        >\n                          <Typography\n                            variant=\"subtitle1\"\n                            color=\"textSecondary\"\n                            sx={{ marginTop: \"20px\", maxWidth: \"30%\" }}\n                          >\n                            Taxpayer Name\n                            <font color=\"red\" size=\"2\">\n                              (As Per SSN):\n                            </font>\n                          </Typography>\n\n                          <Box>\n                            <CustomInputTextField\n                              attribute=\"First Name\"\n                              attributeTextAlign=\"right\"\n                              is_required={true}\n                              error={Boolean(\n                                touched.firstName && errors.firstName\n                              )}\n                              fullWidth\n                              helperText={touched.firstName && errors.firstName}\n                              // label={\n                              //   <CustomLabel label=\"First Name\" required={true} />\n                              // }\n                              margin=\"normal\"\n                              name=\"firstName\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={values.firstName}\n                              variant=\"outlined\"\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Middle Initial\"\n                              attributeTextAlign=\"right\"\n                              is_required={false}\n                              error={Boolean(\n                                touched.middleName && errors.middleName\n                              )}\n                              fullWidth\n                              helperText={\n                                touched.middleName && errors.middleName\n                              }\n                              // label={\n                              //   <CustomLabel label=\"Middle Name\" required={false} />\n                              // }\n                              margin=\"normal\"\n                              name=\"middleName\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={values.middleName}\n                              variant=\"outlined\"\n                            />\n                            <CustomInputTextField\n                              attribute=\"Last Name\"\n                              attributeTextAlign=\"right\"\n                              is_required={true}\n                              error={Boolean(\n                                touched.lastName && errors.lastName\n                              )}\n                              fullWidth\n                              helperText={touched.lastName && errors.lastName}\n                              // label={\n                              //   <CustomLabel label=\"Last Name\" required={true} />\n                              // }\n                              margin=\"normal\"\n                              name=\"lastName\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={values.lastName}\n                              variant=\"outlined\"\n                            />\n                          </Box>\n                        </Box>\n\n                        <CustomInputTextField\n                          attribute=\"SSN\"\n                          attributeTextAlign=\"right\"\n                          is_required={true}\n                          error={Boolean(touched.ssn && errors.ssn)}\n                          fullWidth\n                          helperText={touched.ssn && errors.ssn}\n                          // label={<CustomLabel label=\"SSN\" required={true} />}\n                          margin=\"normal\"\n                          name=\"ssn\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={transform(values.ssn)}\n                          variant=\"outlined\"\n                        />\n                        <CustomInputTextField\n                          attribute=\"Date of Birth\"\n                          attributeTextAlign=\"right\"\n                          is_required={true}\n                          error={Boolean(\n                            touched.dateOfBirth && errors.dateOfBirth\n                          )}\n                          fullWidth\n                          helperText={touched.dateOfBirth && errors.dateOfBirth}\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Date of Birth\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"dateOfBirth\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          type=\"date\"\n                          value={values.dateOfBirth}\n                          variant=\"outlined\"\n                          InputLabelProps={{\n                            shrink: true, // This is important for the label to behave correctly\n                          }}\n                          InputProps={{\n                            style: {\n                              color: \"black\", // Customize the label color\n                            },\n                          }}\n                          inputProps={{\n                            // To disable the default placeholder\n                            placeholder: \"\",\n                            // Other attributes you might need\n                          }}\n                        />\n                        <CustomInputTextField\n                          attribute=\"Gender\"\n                          attributeTextAlign=\"right\"\n                          is_required={true}\n                          error={Boolean(touched.gender && errors.gender)}\n                          select\n                          fullWidth\n                          helperText={touched.gender && errors.gender}\n                          // label={<CustomLabel label=\"Gender\" required={true} />}\n                          margin=\"normal\"\n                          name=\"gender\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.gender}\n                          variant=\"outlined\"\n                        >\n                          <MenuItem value=\"MALE\">Male</MenuItem>\n                          <MenuItem value=\"FEMALE\">Female</MenuItem>\n                          <MenuItem value=\"Other\">Other</MenuItem>\n                        </CustomInputTextField>\n                        <CustomInputTextField\n                          attribute=\"Occupation / Job Title\"\n                          attributeTextAlign=\"right\"\n                          is_required={true}\n                          error={Boolean(\n                            touched.occupation && errors.occupation\n                          )}\n                          fullWidth\n                          helperText={touched.occupation && errors.occupation}\n                          // label={\n                          //   <CustomLabel label=\"Occupation\" required={true} />\n                          // }\n                          margin=\"normal\"\n                          name=\"occupation\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.occupation}\n                          variant=\"outlined\"\n                        />\n                        <CustomInputTextField\n                          attribute=\"Residential Status\"\n                          attributeTextAlign=\"right\"\n                          is_required={true}\n                          error={Boolean(\n                            touched.residentialStatus &&\n                              errors.residentialStatus\n                          )}\n                          fullWidth\n                          helperText={\n                            touched.residentialStatus &&\n                            errors.residentialStatus\n                          }\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Residential Status\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"residentialStatus\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.residentialStatus}\n                          variant=\"outlined\"\n                        />\n                      </Box>\n                    </Grid>\n\n                    {/* Right Side - Contact Details */}\n                    <Grid\n                      item\n                      lg={6}\n                      sm={6}\n                      xs={12}\n                      // sx={{ marginLeft: { xs: \"0px\", sm: \"60px\" } }}\n                    >\n                      <Box className={customStyles.rightSide}>\n                        <Typography variant=\"h4\" sx={{ marginBottom: \"16px\" }}>\n                          Contact Details\n                        </Typography>\n                        <Typography\n                          color={\"red\"}\n                          sx={{ marginLeft: \"10px\" }}\n                          variant=\"h5\"\n                        >\n                          (Provide U.S current communication Address)\n                        </Typography>\n                        <CustomInputTextField\n                          attribute=\"Street\"\n                          is_required={true}\n                          error={Boolean(touched.street && errors.street)}\n                          fullWidth\n                          helperText={touched.street && errors.street}\n                          // label={<CustomLabel label=\"Street\" required={true} />}\n                          margin=\"normal\"\n                          name=\"street\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.street}\n                          variant=\"outlined\"\n                        />\n                        <CustomInputTextField\n                          attribute=\"Apartment\"\n                          is_required={true}\n                          error={Boolean(touched.apartment && errors.apartment)}\n                          fullWidth\n                          helperText={touched.apartment && errors.apartment}\n                          // label={\n                          //   <CustomLabel label=\"Apartment\" required={true} />\n                          // }\n                          margin=\"normal\"\n                          name=\"apartment\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.apartment}\n                          variant=\"outlined\"\n                        />\n                        <CustomInputTextField\n                          attribute=\"City\"\n                          is_required={true}\n                          error={Boolean(touched.city && errors.city)}\n                          fullWidth\n                          helperText={touched.city && errors.city}\n                          // label={<CustomLabel label=\"City\" required={true} />}\n                          margin=\"normal\"\n                          name=\"city\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.city}\n                          variant=\"outlined\"\n                        />\n                        <CustomInputTextField\n                          attribute=\"State\"\n                          is_required={true}\n                          error={Boolean(touched.state && errors.state)}\n                          select\n                          fullWidth\n                          helperText={touched.state && errors.state}\n                          // label={<CustomLabel label=\"State\" required={true} />}\n                          margin=\"normal\"\n                          name=\"state\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.state}\n                          variant=\"outlined\"\n                        >\n                          {stateOptions.map((option) => (\n                            <MenuItem key={option.value} value={option.value}>\n                              {option.label}\n                            </MenuItem>\n                          ))}\n                        </CustomInputTextField>\n                        <CustomInputTextField\n                          attribute=\"Zip Code\"\n                          is_required={true}\n                          error={Boolean(touched.zipCode && errors.zipCode)}\n                          fullWidth\n                          helperText={touched.zipCode && errors.zipCode}\n                          // label={\n                          //   <CustomLabel label=\"Zip Code\" required={true} />\n                          // }\n                          margin=\"normal\"\n                          name=\"zipCode\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.zipCode}\n                          variant=\"outlined\"\n                        />\n                        <CustomInputTextField\n                          attribute=\"Country\"\n                          is_required={true}\n                          error={Boolean(touched.country && errors.country)}\n                          select\n                          fullWidth\n                          helperText={touched.country && errors.country}\n                          // label={\n                          //   <CustomLabel label=\"Country\" required={true} />\n                          // }\n                          margin=\"normal\"\n                          name=\"country\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.country}\n                          variant=\"outlined\"\n                        >\n                          {/* <MenuItem value=\"India\">India</MenuItem> */}\n                          <MenuItem value=\"USA\">USA</MenuItem>\n                          <MenuItem value=\"Other\">Other</MenuItem>\n                        </CustomInputTextField>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                            width: \"93%\",\n                            margin: \"10px 0\",\n                            maxHeight: \"60px\",\n                          }}\n                        >\n                          <Typography\n                            variant=\"body1\"\n                            sx={{\n                              width: { xs: \"30%\", sm: \"120px\" },\n                            }}\n                          >\n                            <span>Primary Phone</span>\n                            <span\n                              style={{\n                                color: \"red\",\n                                fontSize: \"0.875rem\",\n                                marginLeft: \"3px\",\n                              }}\n                            >\n                              *\n                            </span>\n                            &nbsp;:\n                          </Typography>\n\n                          <TextField\n                            attribute=\"Primary Phone\"\n                            error={Boolean(\n                              touched.primaryCountryCode &&\n                                errors.primaryCountryCode\n                            )}\n                            select\n                            helperText={\n                              touched.primaryCountryCode &&\n                              errors.primaryCountryCode\n                            }\n                            // label={\n                            //   <CustomLabel label=\"+91\" required={true} />\n                            // }\n                            margin=\"normal\"\n                            name=\"primaryCountryCode\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.primaryCountryCode}\n                            variant=\"outlined\"\n                            sx={{\n                              width: \"18%\",\n                              \"& .MuiOutlinedInput-root\": {\n                                \"& fieldset\": {\n                                  borderRadius: \"2px\",\n                                },\n                              },\n                              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                                {\n                                  border: \"0.1px solid #bdbdbd\",\n                                },\n                              \"& .MuiOutlinedInput-input\": {\n                                padding: \"10px\",\n                                backgroundColor: \"rgba(255,255,255,1)\",\n                              },\n                            }}\n                          >\n                            {countryCodes.map((option) => (\n                              <MenuItem key={option.value} value={option.value}>\n                                {option.label}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n\n                          <TextField\n                            error={Boolean(\n                              touched.primaryPhoneNumber &&\n                                errors.primaryPhoneNumber\n                            )}\n                            helperText={\n                              touched.primaryPhoneNumber &&\n                              errors.primaryPhoneNumber\n                            }\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Primary Phone Number\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"primaryPhoneNumber\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.primaryPhoneNumber}\n                            variant=\"outlined\"\n                            sx={{\n                              \"& .MuiOutlinedInput-root\": {\n                                \"& fieldset\": {\n                                  borderRadius: \"2px\",\n                                },\n                              },\n                              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                                {\n                                  border: \"0.1px solid #bdbdbd\",\n                                },\n                              \"& .MuiOutlinedInput-input\": {\n                                padding: \"10px\",\n                                backgroundColor: \"rgba(255,255,255,1)\",\n                              },\n                              width: { xs: \"50%\", sm: \"165px\" },\n                            }}\n                          />\n                        </Box>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                            width: \"93%\",\n                            margin: \"10px 0\",\n                            maxHeight: \"60px\",\n                          }}\n                        >\n                          <Typography\n                            variant=\"body1\"\n                            sx={{\n                              width: { xs: \"30%\", sm: \"120px\" },\n                            }}\n                          >\n                            <span>Secondary Phone</span>\n                            &nbsp;:\n                          </Typography>\n\n                          <TextField\n                            error={Boolean(\n                              touched.secondaryCountryCode &&\n                                errors.secondaryCountryCode\n                            )}\n                            select\n                            helperText={\n                              touched.secondaryCountryCode &&\n                              errors.secondaryCountryCode\n                            }\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Country Code\"\n                            //     required={false}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"secondaryCountryCode\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.secondaryCountryCode}\n                            variant=\"outlined\"\n                            sx={{\n                              \"& .MuiOutlinedInput-root\": {\n                                \"& fieldset\": {\n                                  borderRadius: \"2px\",\n                                },\n                              },\n                              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                                {\n                                  border: \"0.1px solid #bdbdbd\",\n                                },\n                              \"& .MuiOutlinedInput-input\": {\n                                padding: \"10px\",\n                                backgroundColor: \"rgba(255,255,255,1)\",\n                              },\n                              width: \"18%\",\n                            }}\n                          >\n                            {countryCodes.map((option) => (\n                              <MenuItem key={option.value} value={option.value}>\n                                {option.label}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n\n                          <TextField\n                            attribute=\"Secondary Phone\"\n                            error={Boolean(\n                              touched.secondaryPhoneNumber &&\n                                errors.secondaryPhoneNumber\n                            )}\n                            helperText={\n                              touched.secondaryPhoneNumber &&\n                              errors.secondaryPhoneNumber\n                            }\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Secondary Phone Number\"\n                            //     required={false}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"secondaryPhoneNumber\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.secondaryPhoneNumber}\n                            variant=\"outlined\"\n                            sx={{\n                              \"& .MuiOutlinedInput-root\": {\n                                \"& fieldset\": {\n                                  borderRadius: \"2px\",\n                                },\n                              },\n                              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                                {\n                                  border: \"0.1px solid #bdbdbd\",\n                                },\n                              \"& .MuiOutlinedInput-input\": {\n                                padding: \"10px\",\n                                backgroundColor: \"rgba(255,255,255,1)\",\n                              },\n                              width: { xs: \"50%\", sm: \"165px\" },\n                            }}\n                          />\n                        </Box>\n\n                        <CustomInputTextField\n                          attribute=\"Email Id\"\n                          is_required={true}\n                          error={Boolean(\n                            touched.contactEmail && errors.contactEmail\n                          )}\n                          fullWidth\n                          helperText={\n                            touched.contactEmail && errors.contactEmail\n                          }\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Contact Email\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"contactEmail\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.contactEmail}\n                          variant=\"outlined\"\n                        />\n                      </Box>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Box sx={{ margin: \"16px 0\" }}>\n                      <Grid container spacing={2}>\n                        <Grid\n                          item\n                          xs={10}\n                          sm={5}\n                          style={{ display: \"flex\", alignItems: \"center\" }}\n                        >\n                          <Typography variant=\"body1\">\n                            <CustomLabel\n                              label=\"Have you filed your taxes with Taxcooler in the last year?\"\n                              required={true}\n                            />\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={2} sm={1}>\n                          <select\n                            id=\"taxFiledLastYear\"\n                            name=\"taxFiledLastYear\"\n                            value={values.taxFiledLastYear}\n                            onChange={handleChange}\n                            style={{ width: \"100%\" }}\n                          >\n                            <option value=\"\">Select</option>\n                            {/* Add an empty option */}\n                            <option value={true}>Yes</option>\n                            <option value={false}>No</option>\n                          </select>\n                        </Grid>\n                      </Grid>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Box sx={{ margin: \"16px 0\" }}>\n                      <Grid container spacing={2}>\n                        <Grid\n                          item\n                          xs={8}\n                          sm={5}\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Typography variant=\"body1\">\n                            <CustomLabel\n                              label=\"Taxpayer Status\"\n                              required={true}\n                            />\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={4} sm={1}>\n                          <select\n                            id=\"taxPayerStatus\"\n                            name=\"taxPayerStatus\"\n                            value={values.taxPayerStatus}\n                            onChange={handleChange}\n                            style={{ width: \"100%\" }}\n                          >\n                            <option value=\"\">Select Status</option>{\" \"}\n                            {/* Add an empty option */}\n                            <option value=\"SINGLE\">Single</option>\n                            <option value=\"MARRIED\">Married</option>\n                          </select>\n                        </Grid>\n                      </Grid>\n                    </Box>\n                  </Grid>\n                  {values.taxPayerStatus === \"MARRIED\" && (\n                    <Grid container spacing={2}>\n                      {/* Left Side - Spouse Details */}\n                      <Grid item lg={6} sm={6} xs={12}>\n                        <Typography variant=\"h5\">Spouse Details</Typography>\n                        <Grid container spacing={2}>\n                          <CustomInputTextField\n                            attribute=\"First Name\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"First Name\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseFirstName\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.spouseFirstName}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseFirstName && errors.spouseFirstName\n                            )}\n                            helperText={\n                              touched.spouseFirstName && errors.spouseFirstName\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Middle Initial\"\n                            is_required={false}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Spouse Middle Initial\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseMiddleInitial\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.spouseMiddleInitial}\n                            variant=\"outlined\"\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Last Name\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Spouse Last Name\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseLastName\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.spouseLastName}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseLastName && errors.spouseLastName\n                            )}\n                            helperText={\n                              touched.spouseLastName && errors.spouseLastName\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"SSN/ITIN\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Spouse SSN/ITIN\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseSsnOrItin\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={transform(values.spouseSsnOrItin)}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseSsnOrItin && errors.spouseSsnOrItin\n                            )}\n                            helperText={\n                              touched.spouseSsnOrItin && errors.spouseSsnOrItin\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Do you want to apply for ITIN?\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Do you want to apply for ITIN?\"\n                            //     required={true}\n                            //   />\n                            // }\n                            select\n                            margin=\"normal\"\n                            name=\"spouseApplyForItin\"\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.spouseApplyForItin}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseApplyForItin &&\n                                errors.spouseApplyForItin\n                            )}\n                            helperText={\n                              touched.spouseApplyForItin &&\n                              errors.spouseApplyForItin\n                            }\n                          >\n                            <MenuItem value={false}>No</MenuItem>\n                            <MenuItem value={true}>Yes</MenuItem>\n                          </CustomInputTextField>\n                          {values.spouseApplyForItin === true && (\n                            <ButtonBase\n                              onClick={() =>\n                                handleDownloadTemplate(\"ITIN_Information.xls\")\n                              }\n                              sx={{\n                                marginTop: \"2px\",\n                                textDecoration: \"underline\",\n                              }}\n                              disableTouchRipple\n                            >\n                              Download ITIN Information Excel\n                            </ButtonBase>\n                          )}\n                        </Grid>\n                      </Grid>\n\n                      {/* Right Side - Spouse Contact */}\n                      <Grid item lg={6} sm={6} xs={12}>\n                        <Typography variant=\"h5\">Spouse Contact</Typography>\n                        <Grid container spacing={2}>\n                          <CustomInputTextField\n                            attribute=\"Date of Birth\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Date of Birth\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseDateOfBirth\"\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            type=\"date\"\n                            value={values.spouseDateOfBirth}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseDateOfBirth &&\n                                errors.spouseDateOfBirth\n                            )}\n                            helperText={\n                              touched.spouseDateOfBirth &&\n                              errors.spouseDateOfBirth\n                            }\n                            InputLabelProps={{\n                              shrink: true, // This is important for the label to behave correctly\n                            }}\n                            InputProps={{\n                              style: {\n                                color: \"black\", // Customize the label color\n                              },\n                            }}\n                            inputProps={{\n                              // To disable the default placeholder\n                              placeholder: \"\",\n                              // Other attributes you might need\n                            }}\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Gender\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Spouse Gender\"\n                            //     required={true}\n                            //   />\n                            // }\n                            select\n                            margin=\"normal\"\n                            name=\"spouseGender\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.spouseGender}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseGender && errors.spouseGender\n                            )}\n                            helperText={\n                              touched.spouseGender && errors.spouseGender\n                            }\n                          >\n                            <MenuItem value=\"MALE\">Male</MenuItem>\n                            <MenuItem value=\"FEMALE\">Female</MenuItem>\n                            <MenuItem value=\"Other\">Other</MenuItem>\n                          </CustomInputTextField>\n\n                          <CustomInputTextField\n                            attribute=\"Occupation / Job Title\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Spouse Occupation / Job Title\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseOccupation\"\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.spouseOccupation}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseOccupation &&\n                                errors.spouseOccupation\n                            )}\n                            helperText={\n                              touched.spouseOccupation &&\n                              errors.spouseOccupation\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Residential Status\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Spouse Residential Status\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseResidentialStatus\"\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.spouseResidentialStatus}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseResidentialStatus &&\n                                errors.spouseResidentialStatus\n                            )}\n                            helperText={\n                              touched.spouseResidentialStatus &&\n                              errors.spouseResidentialStatus\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Email Id\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Spouse Email Id\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseEmail\"\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.spouseEmail}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseEmail && errors.spouseEmail\n                            )}\n                            helperText={\n                              touched.spouseEmail && errors.spouseEmail\n                            }\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  )}\n\n                  <Grid container>\n                    <Grid\n                      container\n                      sx={{\n                        marginTop: \"36px\",\n                        marginBottom: \"24px\",\n                      }}\n                    >\n                      <Grid\n                        item\n                        xs={10}\n                        sm={9}\n                        sx={{ display: \"flex\", alignItems: \"center\" }}\n                      >\n                        <Typography variant=\"body1\">\n                          <CustomLabel\n                            label=\" Have you (or your spouse, if married) provided living\n                        support to your kids and/or dependents during the tax\n                        year?\"\n                          />\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={2}>\n                        <CustomInputTextField\n                          attribute=\"\"\n                          is_required={true}\n                          // label={<CustomLabel label=\"\" />}\n                          select\n                          margin=\"normal\"\n                          name=\"providedLivingSupport\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.providedLivingSupport}\n                          variant=\"outlined\"\n                          error={Boolean(\n                            touched.providedLivingSupport &&\n                              errors.providedLivingSupport\n                          )}\n                          helperText={\n                            touched.providedLivingSupport &&\n                            errors.providedLivingSupport\n                          }\n                        >\n                          <MenuItem value={true}>Yes</MenuItem>\n                          <MenuItem value={false}>No</MenuItem>\n                        </CustomInputTextField>\n                      </Grid>\n                    </Grid>\n                    <Grid>\n                      <Typography\n                        variant=\"body1\"\n                        style={{ color: \"blue\", wordSpacing: \"2px\" }}\n                      >\n                        NOTE: Make sure the kids or dependants reported in your\n                        (Taxpayer) 2023 Tax Return are not claimed as dependants\n                        in any other 2023 Individual Tax Returns.\n                      </Typography>\n                    </Grid>\n\n                    {values.providedLivingSupport === true ? (\n                      <Grid item xs={12}>\n                        <Button\n                          type=\"button\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            // Toggle between true and false\n                            setFieldValue(\n                              \"isNewDependant\",\n                              !values.isNewDependant\n                            );\n                          }}\n                          sx={{\n                            display: \"block\",\n                            width: \"170px\",\n                            margin: \"10px\",\n                          }}\n                        >\n                          {values.isNewDependant\n                            ? \"Remove Dependant\"\n                            : \"Add Dependant\"}\n                        </Button>\n                      </Grid>\n                    ) : null}\n\n                    {values.isNewDependant && (\n                      <Grid container spacing={2}>\n                        {/* Left Side - additional Details */}\n                        <Grid item lg={6} sm={6} xs={12}>\n                          <Typography variant=\"h5\">\n                            Additional Details\n                          </Typography>\n                          <Grid container spacing={2}>\n                            <CustomInputTextField\n                              attribute=\"First Name\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"First Name\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalFirstName`}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={values.additionalFirstName}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalFirstName &&\n                                errors.additionalFirstName\n                              }\n                              helperText={\n                                touched.additionalFirstName &&\n                                errors.additionalFirstName\n                              }\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Middle Initial\"\n                              is_required={false}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Middle Initial\"\n                              //     required={false}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalMiddleInitial`}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={values.additionalMiddleInitial}\n                              variant=\"outlined\"\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Last Name\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Last Name\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalLastName`}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={values.additionalLastName}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalLastName &&\n                                errors.additionalLastName\n                              }\n                              helperText={\n                                touched.additionalLastName &&\n                                errors.additionalLastName\n                              }\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"SSN/ITIN\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel label=\"SSN/ITIN\" required={true} />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalSsnOrItin`}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={transform(values.additionalSsnOrItin)}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalSsnOrItin &&\n                                errors.additionalSsnOrItin\n                              }\n                              helperText={\n                                touched.additionalSsnOrItin &&\n                                errors.additionalSsnOrItin\n                              }\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Do you want to apply for ITIN?\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Do you want to apply for ITIN?\"\n                              //     required={true}\n                              //   />\n                              // }\n                              select\n                              margin=\"normal\"\n                              name={`additionalApplyForItin`}\n                              onBlur={handleBlur}\n                              fullWidth\n                              onChange={handleChange}\n                              value={values.additionalApplyForItin}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalApplyForItin &&\n                                errors.additionalApplyForItin\n                              }\n                              helperText={\n                                touched.additionalApplyForItin &&\n                                errors.additionalApplyForItin\n                              }\n                            >\n                              <MenuItem value={false}>No</MenuItem>\n                              <MenuItem value={true}>Yes</MenuItem>\n                            </CustomInputTextField>\n                            {values.additionalApplyForItin === true && (\n                              <ButtonBase\n                                onClick={() =>\n                                  handleDownloadTemplate(\"ITIN_Information.xls\")\n                                }\n                                sx={{\n                                  marginTop: \"2px\",\n                                  textDecoration: \"underline\",\n                                }}\n                                disableTouchRipple\n                              >\n                                Download ITIN Information Excel\n                              </ButtonBase>\n                            )}\n\n                            <CustomInputTextField\n                              attribute=\"Relationship\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Relationship\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalRelationship`}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={values.additionalRelationship}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalRelationship &&\n                                errors.additionalRelationship\n                              }\n                              helperText={\n                                touched.additionalRelationship &&\n                                errors.additionalRelationship\n                              }\n                            />\n                          </Grid>\n                        </Grid>\n\n                        {/* Right Side - additional Contact */}\n                        <Grid item lg={6} sm={6} xs={12}>\n                          <Typography variant=\"h5\">\n                            Additional Contact\n                          </Typography>\n                          <Grid container spacing={2}>\n                            <CustomInputTextField\n                              attribute=\"Dependent DOB\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Date of Birth\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalDateOfBirth`}\n                              onBlur={handleBlur}\n                              fullWidth\n                              onChange={handleChange}\n                              type=\"date\"\n                              value={values.additionalDateOfBirth}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalDateOfBirth &&\n                                errors.additionalDateOfBirth\n                              }\n                              helperText={\n                                touched.additionalDateOfBirth &&\n                                errors.additionalDateOfBirth\n                              }\n                              InputLabelProps={{\n                                shrink: true, // This is important for the label to behave correctly\n                              }}\n                              InputProps={{\n                                style: {\n                                  color: \"black\", // Customize the label color\n                                },\n                              }}\n                              inputProps={{\n                                // To disable the default placeholder\n                                placeholder: \"\",\n                                // Other attributes you might need\n                              }}\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Gender\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel label=\"Gender\" required={true} />\n                              // }\n                              select\n                              margin=\"normal\"\n                              name={`additionalGender`}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={values.additionalGender}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalGender &&\n                                errors.additionalGender\n                              }\n                              helperText={\n                                touched.additionalGender &&\n                                errors.additionalGender\n                              }\n                            >\n                              <MenuItem value=\"MALE\">Male</MenuItem>\n                              <MenuItem value=\"FEMALE\">Female</MenuItem>\n                              <MenuItem value=\"Other\">Other</MenuItem>\n                            </CustomInputTextField>\n\n                            <CustomInputTextField\n                              attribute=\"Occupation / Job Title\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Occupation / Job Title\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalOccupation`}\n                              onBlur={handleBlur}\n                              fullWidth\n                              onChange={handleChange}\n                              value={values.additionalOccupation}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalOccupation &&\n                                errors.additionalOccupation\n                              }\n                              helperText={\n                                touched.additionalOccupation &&\n                                errors.additionalOccupation\n                              }\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Visa Type\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Visa Type\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalVisaType`}\n                              onBlur={handleBlur}\n                              select\n                              fullWidth\n                              onChange={handleChange}\n                              value={values.additionalVisaType}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalVisaType &&\n                                errors.additionalVisaType\n                              }\n                              helperText={\n                                touched.additionalVisaType &&\n                                errors.additionalVisaType\n                              }\n                            >\n                              {[\n                                \"H4\",\n                                \"US Citizen\",\n                                \"L2\",\n                                \"Green Card\",\n                                \"Other\",\n                              ].map((each, id) => {\n                                return (\n                                  <MenuItem key={id} value={each}>\n                                    {each}\n                                  </MenuItem>\n                                );\n                              })}\n                            </CustomInputTextField>\n\n                            <CustomInputTextField\n                              attribute=\"Email Id\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel label=\"Email Id\" required={true} />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalEmail`}\n                              onBlur={handleBlur}\n                              fullWidth\n                              onChange={handleChange}\n                              value={values.additionalEmail}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalEmail &&\n                                errors.additionalEmail\n                              }\n                              helperText={\n                                touched.additionalEmail &&\n                                errors.additionalEmail\n                              }\n                            />\n                            <CustomInputTextField\n                              attribute=\"No. of months dependent has stayed with you in U.S\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"No. of months dependent has stayed with you in U.S\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalStayCount`}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"number\"\n                              fullWidth\n                              value={values.additionalStayCount}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalStayCount &&\n                                errors.additionalStayCount\n                              }\n                              helperText={\n                                touched.additionalStayCount &&\n                                errors.additionalStayCount\n                              }\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    )}\n                    <Box>\n                      {isDependantDetailsLoading ? (\n                        <CircularProgress />\n                      ) : (\n                        <TableContainer\n                          sx={{\n                            marginTop: \"32px\",\n                            paddingBottom: { xs: \"10px\", sm: \"0px\" },\n                          }}\n                        >\n                          <Typography variant=\"h5\" sx={{ textAlign: \"center\" }}>\n                            Existing Dependant Details\n                          </Typography>\n                          <Table\n                            sx={{\n                              borderCollapse: \"collapse\",\n                            }}\n                            aria-label=\"Place Order Series Table\"\n                          >\n                            <TableHead>\n                              <TableRow>\n                                <TableCell className={customStyles.tableHeader}>\n                                  First Name\n                                </TableCell>\n                                <TableCell className={customStyles.tableHeader}>\n                                  Last Name\n                                </TableCell>\n                                <TableCell className={customStyles.tableHeader}>\n                                  SSN/ITIN\n                                </TableCell>\n                                <TableCell className={customStyles.tableHeader}>\n                                  Relationship\n                                </TableCell>\n                                <TableCell className={customStyles.tableHeader}>\n                                  Visa Type\n                                </TableCell>\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              {dependantDetails.length > 0 &&\n                                dependantDetails.map((row, index) => (\n                                  <TableRow key={index}>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      {row.additionalFirstName}\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      {row.additionalLastName}\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      {transform(row.additionalSsnOrItin)}\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      {row.additionalRelationship}\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      {row.additionalVisaType}\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      <Button\n                                        disabled={isFilerDetailsLoading}\n                                        startIcon={<DeleteIcon />}\n                                        size=\"small\"\n                                        onClick={() => {\n                                          handleDeleteDependant(row.id);\n                                        }}\n                                        className={customStyles.buttons}\n                                      >\n                                        Delete{\" \"}\n                                        {isFilerDetailsLoading && (\n                                          <CircularProgress\n                                            sx={{ ml: 1 }}\n                                            size={14}\n                                          />\n                                        )}\n                                      </Button>\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.mobileView}\n                                    >\n                                      <Box>\n                                        <Box\n                                          sx={{\n                                            display: \"flex\",\n                                            flexWrap: \"wrap\",\n                                            justifyContent: \"space-between\",\n                                            marginTop: \"16px\",\n                                          }}\n                                        >\n                                          <Box sx={{ marginTop: \"3px\" }}>\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellHeader\n                                              }\n                                            >\n                                              First Name\n                                            </Typography>\n\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellValue\n                                              }\n                                            >\n                                              {row.additionalFirstName}\n                                            </Typography>\n                                          </Box>\n                                          <Box sx={{ marginTop: \"3px\" }}>\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellHeader\n                                              }\n                                            >\n                                              Last Name\n                                            </Typography>\n\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellValue\n                                              }\n                                            >\n                                              {row.additionalLastName}\n                                            </Typography>\n                                          </Box>\n                                          <Box sx={{ marginTop: \"3px\" }}>\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellHeader\n                                              }\n                                            >\n                                              RelationShip\n                                            </Typography>\n\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellValue\n                                              }\n                                            >\n                                              {row.additionalRelationship}\n                                            </Typography>\n                                          </Box>\n                                        </Box>\n                                        <Box\n                                          sx={{\n                                            display: \"flex\",\n                                            flexWrap: \"wrap\",\n                                            justifyContent: \"space-between\",\n                                            marginTop: \"16px\",\n                                          }}\n                                        >\n                                          <Box sx={{ marginTop: \"3px\" }}>\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellHeader\n                                              }\n                                            >\n                                              Visa Type\n                                            </Typography>\n\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellValue\n                                              }\n                                            >\n                                              {row.additionalVisaType}\n                                            </Typography>\n                                          </Box>\n\n                                          <Box sx={{ marginTop: \"3px\" }}>\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellHeader\n                                              }\n                                            >\n                                              SSN/ITIN\n                                            </Typography>\n\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellValue\n                                              }\n                                            >\n                                              {transform(\n                                                row.additionalSsnOrItin\n                                              )}\n                                            </Typography>\n                                          </Box>\n\n                                          <Button\n                                            disabled={isFilerDetailsLoading}\n                                            startIcon={<DeleteIcon />}\n                                            size=\"small\"\n                                            onClick={() => {\n                                              handleDeleteDependant(row.id);\n                                            }}\n                                          >\n                                            Delete{\" \"}\n                                            {isFilerDetailsLoading && (\n                                              <CircularProgress\n                                                sx={{ ml: 1 }}\n                                                size={14}\n                                              />\n                                            )}\n                                          </Button>\n                                        </Box>\n                                      </Box>\n                                    </TableCell>\n                                  </TableRow>\n                                ))}\n                            </TableBody>\n                          </Table>\n\n                          <Typography\n                            variant=\"h5\"\n                            sx={{\n                              textAlign: \"center\",\n                              color: \"red\",\n                              marginTop: \"15px\",\n                            }}\n                          >\n                            TO MODIFY EXISTING DEPENDENT DETAILS, DELETE THE\n                            SAME and then CLICK on \"Add Additional Dependents\"\n                          </Typography>\n                        </TableContainer>\n                      )}\n                    </Box>\n                    <Grid item xs={12}>\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"flex-end\",\n                          alignItems: \"flex-end\",\n                          marginTop: { xs: \"8px\", sm: \"16px\" },\n                        }}\n                      >\n                        <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                        >\n                          SAVE\n                        </Button>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </form>\n              )}\n            </Formik>\n          </Box>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default FilerDetails;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Typography,\n  Grid,\n  Button,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  CircularProgress,\n  Tooltip,\n  ButtonBase,\n} from \"@mui/material\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\"; // Import Yup for validation\nimport TextField from \"@mui/material/TextField\";\nimport Api from \"../../components/Api\";\nimport { privateApiPOST } from \"../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst IncomeDetails = ({\n  id,\n  data,\n  handleFetchData,\n  handleDownloadTemplate,\n}) => {\n  const [isIncomeDetailsLoading, setIsIncomeDetailsLoading] = useState(false);\n\n  const initialValues = {\n    interestIncome: data[\"interestIncome\"],\n    dividendIncome: data[\"dividendIncome\"],\n    soldStocks: data[\"soldStocks\"],\n    soldCrypto: data[\"soldCrypto\"],\n    foreignIncome: data[\"foreignIncome\"],\n    retirementAccounts: data[\"retirementAccounts\"],\n    stateTaxRefund: data[\"stateTaxRefund\"],\n    foreignBankAccount: data[\"foreignBankAccount\"],\n    foreignAssets: data[\"foreignAssets\"],\n    rentalIncome: data[\"rentalIncome\"],\n    income1099: data[\"income1099\"],\n    incomeDescription: data[\"incomeDescription\"],\n    incomeAmount: data[\"incomeAmount\"],\n    addAdditionalInformation: false,\n  };\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Container>\n        {isIncomeDetailsLoading ? (\n          <CircularProgress />\n        ) : (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={Yup.object().shape({\n              interestIncome: Yup.boolean(),\n              dividendIncome: Yup.boolean(),\n              soldStocks: Yup.boolean(),\n              soldCrypto: Yup.boolean(),\n              foreignIncome: Yup.boolean(),\n              retirementAccounts: Yup.boolean(),\n              stateTaxRefund: Yup.boolean(),\n              foreignBankAccount: Yup.boolean(),\n              foreignAssets: Yup.boolean(),\n              rentalIncome: Yup.boolean(),\n              income1099: Yup.boolean(),\n              incomeDescription: Yup.string().when(\"addAdditionalInformation\", {\n                is: true,\n                then: Yup.string().required(\"Income Description is Required\"),\n                otherwise: Yup.string(),\n              }),\n              incomeAmount: Yup.number().when(\"addAdditionalInformation\", {\n                is: true,\n                then: Yup.number().required(\"Income Amount is Required\"),\n                otherwise: Yup.number(),\n              }),\n              addAdditionalInformation: Yup.boolean(),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              setIsIncomeDetailsLoading(true);\n              setSubmitting(true);\n              let payload = { ...values, id: id };\n              privateApiPOST(Api.incomeDetails, payload)\n                .then((response) => {\n                  const { status, data } = response;\n                  if (status === 200) {\n                    console.log(\"data\", data);\n                    setIsIncomeDetailsLoading(false);\n                    handleFetchData();\n                    setSubmitting(false);\n                  }\n                })\n                .catch((error) => {\n                  console.log(\"Error\", error);\n                  setIsIncomeDetailsLoading(false);\n                  setSubmitting(false);\n                });\n            }}\n          >\n            {({\n              values,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              errors,\n              touched,\n            }) => (\n              <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <Grid container spacing={2}>\n                  {/* Interest Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have any Interest Income?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"interestIncome\"\n                        value={values.interestIncome}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Upload 1099-INT forms and Interest received in Foreign Banks\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Dividend Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have any Dividend Income?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"dividendIncome\"\n                        value={values.dividendIncome}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Upload 1099-DIV forms and dividends received in Foreign Banks\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Sold Stocks */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Did you sell any stocks in 2022?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"soldStocks\"\n                        value={values.soldStocks}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Upload 1099-B, Gain/Loss statement in excel format. If it is ESPP/RSU stocks, upload adjusted cost basis details as well.\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Sold Crypto */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Did you sell any Crypto Currency in 2022?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"soldCrypto\"\n                        value={values.soldCrypto}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Download and fill Crypto CSV.\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                      {values.soldCrypto ? (\n                        <ButtonBase\n                          onClick={() =>\n                            handleDownloadTemplate(\"Crypto_Information_1.xls\")\n                          }\n                          sx={{\n                            marginTop: \"2px\",\n                            textDecoration: \"underline\",\n                          }}\n                          disableTouchRipple\n                        >\n                          Download and fill Crypto Excel\n                        </ButtonBase>\n                      ) : null}\n                    </FormControl>\n                  </Grid>\n                  {/* Foreign Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have any foreign country income in 2022?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"foreignIncome\"\n                        value={values.foreignIncome}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n\n                      <Tooltip\n                        title=\"Upload Total income received in Foreign Country and Total taxes paid in Foreign Country\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Contributions/Distributions */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have contributions/distributions to/from\n                        retirement accounts in year 2022?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"retirementAccounts\"\n                        value={values.retirementAccounts}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"401k/IRA etc., which is not mentioned in your W2. Upload Bank Statement 1099 R in Upload Tax Docs section\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* State Tax Refund */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Did you get State tax refund(s) in 2022?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"stateTaxRefund\"\n                        value={values.stateTaxRefund}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"If yes, upload 1099 G you might have received from State in Upload Tax Docs section\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Foreign Bank Account */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have Account Balance in Foreign banks exceeding\n                        more than $10,000?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"foreignBankAccount\"\n                        value={values.foreignBankAccount}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"As per recent IRS laws, you need to report if the combined investments(stocks/bonds/real estate) of all your foreign accounts exceeds $10,000 on at least 1 day.\n                        You do not need to pay any tax on this amount. A separate form need to be sent to IRS\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                      {values.foreignBankAccount ? (\n                        <ButtonBase\n                          onClick={() =>\n                            handleDownloadTemplate(\"FBAR_Information_2022.xls\")\n                          }\n                          sx={{\n                            marginTop: \"2px\",\n                            textDecoration: \"underline\",\n                          }}\n                          disableTouchRipple\n                        >\n                          Download and fill FBAR Excel\n                        </ButtonBase>\n                      ) : null}\n                    </FormControl>\n                  </Grid>\n\n                  {/* Foreign Assets */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have Foreign Assets value more than $50,000 at\n                        any time during the tax year?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"foreignAssets\"\n                        value={values.foreignAssets}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"As per recent IRS laws, you need to report if the combined investments(stocks/bonds/Accounts/Partnerships) of all your foreign assets exceeds $50,000 on at least 1 day in year 2022. You do not need to pay any tax on this amount. You need to report these details to avoid penalties.\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                      {values.foreignAssets ? (\n                        <ButtonBase\n                          onClick={() =>\n                            handleDownloadTemplate(\n                              \"FBAR_Information_2022_1.xls\"\n                            )\n                          }\n                          sx={{\n                            marginTop: \"2px\",\n                            textDecoration: \"underline\",\n                          }}\n                          disableTouchRipple\n                        >\n                          Download and fill FBAR Excel(Financial Assets Tab)\n                        </ButtonBase>\n                      ) : null}\n                    </FormControl>\n                  </Grid>\n\n                  {/* Rental Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have Rental Income in Foreign Country/USA?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"rentalIncome\"\n                        value={values.rentalIncome}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n\n                  {/* 1099-Misc/1099-NEC Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have 1099-Misc/1099-NEC Income in year 2022?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"income1099\"\n                        value={values.income1099}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Upload 1099 Misc / 1099 NEC\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid\n                    container\n                    spacing={2}\n                    sx={{\n                      marginTop: \"30px\",\n                      marginBottom: \"30px\",\n                      marginLeft: \"0px\",\n                    }}\n                  >\n                    <Grid item xs={12} className=\"leftSide\">\n                      <Typography variant=\"h5\">\n                        Add other Income Information\n                      </Typography>\n\n                      <CustomInputTextField\n                        error={Boolean(\n                          touched.incomeDescription && errors.incomeDescription\n                        )}\n                        fullWidth\n                        helperText={\n                          touched.incomeDescription && errors.incomeDescription\n                        }\n                        attribute=\"Income Description\"\n                        margin=\"normal\"\n                        name=\"incomeDescription\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.incomeDescription}\n                        variant=\"outlined\"\n                      />\n\n                      <CustomInputTextField\n                        error={Boolean(\n                          touched.incomeAmount && errors.incomeAmount\n                        )}\n                        fullWidth\n                        helperText={touched.incomeAmount && errors.incomeAmount}\n                        attribute=\"Income Amount\"\n                        margin=\"normal\"\n                        name=\"incomeAmount\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.incomeAmount}\n                        variant=\"outlined\"\n                        type=\"number\"\n                      />\n\n                      {/* <Grid item xs={12} sm={6}>\n                        <Button\n                          variant={\n                            values.addAdditionalInformation\n                              ? \"contained\"\n                              : \"outlined\"\n                          }\n                          color=\"primary\"\n                          name=\"addAdditionalInformation\"\n                          onClick={() =>\n                            handleChange(!values.addAdditionalInformation)\n                          }\n                          value={values.addAdditionalInformation}\n                        >\n                          Add Additional Information\n                        </Button>\n                      </Grid> */}\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    paddingBottom: { xs: \"20px\" },\n                  }}\n                >\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Save\n                  </Button>\n                </Box>\n              </Form>\n            )}\n          </Formik>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default IncomeDetails;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  Button,\n  CircularProgress,\n  FormControl,\n} from \"@mui/material\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\"; // Import Yup for validation\nimport Api from \"../../components/Api\";\nimport { privateApiPOST } from \"../../components/PrivateRoute\";\nimport CustomInputTextField from \"./../../components/CustomInputField\";\n\nconst validationSchema = Yup.object().shape({\n  bankingType: Yup.string().required(\"Banking Type is required\"),\n  bankName: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Bank Name is required\"),\n  }),\n  accountHolderName: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Account Holder Name is required\"),\n  }),\n  ownership: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Ownership is required\"),\n  }),\n  routingNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .matches(/^\\d{9}$/, \"Routing Number must be a valid 9-digit number\")\n      .required(\"Routing Number is required\"),\n  }),\n  confirmRoutingNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .required(\"Confirm Routing Number is required\")\n      .oneOf([Yup.ref(\"routingNumber\"), null], \"Routing Numbers must match\"),\n  }),\n  accountNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Account Number is required\"),\n  }),\n  confirmAccountNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .required(\"Confirm Account Number is required\")\n      .oneOf([Yup.ref(\"accountNumber\"), null], \"Account Numbers must match\"),\n  }),\n  accountType: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Account Type is required\"),\n  }),\n  confirmAccountType: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .required(\"Confirm Account Type is required\")\n      .oneOf([Yup.ref(\"accountType\"), null], \"Account Types must match\"),\n  }),\n});\n\nconst BankDetails = ({ id, data, handleFetchData }) => {\n  const [isBankDetailsLoading, setIsBankDetailsLoading] = useState(false);\n\n  const initialValues = {\n    bankingType: data[\"bankingType\"],\n    bankName: data[\"bankName\"],\n    accountHolderName: data[\"accountHolderName\"],\n    ownership: data[\"ownership\"],\n    routingNumber: data[\"routingNumber\"],\n    confirmRoutingNumber: data[\"confirmRoutingNumber\"],\n    accountNumber: data[\"accountNumber\"],\n    confirmAccountNumber: data[\"confirmAccountNumber\"],\n    accountType: data[\"accountType\"],\n    confirmAccountType: data[\"confirmAccountType\"],\n  };\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Container>\n        {isBankDetailsLoading ? (\n          <CircularProgress />\n        ) : (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              setIsBankDetailsLoading(true);\n              setSubmitting(true);\n              let payload = { ...values, id: id };\n              privateApiPOST(Api.bankDetails, payload)\n                .then((response) => {\n                  const { status, data } = response;\n                  if (status === 200) {\n                    console.log(\"data\", data);\n                    setIsBankDetailsLoading(false);\n                    handleFetchData();\n                    setSubmitting(false);\n                  }\n                })\n                .catch((error) => {\n                  console.log(\"Error\", error);\n                  setIsBankDetailsLoading(false);\n                  setSubmitting(false);\n                });\n            }}\n          >\n            {({ values, handleChange, errors, touched, handleBlur }) => (\n              <Form>\n                <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\n                  <Box\n                    width=\"98%\"\n                    align=\"left\"\n                    sx={{\n                      border: \"1px solid #000000\",\n                      padding: \"20px\",\n                      marginBottom: \"20px\",\n                      backgroundColor: \"#f7f7f7\",\n                    }}\n                  >\n                    <fieldset>\n                      <legend>Bank Details</legend>\n                      <br />\n                      <Typography\n                        color=\"brown\"\n                        variant=\"h4\"\n                        sx={{ marginTop: \"10px\" }}\n                      >\n                        <b>Important Note</b>\n                      </Typography>\n                      <Typography\n                        align=\"justify\"\n                        sx={{ marginTop: \"5px\", wordSpacing: \"3px\" }}\n                      >\n                        The IRS and certain State Revenue Departments facilitate\n                        DIRECT DEPOSIT / WITHDRAWAL of Tax Refund or Tax Dues on\n                        the Tax Returns. If you are interested in availing this\n                        option, we request you to kindly input the following\n                        details. You may also provide multiple bank accounts for\n                        IRS to direct deposit your Tax Refund in different\n                        accounts.\n                      </Typography>\n                      <br />\n                      <br />\n                    </fieldset>\n                  </Box>\n                  <Grid\n                    container\n                    sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}\n                  >\n                    <Grid\n                      item\n                      xs={10}\n                      sm={4}\n                      style={{ display: \"flex\", alignItems: \"center\" }}\n                    >\n                      <Typography variant=\"body1\">\n                        I prefer to receive my tax refunds by way of\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={2} sm={4}>\n                      <select\n                        id=\"bankingType\"\n                        name=\"bankingType\"\n                        value={values.bankingType}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        style={{ width: \"100%\" }}\n                      >\n                        <option value=\"\">Select Option</option>\n                        <option value=\"DIRECT DEPOSIT INTO MY BANK ACCOUNT\">\n                          Direct deposit into my bank account\n                        </option>\n                        <option value=\"PAPER CHECK\">Paper Check</option>\n                      </select>\n                      {touched.bankingType && errors.bankingType && (\n                        <div className=\"error\">{errors.bankingType}</div>\n                      )}\n                    </Grid>\n                    <Grid>\n                      {\" \"}\n                      <Typography\n                        variant=\"h5\"\n                        sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}\n                      >\n                        Bank Account Information\n                      </Typography>\n                      <Typography\n                        sx={{\n                          marginTop: \"30px\",\n                          marginLeft: \"15px\",\n                          color: \"red\",\n                        }}\n                      >\n                        Note: Please understand that there is no risk by\n                        entering Bank Account and Routing Numbers\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                {/* Additional Fields for Direct Deposit */}\n\n                <Grid>\n                  <Grid\n                    container\n                    spacing={2}\n                    sx={{\n                      border: \"1px solid #000000\",\n                      padding: \"20px\",\n                      marginBottom: \"20px\",\n                      backgroundColor: \"#C7DFF0\",\n                    }}\n                  >\n                    <Grid item lg={6} sm={6} xs={12}>\n                      <CustomInputTextField\n                        attribute=\"Bank Name\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"bankName\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.bankName}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(touched.bankName && errors.bankName)}\n                        helperText={touched.bankName && errors.bankName}\n                      />\n                      <CustomInputTextField\n                        attribute=\"Account Number\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"accountNumber\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.accountNumber}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.accountNumber && errors.accountNumber\n                        )}\n                        helperText={\n                          touched.accountNumber && errors.accountNumber\n                        }\n                      />\n\n                      <CustomInputTextField\n                        attribute=\"Routing Number\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"routingNumber\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.routingNumber}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.routingNumber && errors.routingNumber\n                        )}\n                        helperText={\n                          touched.routingNumber && errors.routingNumber\n                        }\n                      />\n                      <CustomInputTextField\n                        attribute=\"Account Type\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"accountType\"\n                        select\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.accountType}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.accountType && errors.accountType\n                        )}\n                        helperText={touched.accountType && errors.accountType}\n                      >\n                        <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                        <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                      </CustomInputTextField>\n                      <CustomInputTextField\n                        attribute=\"Ownership\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"ownership\"\n                        select\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.ownership}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(touched.ownership && errors.ownership)}\n                        helperText={touched.ownership && errors.ownership}\n                      >\n                        <MenuItem value=\"TAXPAYER/SPOUSE\">\n                          Tax Payer / Spouse\n                        </MenuItem>\n                        <MenuItem value=\"JOINT\">Joint</MenuItem>\n                      </CustomInputTextField>\n                    </Grid>\n                    <Grid item lg={6} sm={6} xs={12}>\n                      <CustomInputTextField\n                        attribute=\"Account Holder Name\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"accountHolderName\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.accountHolderName}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.accountHolderName && errors.accountHolderName\n                        )}\n                        helperText={\n                          touched.accountHolderName && errors.accountHolderName\n                        }\n                      />\n\n                      <CustomInputTextField\n                        attribute=\"Confirm Account Number\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"confirmAccountNumber\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.confirmAccountNumber}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.confirmAccountNumber &&\n                            errors.confirmAccountNumber\n                        )}\n                        helperText={\n                          touched.confirmAccountNumber &&\n                          errors.confirmAccountNumber\n                        }\n                      />\n                      <CustomInputTextField\n                        attribute=\"Confirm Routing Number\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"confirmRoutingNumber\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.confirmRoutingNumber}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.confirmRoutingNumber &&\n                            errors.confirmRoutingNumber\n                        )}\n                        helperText={\n                          touched.confirmRoutingNumber &&\n                          errors.confirmRoutingNumber\n                        }\n                      />\n                      <CustomInputTextField\n                        attribute=\"Confirm Account Type\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"confirmAccountType\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        select\n                        fullWidth\n                        value={values.confirmAccountType}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.confirmAccountType &&\n                            errors.confirmAccountType\n                        )}\n                        helperText={\n                          touched.confirmAccountType &&\n                          errors.confirmAccountType\n                        }\n                      >\n                        <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                        <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                      </CustomInputTextField>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    paddingBottom: { xs: \"20px\" },\n                    marginTop: { xs: \"20px\" },\n                  }}\n                >\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Save\n                  </Button>\n                </Box>\n              </Form>\n            )}\n          </Formik>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default BankDetails;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  MenuItem,\n  Button,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  CircularProgress,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { statesNames, countryCode } from \"../../constants\";\nimport Api from \"../../components/Api\";\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../components/CustomInputField\";\nimport { CustomLabel } from \"./filerDeatils\";\n\nconst useStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: \"700\",\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    marginBottom: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst ConfirmDetails = ({\n  id,\n  personalDetails,\n  contactDetails,\n  spouseDetails,\n  incomeDetails,\n  providedLivingSupport,\n  bankDetails,\n  handlePickAppointment,\n  dependantDetails,\n}) => {\n  const customStyles = useStyles();\n  const stateOptions = statesNames;\n  const countryCodes = countryCode;\n\n  const transform = (input) => {\n    if (input === undefined || input === null) {\n      return \"\";\n    }\n\n    if (input.includes(\"-\")) {\n      return input;\n    }\n\n    const rawSsn = input.replace(/-/g, \"\"); // Remove hyphens\n    const formattedSsn = rawSsn\n      .replace(/\\D/g, \"\") // Remove non-digits\n      .replace(/(\\d{3})(\\d{3})(\\d{3})/, \"$1-$2-$3\"); // Format as 123-45-6789\n    return formattedSsn;\n  };\n\n  const [formData, setFormData] = useState({\n    // Personal Details\n\n    firstName: personalDetails[\"firstName\"],\n    middleName: personalDetails[\"middleName\"],\n    lastName: personalDetails[\"lastName\"],\n    ssn: personalDetails[\"ssn\"],\n    dateOfBirth: personalDetails[\"dateOfBirth\"],\n    gender: personalDetails[\"gender\"],\n    occupation: personalDetails[\"occupation\"],\n    residentialStatus: personalDetails[\"residentialStatus\"],\n    email: personalDetails[\"email\"],\n\n    // Contact Details\n    street: contactDetails[\"street\"],\n    apartment: contactDetails[\"apartment\"],\n    city: contactDetails[\"city\"],\n    state: contactDetails[\"state\"],\n    zipCode: contactDetails[\"zipCode\"],\n    country: contactDetails[\"country\"],\n    primaryCountryCode: contactDetails[\"primaryCountryCode\"],\n    primaryPhoneNumber: contactDetails[\"primaryPhoneNumber\"],\n    secondaryCountryCode: contactDetails[\"secondaryCountryCode\"],\n    secondaryPhoneNumber: contactDetails[\"secondaryPhoneNumber\"],\n    contactEmail: contactDetails[\"contactEmail\"],\n\n    taxFiledLastYear: incomeDetails[\"taxFiledLastYear\"], // Set an initial value for taxFiledLastYear\n\n    // additional Spouse Details (Initially hidden)\n    taxPayerStatus: personalDetails[\"taxPayerStatus\"], // Default to \"No\" (Single)\n    spouseFirstName: spouseDetails[\"spouseFirstName\"],\n    spouseMiddleInitial: spouseDetails[\"spouseMiddleInitial\"],\n    spouseLastName: spouseDetails[\"spouseLastName\"],\n    spouseSsnOrItin: spouseDetails[\"spouseSsnOrItin\"],\n    spouseApplyForItin: spouseDetails[\"spouseApplyForItin\"], // Default to \"No\"\n    spouseDateOfBirth: spouseDetails[\"spouseDateOfBirth\"],\n    spouseGender: spouseDetails[\"spouseGender\"],\n    spouseOccupation: spouseDetails[\"spouseOccupation\"],\n    spouseResidentialStatus: spouseDetails[\"spouseResidentialStatus\"],\n    spouseEmail: spouseDetails[\"spouseEmail\"],\n\n    providedLivingSupport: providedLivingSupport,\n\n    //Income Details\n    interestIncome: incomeDetails[\"interestIncome\"],\n    dividendIncome: incomeDetails[\"dividendIncome\"],\n    soldStocks: incomeDetails[\"soldStocks\"],\n    soldCrypto: incomeDetails[\"soldCrypto\"],\n    foreignIncome: incomeDetails[\"foreignIncome\"],\n    retirementAccounts: incomeDetails[\"retirementAccounts\"],\n    stateTaxRefund: incomeDetails[\"stateTaxRefund\"],\n    foreignBankAccount: incomeDetails[\"foreignBankAccount\"],\n    foreignAssets: incomeDetails[\"foreignAssets\"],\n    rentalIncome: incomeDetails[\"rentalIncome\"],\n    income1099: incomeDetails[\"income1099\"],\n    incomeDescription: incomeDetails[\"incomeDescription\"],\n    incomeAmount: incomeDetails[\"incomeAmount\"],\n    addAdditionalInformation: false,\n\n    //Bank Details\n    bankingType: bankDetails[\"bankingType\"],\n    bankName: bankDetails[\"bankName\"],\n    accountHolderName: bankDetails[\"accountHolderName\"],\n    ownership: bankDetails[\"ownership\"],\n    routingNumber: bankDetails[\"routingNumber\"],\n    confirmRoutingNumber: bankDetails[\"confirmRoutingNumber\"],\n    accountNumber: bankDetails[\"accountNumber\"],\n    confirmAccountNumber: bankDetails[\"confirmAccountNumber\"],\n    accountType: bankDetails[\"accountType\"],\n    confirmAccountType: bankDetails[\"confirmAccountType\"],\n  });\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      <Container>\n        <Grid container spacing={2}>\n          <Grid item lg={6} sm={6} xs={12}>\n            <Box className={customStyles.leftSide}>\n              <Typography variant=\"h5\">Personal Details</Typography>\n\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                  maxWidth: \"96%\",\n                }}\n              >\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"textSecondary\"\n                  sx={{ marginTop: \"20px\", maxWidth: \"30%\" }}\n                >\n                  Taxpayer Name\n                  <font color=\"red\" size=\"2\">\n                    (As Per SSN):\n                  </font>\n                </Typography>\n\n                <Box>\n                  <CustomInputTextField\n                    disabled\n                    attribute=\"First Name\"\n                    attributeTextAlign=\"right\"\n                    is_required={true}\n                    fullWidth\n                    margin=\"normal\"\n                    name=\"firstName\"\n                    value={formData.firstName}\n                    variant=\"outlined\"\n                  />\n\n                  <CustomInputTextField\n                    disabled\n                    attribute=\"Middle Initial\"\n                    attributeTextAlign=\"right\"\n                    is_required={false}\n                    fullWidth\n                    margin=\"normal\"\n                    name=\"middleName\"\n                    value={formData.middleName}\n                    variant=\"outlined\"\n                  />\n                  <CustomInputTextField\n                    disabled\n                    attribute=\"Last Name\"\n                    attributeTextAlign=\"right\"\n                    is_required={true}\n                    fullWidth\n                    margin=\"normal\"\n                    name=\"lastName\"\n                    value={formData.lastName}\n                    variant=\"outlined\"\n                  />\n                </Box>\n              </Box>\n\n              <CustomInputTextField\n                disabled\n                attribute=\"SSN\"\n                attributeTextAlign=\"right\"\n                is_required={true}\n                fullWidth\n                margin=\"normal\"\n                name=\"ssn\"\n                value={transform(formData.ssn)}\n                variant=\"outlined\"\n              />\n              <CustomInputTextField\n                disabled\n                attribute=\"Date of Birth\"\n                attributeTextAlign=\"right\"\n                is_required={true}\n                fullWidth\n                margin=\"normal\"\n                name=\"dateOfBirth\"\n                type=\"date\"\n                value={formData.dateOfBirth}\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                InputProps={{\n                  style: {\n                    color: \"black\",\n                  },\n                }}\n                inputProps={{\n                  placeholder: \"\",\n                }}\n              />\n              <CustomInputTextField\n                disabled\n                attribute=\"Gender\"\n                attributeTextAlign=\"right\"\n                is_required={true}\n                select\n                fullWidth\n                margin=\"normal\"\n                name=\"gender\"\n                value={formData.gender}\n                variant=\"outlined\"\n              >\n                <MenuItem value=\"MALE\">Male</MenuItem>\n                <MenuItem value=\"FEMALE\">Female</MenuItem>\n                <MenuItem value=\"Other\">Other</MenuItem>\n              </CustomInputTextField>\n              <CustomInputTextField\n                disabled\n                attribute=\"Occupation / Job Title\"\n                attributeTextAlign=\"right\"\n                is_required={true}\n                fullWidth\n                margin=\"normal\"\n                name=\"occupation\"\n                value={formData.occupation}\n                variant=\"outlined\"\n              />\n              <CustomInputTextField\n                disabled\n                attribute=\"Residential Status\"\n                attributeTextAlign=\"right\"\n                is_required={true}\n                fullWidth\n                margin=\"normal\"\n                name=\"residentialStatus\"\n                value={formData.residentialStatus}\n                variant=\"outlined\"\n              />\n            </Box>\n          </Grid>\n\n          {/* Right Side - Contact Details */}\n          <Grid item lg={6} sm={6} xs={12}>\n            <Box className={customStyles.rightSide}>\n              <Typography variant=\"h4\" sx={{ marginBottom: \"16px\" }}>\n                Contact Details\n              </Typography>\n              <Typography\n                color={\"red\"}\n                sx={{ marginLeft: \"10px\" }}\n                variant=\"h5\"\n              >\n                (Provide U.S current communication Address)\n              </Typography>\n              <CustomInputTextField\n                attribute=\"Street\"\n                is_required={true}\n                fullWidth\n                name=\"street\"\n                value={formData.street}\n                variant=\"outlined\"\n                disabled\n              />\n              <CustomInputTextField\n                attribute=\"Apartment\"\n                is_required={true}\n                fullWidth\n                name=\"apartment\"\n                value={formData.apartment}\n                variant=\"outlined\"\n                disabled\n              />\n              <CustomInputTextField\n                attribute=\"City\"\n                is_required={true}\n                fullWidth\n                name=\"city\"\n                value={formData.city}\n                variant=\"outlined\"\n                disabled\n              />\n              <CustomInputTextField\n                attribute=\"State\"\n                is_required={true}\n                select\n                fullWidth\n                name=\"state\"\n                value={formData.state}\n                variant=\"outlined\"\n                disabled\n              >\n                {stateOptions.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </CustomInputTextField>\n              <CustomInputTextField\n                attribute=\"Zip Code\"\n                is_required={true}\n                fullWidth\n                name=\"zipCode\"\n                value={formData.zipCode}\n                variant=\"outlined\"\n                disabled\n              />\n              <CustomInputTextField\n                attribute=\"Country\"\n                is_required={true}\n                select\n                fullWidth\n                name=\"country\"\n                value={formData.country}\n                variant=\"outlined\"\n                disabled\n              >\n                <MenuItem value=\"USA\">USA</MenuItem>\n                <MenuItem value=\"Other\">Other</MenuItem>\n              </CustomInputTextField>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  width: \"93%\",\n                  margin: \"10px 0\",\n                  maxHeight: \"60px\",\n                }}\n              >\n                <Typography\n                  variant=\"body1\"\n                  sx={{\n                    width: { xs: \"30%\", sm: \"120px\" },\n                  }}\n                >\n                  <span>Primary Phone</span>\n                  <span\n                    style={{\n                      color: \"red\",\n                      fontSize: \"0.875rem\",\n                      marginLeft: \"3px\",\n                    }}\n                  >\n                    *\n                  </span>\n                  &nbsp;:\n                </Typography>\n                <TextField\n                  attribute=\"Primary Phone\"\n                  select\n                  name=\"primaryCountryCode\"\n                  value={formData.primaryCountryCode}\n                  variant=\"outlined\"\n                  disabled\n                  sx={{\n                    width: \"18%\",\n                    \"& .MuiOutlinedInput-root\": {\n                      \"& fieldset\": {\n                        borderRadius: \"2px\",\n                      },\n                    },\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                      {\n                        border: \"0.1px solid #bdbdbd\",\n                      },\n                    \"& .MuiOutlinedInput-input\": {\n                      padding: \"10px\",\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                    },\n                  }}\n                >\n                  {countryCodes.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  name=\"primaryPhoneNumber\"\n                  value={formData.primaryPhoneNumber}\n                  variant=\"outlined\"\n                  disabled\n                  sx={{\n                    width: { xs: \"50%\", sm: \"165px\" },\n                    \"& .MuiOutlinedInput-root\": {\n                      \"& fieldset\": {\n                        borderRadius: \"2px\",\n                      },\n                    },\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                      {\n                        border: \"0.1px solid #bdbdbd\",\n                      },\n                    \"& .MuiOutlinedInput-input\": {\n                      padding: \"10px\",\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                    },\n                  }}\n                />\n              </Box>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  width: \"93%\",\n                  margin: \"10px 0\",\n                  maxHeight: \"60px\",\n                }}\n              >\n                <Typography\n                  variant=\"body1\"\n                  sx={{\n                    width: { xs: \"30%\", sm: \"120px\" },\n                  }}\n                >\n                  <span>Secondary Phone</span>\n                  &nbsp;:\n                </Typography>\n                <TextField\n                  name=\"secondaryCountryCode\"\n                  value={formData.secondaryCountryCode}\n                  variant=\"outlined\"\n                  disabled\n                  sx={{\n                    width: \"18%\",\n                    \"& .MuiOutlinedInput-root\": {\n                      \"& fieldset\": {\n                        borderRadius: \"2px\",\n                      },\n                    },\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                      {\n                        border: \"0.1px solid #bdbdbd\",\n                      },\n                    \"& .MuiOutlinedInput-input\": {\n                      padding: \"10px\",\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                    },\n                  }}\n                >\n                  {countryCodes.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  attribute=\"Secondary Phone\"\n                  name=\"secondaryPhoneNumber\"\n                  value={formData.secondaryPhoneNumber}\n                  variant=\"outlined\"\n                  disabled\n                  sx={{\n                    width: { xs: \"50%\", sm: \"165px\" },\n                    \"& .MuiOutlinedInput-root\": {\n                      \"& fieldset\": {\n                        borderRadius: \"2px\",\n                      },\n                    },\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                      {\n                        border: \"0.1px solid #bdbdbd\",\n                      },\n                    \"& .MuiOutlinedInput-input\": {\n                      padding: \"10px\",\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                    },\n                  }}\n                />\n              </Box>\n              <CustomInputTextField\n                attribute=\"Email Id\"\n                is_required={true}\n                fullWidth\n                name=\"contactEmail\"\n                value={formData.contactEmail}\n                variant=\"outlined\"\n                disabled\n              />\n            </Box>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Box sx={{ margin: \"16px 0\" }}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={10}\n                sm={5}\n                style={{ display: \"flex\", alignItems: \"center\" }}\n              >\n                <Typography variant=\"body1\">\n                  <CustomLabel\n                    label=\"Have you filed your taxes with Taxcooler in the last year?\"\n                    required={true}\n                  />\n                </Typography>\n              </Grid>\n              <Grid item xs={2} sm={1}>\n                <select\n                  id=\"taxFiledLastYear\"\n                  name=\"taxFiledLastYear\"\n                  value={formData.taxFiledLastYear}\n                  style={{ width: \"100%\" }}\n                  disabled\n                >\n                  <option value=\"\">Select</option>\n                  {/* Add an empty option */}\n                  <option value={true}>Yes</option>\n                  <option value={false}>No</option>\n                </select>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box sx={{ margin: \"16px 0\" }}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={8}\n                sm={5}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography variant=\"body1\">\n                  <CustomLabel label=\"Taxpayer Status\" required={true} />\n                </Typography>\n              </Grid>\n              <Grid item xs={4} sm={1}>\n                <select\n                  id=\"taxPayerStatus\"\n                  name=\"taxPayerStatus\"\n                  value={formData.taxPayerStatus}\n                  style={{ width: \"100%\" }}\n                  disabled\n                >\n                  <option value=\"\">Select Status</option>{\" \"}\n                  {/* Add an empty option */}\n                  <option value=\"SINGLE\">Single</option>\n                  <option value=\"MARRIED\">Married</option>\n                </select>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        {formData.taxPayerStatus === \"MARRIED\" && (\n          <Grid container spacing={2}>\n            {/* Left Side - Spouse Details */}\n            <Grid item lg={6} sm={6} xs={12}>\n              <Typography variant=\"h5\">Spouse Details</Typography>\n              <Grid container spacing={2}>\n                <CustomInputTextField\n                  attribute=\"First Name\"\n                  is_required={true}\n                  fullWidth\n                  name=\"spouseFirstName\"\n                  value={formData.spouseFirstName}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Middle Initial\"\n                  is_required={false}\n                  fullWidth\n                  name=\"spouseMiddleInitial\"\n                  value={formData.spouseMiddleInitial}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Last Name\"\n                  is_required={true}\n                  fullWidth\n                  name=\"spouseLastName\"\n                  value={formData.spouseLastName}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"SSN/ITIN\"\n                  is_required={true}\n                  fullWidth\n                  name=\"spouseSsnOrItin\"\n                  value={transform(formData.spouseSsnOrItin)}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Do you want to apply for ITIN?\"\n                  is_required={true}\n                  select\n                  fullWidth\n                  name=\"spouseApplyForItin\"\n                  value={formData.spouseApplyForItin}\n                  variant=\"outlined\"\n                  disabled\n                >\n                  <MenuItem value={false}>No</MenuItem>\n                  <MenuItem value={true}>Yes</MenuItem>\n                </CustomInputTextField>\n\n                {formData.spouseApplyForItin === true && (\n                  <ButtonBase\n                    onClick={() =>\n                      handleDownloadTemplate(\"ITIN_Information.xls\")\n                    }\n                    sx={{\n                      marginTop: \"2px\",\n                      textDecoration: \"underline\",\n                    }}\n                    disableTouchRipple\n                  >\n                    Download ITIN Information Excel\n                  </ButtonBase>\n                )}\n              </Grid>\n            </Grid>\n\n            {/* Right Side - Spouse Contact */}\n            <Grid item lg={6} sm={6} xs={12}>\n              <Typography variant=\"h5\">Spouse Contact</Typography>\n              <Grid container spacing={2}>\n                <CustomInputTextField\n                  attribute=\"Date of Birth\"\n                  is_required={true}\n                  fullWidth\n                  name=\"spouseDateOfBirth\"\n                  type=\"date\"\n                  value={formData.spouseDateOfBirth}\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  InputProps={{\n                    style: {\n                      color: \"black\",\n                    },\n                  }}\n                  inputProps={{\n                    placeholder: \"\",\n                  }}\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Gender\"\n                  is_required={true}\n                  select\n                  fullWidth\n                  name=\"spouseGender\"\n                  value={formData.spouseGender}\n                  variant=\"outlined\"\n                  disabled\n                >\n                  <MenuItem value=\"MALE\">Male</MenuItem>\n                  <MenuItem value=\"FEMALE\">Female</MenuItem>\n                  <MenuItem value=\"Other\">Other</MenuItem>\n                </CustomInputTextField>\n\n                <CustomInputTextField\n                  attribute=\"Occupation / Job Title\"\n                  is_required={true}\n                  fullWidth\n                  name=\"spouseOccupation\"\n                  value={formData.spouseOccupation}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Residential Status\"\n                  is_required={true}\n                  fullWidth\n                  name=\"spouseResidentialStatus\"\n                  value={formData.spouseResidentialStatus}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Email Id\"\n                  is_required={true}\n                  fullWidth\n                  name=\"spouseEmail\"\n                  value={formData.spouseEmail}\n                  variant=\"outlined\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n        <Grid container>\n          <Grid\n            container\n            sx={{\n              marginTop: \"36px\",\n              marginBottom: \"24px\",\n            }}\n          >\n            <Grid\n              item\n              xs={10}\n              sm={9}\n              sx={{ display: \"flex\", alignItems: \"center\" }}\n            >\n              <Typography variant=\"body1\">\n                <CustomLabel\n                  label=\" Have you (or your spouse, if married) provided living\n                        support to your kids and/or dependents during the tax\n                        year?\"\n                />\n              </Typography>\n            </Grid>\n            <Grid item xs={2}>\n              <CustomInputTextField\n                attribute=\"\"\n                is_required={true}\n                // label={<CustomLabel label=\"\" />}\n                select\n                margin=\"normal\"\n                name=\"providedLivingSupport\"\n                value={formData.providedLivingSupport}\n                variant=\"outlined\"\n                disabled\n              >\n                <MenuItem value={true}>Yes</MenuItem>\n                <MenuItem value={false}>No</MenuItem>\n              </CustomInputTextField>\n            </Grid>\n          </Grid>\n          <Grid>\n            <Typography\n              variant=\"body1\"\n              style={{ color: \"blue\", wordSpacing: \"2px\" }}\n            >\n              NOTE: Make sure the kids or dependants reported in your (Taxpayer)\n              2023 Tax Return are not claimed as dependants in any other 2023\n              Individual Tax Returns.\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Box>\n          (\n          <TableContainer\n            sx={{\n              marginTop: \"32px\",\n              marginBottom: \"16px\",\n              paddingBottom: { xs: \"10px\", sm: \"0px\" },\n            }}\n          >\n            <Typography variant=\"h5\">Dependant Details</Typography>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n              aria-label=\"Place Order Series Table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={customStyles.tableHeader}>\n                    First Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Last Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    SSN/ITIN\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Relationship\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Visa Type\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {dependantDetails.length > 0 &&\n                  dependantDetails.map((row, index) => (\n                    <TableRow key={index}>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalFirstName}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalLastName}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {transform(row.additionalSsnOrItin)}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalRelationship}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalVisaType}\n                      </TableCell>\n                      <TableCell className={customStyles.mobileView}>\n                        <Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                First Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalFirstName}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Last Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalLastName}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                RelationShip\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalRelationship}\n                              </Typography>\n                            </Box>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-around\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Visa Type\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalVisaType}\n                              </Typography>\n                            </Box>\n\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                SSN/ITIN\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {transform(row.additionalSsnOrItin)}\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n        <Grid container spacing={2}>\n          {/* Interest Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have any Interest Income?\n              </FormLabel>\n              <RadioGroup\n                name=\"interestIncome\"\n                value={formData.interestIncome}\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Dividend Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have any Dividend Income?\n              </FormLabel>\n              <RadioGroup\n                name=\"dividendIncome\"\n                value={formData.dividendIncome}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Sold Stocks */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Did you sell any stocks in 2022?\n              </FormLabel>\n              <RadioGroup\n                name=\"soldStocks\"\n                value={formData.soldStocks}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Sold Crypto */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Did you sell any Crypto Currency in 2022?\n              </FormLabel>\n              <RadioGroup\n                name=\"soldCrypto\"\n                value={formData.soldCrypto}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n          {/* Foreign Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have any foreign country income in 2022?\n              </FormLabel>\n              <RadioGroup\n                name=\"foreignIncome\"\n                value={formData.foreignIncome}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Contributions/Distributions */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have contributions/distributions to/from retirement\n                accounts in year 2022?\n              </FormLabel>\n              <RadioGroup\n                name=\"retirementAccounts\"\n                value={formData.retirementAccounts}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* State Tax Refund */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Did you get State tax refund(s) in 2022?\n              </FormLabel>\n              <RadioGroup\n                name=\"stateTaxRefund\"\n                value={formData.stateTaxRefund}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Foreign Bank Account */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have Account Balance in Foreign banks exceeding more than\n                $10,000?\n              </FormLabel>\n              <RadioGroup\n                name=\"foreignBankAccount\"\n                value={formData.foreignBankAccount}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Foreign Assets */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have Foreign Assets value more than $50,000 at any time\n                during the tax year?\n              </FormLabel>\n              <RadioGroup\n                name=\"foreignAssets\"\n                value={formData.foreignAssets}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Rental Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have Rental Income in Foreign Country/USA?\n              </FormLabel>\n              <RadioGroup\n                name=\"rentalIncome\"\n                value={formData.rentalIncome}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* 1099-Misc/1099-NEC Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have 1099-Misc/1099-NEC Income in year 2022?\n              </FormLabel>\n              <RadioGroup\n                name=\"income1099\"\n                value={formData.income1099}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          <Grid\n            container\n            spacing={2}\n            sx={{\n              marginTop: \"30px\",\n              marginBottom: \"30px\",\n              marginLeft: \"0px\",\n            }}\n          >\n            <Grid item xs={12} className=\"leftSide\">\n              <Typography variant=\"h5\">Add other Income Information</Typography>\n\n              <CustomInputTextField\n                disabled\n                fullWidth\n                attribute=\"Income Description\"\n                margin=\"normal\"\n                name=\"incomeDescription\"\n                value={formData.incomeDescription}\n                variant=\"outlined\"\n              />\n\n              <CustomInputTextField\n                disabled\n                fullWidth\n                attribute=\"Income Amount\"\n                margin=\"normal\"\n                name=\"incomeAmount\"\n                value={formData.incomeAmount}\n                variant=\"outlined\"\n                type=\"number\"\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\n            <Typography variant=\"h4\" sx={{ marginTop: \"30px\" }}>\n              Important Note\n            </Typography>\n            <Typography\n              sx={{\n                marginTop: \"30px\",\n                wordSpacing: \"2px\",\n              }}\n            >\n              The IRS and certain State Revenue Departments facilitate DIRECT\n              DEPOSIT / WITHDRAWAL of Tax Refund or Tax Dues on the Tax Returns.\n              If you are interested in availing this option, we request you to\n              kindly input the following details.\n            </Typography>\n\n            <Grid container sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}>\n              <Grid\n                item\n                xs={10}\n                sm={4}\n                style={{ display: \"flex\", alignItems: \"center\" }}\n              >\n                <Typography variant=\"body1\">\n                  I prefer to receive my tax refunds by way of\n                </Typography>\n              </Grid>\n              <Grid item xs={2} sm={4}>\n                <select\n                  id=\"bankingType\"\n                  name=\"bankingType\"\n                  value={formData.bankingType}\n                  style={{ width: \"100%\" }}\n                  disabled\n                >\n                  <option value=\"\">Select Option</option>\n                  <option value=\"DIRECT DEPOSIT INTO MY BANK ACCOUNT\">\n                    Direct deposit into my bank account\n                  </option>\n                  <option value=\"PAPER CHECK\">Paper Check</option>\n                </select>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          {formData.bankingType === \"DIRECT DEPOSIT INTO MY BANK ACCOUNT\" && (\n            <Grid>\n              {/* Additional Fields for Direct Deposit */}\n              <Typography\n                variant=\"h5\"\n                sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}\n              >\n                Direct Deposit Information\n              </Typography>\n              <Typography sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}>\n                Note : Please understand that there is no risk by entering Bank\n                Account and Routing Numbers\n              </Typography>\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  border: \"1px solid #000000\",\n                  padding: \"20px\",\n                  marginBottom: \"20px\",\n                  backgroundColor: \"#C7DFF0\",\n                }}\n              >\n                <Grid item lg={6} sm={6} xs={12}>\n                  <CustomInputTextField\n                    attribute=\"Bank Name\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"bankName\"\n                    fullWidth\n                    value={values.bankName}\n                    variant=\"outlined\"\n                    disabled={values.bankingType === \"PAPER CHECK\"}\n                  />\n                  <CustomInputTextField\n                    attribute=\"Account Number\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"accountNumber\"\n                    fullWidth\n                    value={values.accountNumber}\n                    variant=\"outlined\"\n                    disabled={values.bankingType === \"PAPER CHECK\"}\n                  />\n                  <CustomInputTextField\n                    attribute=\"Routing Number\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"routingNumber\"\n                    fullWidth\n                    value={values.routingNumber}\n                    variant=\"outlined\"\n                    disabled={values.bankingType === \"PAPER CHECK\"}\n                  />\n                  <CustomInputTextField\n                    attribute=\"Account Type\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"accountType\"\n                    select\n                    fullWidth\n                    value={values.accountType}\n                    variant=\"outlined\"\n                    disabled={values.bankingType === \"PAPER CHECK\"}\n                  >\n                    <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                    <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                  </CustomInputTextField>\n                  <CustomInputTextField\n                    attribute=\"Ownership\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"ownership\"\n                    select\n                    fullWidth\n                    value={values.ownership}\n                    variant=\"outlined\"\n                    disabled={values.bankingType === \"PAPER CHECK\"}\n                  >\n                    <MenuItem value=\"TAXPAYER/SPOUSE\">\n                      Tax Payer / Spouse\n                    </MenuItem>\n                    <MenuItem value=\"JOINT\">Joint</MenuItem>\n                  </CustomInputTextField>\n                </Grid>\n                <Grid item lg={6} sm={6} xs={12}>\n                  <CustomInputTextField\n                    attribute=\"Account Holder Name\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"accountHolderName\"\n                    fullWidth\n                    value={values.accountHolderName}\n                    variant=\"outlined\"\n                    disabled={values.bankingType === \"PAPER CHECK\"}\n                  />\n                  <CustomInputTextField\n                    attribute=\"Confirm Account Number\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"confirmAccountNumber\"\n                    fullWidth\n                    value={values.confirmAccountNumber}\n                    variant=\"outlined\"\n                    disabled={values.bankingType === \"PAPER CHECK\"}\n                  />\n                  <CustomInputTextField\n                    attribute=\"Confirm Routing Number\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"confirmRoutingNumber\"\n                    fullWidth\n                    value={values.confirmRoutingNumber}\n                    variant=\"outlined\"\n                    disabled={values.bankingType === \"PAPER CHECK\"}\n                  />\n                  <CustomInputTextField\n                    attribute=\"Confirm Account Type\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"confirmAccountType\"\n                    select\n                    fullWidth\n                    value={values.confirmAccountType}\n                    variant=\"outlined\"\n                    disabled={values.bankingType === \"PAPER CHECK\"}\n                  >\n                    <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                    <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                  </CustomInputTextField>\n                </Grid>\n              </Grid>\n            </Grid>\n          )}\n        </Grid>\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handlePickAppointment(\"Pick Appointment\")}\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\n          >\n            Confirm Personal Details To Pick An Appointment\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handlePickAppointment(\"panel6\")}\n            sx={{ display: { xs: \"block\", sm: \"none\" } }}\n          >\n            Confirm Personal Details To Pick An Appointment\n          </Button>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default ConfirmDetails;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  Box,\n  Grid,\n  TextField,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  MenuItem,\n  CircularProgress,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\n\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport Api from \"../../components/Api\";\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\nimport { makeStyles } from \"@mui/styles\";\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: \"700\",\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    marginBottom: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst PickAppointment = ({ id }) => {\n  const customStyles = customTextStyles();\n  const [isPickAppointmentDetailsLoading, setIsPickAppointmentDetailsLoading] =\n    useState(false);\n  const state = useSelector((state) => state.app);\n\n  const [appointmentData, setAppointmentData] = useState({\n    date: \"\",\n    time: \"23:00\",\n    timezone: \"America/Chicago\",\n  });\n  const [appointmentDetails, setAppointmentDetails] = useState([]);\n\n  const handleDateChange = (event) => {\n    setAppointmentData({\n      ...appointmentData,\n      date: event.target.value,\n    });\n  };\n\n  const handleTimeChange = (event) => {\n    setAppointmentData({\n      ...appointmentData,\n      time: event.target.value,\n    });\n  };\n\n  const handleTimezoneChange = (event) => {\n    setAppointmentData({\n      ...appointmentData,\n      timezone: event.target.value,\n    });\n  };\n\n  const handleCancelAppointment = (appointmentId) => {\n    setIsPickAppointmentDetailsLoading(true);\n    let payload = { id: id, appointmentId: appointmentId };\n    privateApiPOST(Api.deleteAppointment, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setIsPickAppointmentDetailsLoading(false);\n          handleFetchAppointmentDetails();\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsPickAppointmentDetailsLoading(false);\n      });\n  };\n\n  const handleFetchAppointmentDetails = () => {\n    setIsPickAppointmentDetailsLoading(true);\n    let payload = { id: id };\n    privateApiPOST(Api.appointmentDetails, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setIsPickAppointmentDetailsLoading(false);\n          setAppointmentDetails(data?.data);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsPickAppointmentDetailsLoading(false);\n      });\n  };\n  const handleFetchAppointmentChange = (payload) => {\n    setIsPickAppointmentDetailsLoading(true);\n\n    privateApiPOST(Api.bookAppointment, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setIsPickAppointmentDetailsLoading(false);\n          setAppointmentData({\n            date: \"\",\n            time: \"23:00\",\n            timezone: \"America/Chicago\",\n          });\n          handleFetchAppointmentDetails();\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsPickAppointmentDetailsLoading(false);\n      });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let payload = { ...appointmentData, id: id };\n    handleFetchAppointmentChange(payload);\n  };\n\n  const showMsg = () => {\n    // Add your showMsg function logic here\n  };\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\")) {\n      handleFetchAppointmentDetails();\n    }\n  }, []);\n\n  const generateTimeOptions = () => {\n    const timeOptions = [];\n    for (let hours = 11; hours <= 23; hours++) {\n      for (let minutes = 0; minutes < 60; minutes += 30) {\n        const hourStr = String(hours).padStart(2, \"0\");\n        const minuteStr = String(minutes).padStart(2, \"0\");\n        const timeOption = `${hourStr}:${minuteStr}`;\n        timeOptions.push(timeOption);\n      }\n    }\n    return timeOptions;\n  };\n\n  const timeOptions = generateTimeOptions();\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Container>\n        <Typography variant=\"h5\">\n          Tax Notes Interview - Schedule your date:\n        </Typography>\n        <Box\n          sx={{\n            display: { xs: \"block\", sm: \"flex\" },\n            flexWrap: \"wrap\",\n            justifyContent: \"space-around\",\n            marginTop: \"30px\",\n          }}\n        >\n          <Box sx={{ width: { xs: \"100%\", sm: \"35%\" } }}>\n            <CustomInputTextField\n              isMarginTopNotRequired={true}\n              attribute=\"Client Name\"\n              is_required={false}\n              fullWidth\n              // label=\"Name\"\n              name=\"name\"\n              value={`${state.first_name} ${state.last_name}`}\n              variant=\"outlined\"\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Box>\n\n          <Box sx={{ width: { xs: \"100%\", sm: \"35%\" } }}>\n            <CustomInputTextField\n              isMarginTopNotRequired={true}\n              attribute={\"Phone Number\"}\n              is_required={false}\n              fullWidth\n              // label=\"Phone Number\"\n              name=\"phone_no\"\n              value={state ? state.phone_no : \"\"}\n              variant=\"outlined\"\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Box>\n        </Box>\n        <Typography variant=\"body1\" color=\"red\" sx={{ marginTop: \"30px\" }}>\n          Become a confirmed client by making an advance fee payment. Same day\n          tax filing available for Confirmed Clients.\n        </Typography>\n        <br />\n        <Typography variant=\"body1\" color=\"green\" sx={{ marginTop: \"10px\" }}>\n          How to become a Confirmed Client?&nbsp;&nbsp;&nbsp;\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={showMsg}\n            sx={{ marginTop: { xs: \"10px\" } }}\n          >\n            CLICK HERE\n          </Button>\n        </Typography>\n\n        <Typography variant=\"body1\" color=\"red\" sx={{ marginTop: \"30px\" }}>\n          {`We will call you anytime between 11.00 AM CST to 11.30 PM CST on your appointment date.`}\n        </Typography>\n        <Typography variant=\"body1\" color=\"red\" sx={{ marginLeft: \"10px\" }}>\n          {`- We try to match your preferred time. Unfortunately, it is not a guaranteed time.`}\n        </Typography>\n        <Typography variant=\"body1\" color=\"red\" sx={{ marginLeft: \"10px\" }}>\n          {`- We try to match your preferred time. Unfortunately, it is not a guaranteed time.`}\n        </Typography>\n        <Typography variant=\"body1\" color=\"red\" sx={{ marginTop: \"30px\" }}>\n          Please pick your availability between{\" \"}\n          <Typography variant=\"body1\" color=\"primary\" component=\"span\">\n            01/11/2023 to 04/18/2023\n          </Typography>\n        </Typography>\n        <form autoComplete=\"off\" onSubmit={handleSubmit}>\n          <Box\n            sx={{\n              display: { xs: \"block\", sm: \"flex\" },\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n              marginTop: \"30px\",\n            }}\n          >\n            <Box sx={{ width: { xs: \"100%\", sm: \"30%\" } }}>\n              <CustomInputTextField\n                isMarginTopNotRequired={true}\n                attribute=\"Date\"\n                is_required={false}\n                type=\"date\"\n                value={appointmentData.date}\n                onChange={handleDateChange}\n                fullWidth\n                required\n              />\n            </Box>\n            <Box sx={{ width: { xs: \"100%\", sm: \"40%\" } }}>\n              <CustomInputTextField\n                isMarginTopNotRequired={true}\n                attribute=\"Preferrable Time\"\n                is_required={false}\n                select\n                // label=\"Time\"\n                value={appointmentData.time}\n                onChange={handleTimeChange}\n                variant=\"outlined\"\n                fullWidth\n                required\n              >\n                {timeOptions.map((option) => (\n                  <MenuItem key={option} value={option}>\n                    {option}\n                  </MenuItem>\n                ))}\n              </CustomInputTextField>\n            </Box>\n            <Box sx={{ width: { xs: \"100%\", sm: \"30%\" } }}>\n              <CustomInputTextField\n                isMarginTopNotRequired={true}\n                attribute=\"Time Zone\"\n                is_required={false}\n                select\n                value={appointmentData.timezone}\n                onChange={handleTimezoneChange}\n                fullWidth\n                required\n              >\n                <MenuItem value=\"America/Chicago\">CST</MenuItem>\n                <MenuItem value=\"EST\">EST</MenuItem>\n                {/* Add more time zones as needed */}\n              </CustomInputTextField>\n            </Box>\n          </Box>\n          <Typography variant=\"body1\" color=\"red\" sx={{ marginTop: \"30px\" }}>\n            Maximum number of appointments you can have is \"ONE\". If you already\n            have an appointment delete it before scheduling new appointment\n          </Typography>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={showMsg}\n            sx={{ display: \"block\", margin: \"0 auto\", marginTop: \"20px\" }}\n          >\n            SUBMIT\n          </Button>\n        </form>\n        <Box>\n          {isPickAppointmentDetailsLoading ? (\n            <CircularProgress />\n          ) : (\n            <TableContainer\n              sx={{\n                marginTop: \"32px\",\n                paddingBottom: { xs: \"10px\", sm: \"0px\" },\n              }}\n            >\n              <Table\n                sx={{\n                  borderCollapse: \"collapse\",\n                }}\n                aria-label=\"Place Order Series Table\"\n              >\n                <TableHead>\n                  <TableRow>\n                    <TableCell className={customStyles.tableHeader}>\n                      Date\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      Start Time\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      End Time\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      Status\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {appointmentDetails.length > 0 &&\n                    appointmentDetails.map((row, index) => (\n                      <TableRow key={index}>\n                        <TableCell className={customStyles.tableData}>\n                          {row.date}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          {row.start_time}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          {row.end_time}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          {row.status}\n                        </TableCell>\n                        <TableCell\n                          sx={{\n                            visibility:\n                              row.status === \"BOOKED\" ? \"visible\" : \"hidden\",\n                            display: { xs: \"none\", sm: \"block\" },\n                          }}\n                          className={customStyles.tableData}\n                        >\n                          <Button\n                            disabled={isPickAppointmentDetailsLoading}\n                            startIcon={<DeleteIcon />}\n                            size=\"small\"\n                            onClick={() => {\n                              handleCancelAppointment(row.id);\n                            }}\n                            className={customStyles.buttons}\n                          >\n                            Delete{\" \"}\n                            {isPickAppointmentDetailsLoading && (\n                              <CircularProgress sx={{ ml: 1 }} size={14} />\n                            )}\n                          </Button>\n                        </TableCell>\n                        <TableCell className={customStyles.mobileView}>\n                          <Box>\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                                justifyContent: \"space-between\",\n                                marginTop: \"16px\",\n                              }}\n                            >\n                              <Box sx={{ marginTop: \"3px\" }}>\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellHeader\n                                  }\n                                >\n                                  Date\n                                </Typography>\n\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellValue\n                                  }\n                                >\n                                  {row.date}\n                                </Typography>\n                              </Box>\n                              <Box sx={{ marginTop: \"3px\" }}>\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellHeader\n                                  }\n                                >\n                                  Status\n                                </Typography>\n\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellValue\n                                  }\n                                >\n                                  {row.status}\n                                </Typography>\n                              </Box>\n                              <Box sx={{ marginTop: \"3px\" }}>\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellHeader\n                                  }\n                                >\n                                  Start Time\n                                </Typography>\n\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellValue\n                                  }\n                                >\n                                  {row.start_time}\n                                </Typography>\n                              </Box>\n                            </Box>\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                                justifyContent: \"space-between\",\n                                marginTop: \"16px\",\n                              }}\n                            >\n                              <Box sx={{ marginTop: \"3px\" }}>\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellHeader\n                                  }\n                                >\n                                  End Time\n                                </Typography>\n\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellValue\n                                  }\n                                >\n                                  {row.end_time}\n                                </Typography>\n                              </Box>\n                              <Box\n                              // sx={{\n                              //   display: \"flex\",\n                              //   justifyContent: \"center\", // Center the button horizontally\n                              //   alignItems: \"center\",\n                              // }}\n                              >\n                                <Button\n                                  disabled={isPickAppointmentDetailsLoading}\n                                  startIcon={<DeleteIcon />}\n                                  size=\"small\"\n                                  onClick={() => {\n                                    handleCancelAppointment(row.id);\n                                  }}\n                                  sx={{\n                                    visibility:\n                                      row.status === \"BOOKED\"\n                                        ? \"visible\"\n                                        : \"hidden\",\n                                  }}\n                                >\n                                  Delete{\" \"}\n                                  {isPickAppointmentDetailsLoading && (\n                                    <CircularProgress\n                                      sx={{ ml: 1 }}\n                                      size={14}\n                                    />\n                                  )}\n                                </Button>\n                              </Box>\n                            </Box>\n                          </Box>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default PickAppointment;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  Container,\n} from \"@mui/material\";\n\nconst PayPalPayment = () => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <Container>\n      <Grid spacing={2} container justifyContent=\"center\" alignItems=\"center\">\n        <Grid item xs={12} sm={7}>\n          <Box\n            id=\"ppdiv\"\n            name=\"ppdiv\"\n            sx={{\n              fontSize: 12,\n              fontFamily: \"Verdana\",\n              display: \"block\",\n              p: \"20px\", // Padding\n              border: \"1px solid grey\", // Border style\n            }}\n          >\n            <Typography\n              variant=\"body1\"\n              color=\"red\"\n              sx={{ marginBottom: \"20px\" }}\n            >\n              P.S: If you choose this Payment option (PayPal), your tax filing\n              fee includes a 3% service charge.\n            </Typography>\n            <Typography variant=\"body1\" sx={{ marginBottom: \"20px\" }}>\n              <span id=\"scsppt\">\n                Your Service Fee amount (including 3% service charge)\n              </span>\n            </Typography>\n            <Typography variant=\"body1\" sx={{ marginBottom: \"20px\" }}>\n              If your payment is successful, you'll receive an automatic email\n              confirmation from \"PayPal.\"\n            </Typography>\n            <form\n              autoComplete=\"off\"\n              onSubmit={handleSubmit}\n              // action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\"\n            >\n              <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n              <input type=\"hidden\" name=\"business\" value=\"4KKFRTPBL3E8E\" />\n              <input type=\"hidden\" name=\"lc\" value=\"US\" />\n              <input\n                type=\"hidden\"\n                name=\"item_name\"\n                value=\"Tax Consultation Fee\"\n              />\n              <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n              <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n              <input type=\"hidden\" name=\"no_note\" value=\"0\" />\n              <input\n                type=\"hidden\"\n                name=\"cn\"\n                value=\"Add special instructions to the seller:\"\n              />\n              <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n              <input type=\"hidden\" name=\"rm\" value=\"1\" />\n              <input\n                type=\"hidden\"\n                name=\"return\"\n                value=\"https://www.taxcooler.com/payment_sucess\"\n              />\n              <input\n                type=\"hidden\"\n                name=\"bn\"\n                value=\"PP-BuyNowBF:btn_paynowCC_LG.gif:NonHosted\"\n              />\n              <TextField\n                label=\"Enter amount Here\"\n                type=\"text\"\n                id=\"pp_amount\"\n                name=\"amount\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{\n                  mt: \"20px\",\n                  width: \"50%\",\n                  display: \"block\",\n                  ml: { xs: \"20px\", sm: \"0px\" },\n                }} // Adjust the margin-top as needed\n              />\n              <Button type=\"submit\">\n                <img\n                  src=\"https://www.paypalobjects.com/en_US/i/btn/btn_paynowCC_LG.gif\"\n                  border=\"0\"\n                  name=\"submit\"\n                  alt=\"PayPal - The safer, easier way to pay online!\"\n                />\n              </Button>\n              <img\n                alt=\"\"\n                border=\"0\"\n                src=\"https://www.paypalobjects.com/en_US/i/scr/pixel.gif\"\n                width=\"1\"\n                height=\"1\"\n              />\n            </form>\n            <Typography color=\"red\">\n              We will send your tax filing copies with instructions with in 2\n              business days.\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default PayPalPayment;\n","import React, { Component } from \"react\";\nimport {\n  Grid,\n  Box,\n  Link,\n  Avatar,\n  Typography,\n  Button,\n  Container,\n  Card,\n  CardContent,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  TextField,\n  Radio,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n  FormControl,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: \"700\",\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  headerText: {\n    fontSize: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"32px\",\n    marginBottom: \"16px\",\n    color: \"#2069DB\",\n  },\n  confirmButton: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    lineHeight: \"19px\",\n    color: \"#FFFFFF\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n}));\n\nconst TaxReturns = () => {\n  const customStyles = customTextStyles();\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Container>\n        <Box>\n          <TableContainer sx={{ marginTop: \"32px\" }}>\n            <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\n              Tax Return Document List:\n            </Typography>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n                marginTop: \"30px\",\n              }}\n              aria-label=\"Place Order Series Table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={customStyles.tableHeader}>ID</TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Document Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    uploaded on\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Remarks\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell className={customStyles.tableData}></TableCell>\n                  <TableCell className={customStyles.tableData}></TableCell>\n                  <TableCell className={customStyles.tableData}></TableCell>\n                  <TableCell className={customStyles.tableData}></TableCell>\n                  <TableCell className={customStyles.mobileView}>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        marginTop: \"16px\",\n                      }}\n                    >\n                      <Box sx={{ marginTop: \"3px\" }}>\n                        <Typography\n                          className={customStyles.mobileViewTableCellHeader}\n                        >\n                          ID\n                        </Typography>\n\n                        <Typography\n                          className={customStyles.mobileViewTableCellValue}\n                        ></Typography>\n                      </Box>\n                      <Box sx={{ marginTop: \"3px\" }}>\n                        <Typography\n                          className={customStyles.mobileViewTableCellHeader}\n                        >\n                          Document Name\n                        </Typography>\n\n                        <Typography\n                          className={customStyles.mobileViewTableCellValue}\n                        ></Typography>\n                      </Box>\n\n                      <Box sx={{ marginTop: \"3px\" }}>\n                        <Typography\n                          className={customStyles.mobileViewTableCellHeader}\n                        >\n                          uploaded on\n                        </Typography>\n\n                        <Typography\n                          className={customStyles.mobileViewTableCellValue}\n                        ></Typography>\n                      </Box>\n                      <Box sx={{ marginTop: \"3px\" }}>\n                        <Typography\n                          className={customStyles.mobileViewTableCellHeader}\n                        >\n                          Remarks\n                        </Typography>\n\n                        <Typography\n                          className={customStyles.mobileViewTableCellValue}\n                        ></Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default TaxReturns;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Box,\n  Button,\n  TextField,\n  Grid,\n  Typography,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  CircularProgress,\n  Container,\n  Paper,\n} from \"@mui/material\";\nimport { Card, CardContent, Link } from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport { GetApp, CloudUpload, FilterAltOffSharp } from \"@mui/icons-material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\nimport Api from \"../../components/Api\";\nimport CustomAlert from \"../../components/CustomAlert\";\nimport axios from \"axios\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: \"700\",\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  headerText: {\n    fontSize: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"32px\",\n    marginBottom: \"16px\",\n    color: \"#2069DB\",\n  },\n  confirmButton: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    lineHeight: \"19px\",\n    color: \"#FFFFFF\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  alertCard: {\n    border: \"1px solid #000000\",\n    marginBottom: theme.spacing(2),\n  },\n  alertIcon: {\n    color: \"#EB3414\",\n    marginRight: theme.spacing(1),\n  },\n  root: {\n    color: \"red\",\n    fontSize: \"1.0rem\",\n    marginLeft: \"10px\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    color: \"primary\",\n  },\n  info: {\n    color: \"green\",\n    fontSize: \"1.5rem\",\n    border: \"1px solid #000000\",\n    marginTop: \"10px\",\n  },\n}));\n\nconst UploadTaxDocs = ({ id }) => {\n  const customStyles = customTextStyles();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [state, setState] = useState({\n    isImport: false,\n    isImpoFormSubmitting: false,\n    selectedFile: {},\n    isMyTaxDocsLoading: false,\n    myTaxDocs: [],\n  });\n\n  const handleDownloadFile = (file) => {\n    setIsLoading(true);\n\n    let payload = {\n      file_name: file,\n      id: id,\n    };\n\n    privateApiPOST(Api.downloadTaxDocsFile, payload, { responseType: \"blob\" })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setIsLoading(false);\n          const url = window.URL.createObjectURL(new Blob([data]));\n          const anchor = document.createElement(\"a\");\n          anchor.href = url;\n          anchor.setAttribute(\"download\", file);\n          document.body.appendChild(anchor);\n          anchor.click();\n        } else {\n          setIsLoading(false);\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDownloadFile--->\", err);\n        setIsLoading(false);\n      });\n  };\n\n  const handleDeleteFile = (file) => {\n    setIsLoading(true);\n\n    let payload = {\n      file_name: file,\n      id: id,\n    };\n\n    privateApiPOST(Api.deleteTaxDocsFile, payload)\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setIsLoading(false);\n          handleFetchMyTaxDocs();\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDeleteFile--->\", err);\n        setIsLoading(false);\n      });\n  };\n\n  //CLICK - Upload input file\n  const handleUploadClick = (e) => {\n    let file = e.target.files[0];\n    if (file) {\n      setState((prev) => ({\n        ...prev,\n        selectedFile: file,\n      }));\n    }\n  };\n\n  //SUBMIT - Import form\n  const handleUploadTaxDocs = () => {\n    if (!state.selectedFile.name) {\n      setShowAlert({\n        isAlert: true,\n        severity: \"warning\",\n        alertText: \"Please choose file to import\",\n      });\n      return;\n    }\n\n    setState((prev) => ({\n      ...prev,\n      isImpoFormSubmitting: true,\n    }));\n\n    const formData = new FormData();\n    formData.append(\"upload\", state.selectedFile);\n    formData.append(\"id\", id);\n\n    const token = sessionStorage.getItem(\"token\");\n    axios\n      .post(Api.uploadTaxDocs, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: `Token ${token}`,\n        },\n      })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setShowAlert({\n            isAlert: true,\n            severity: \"success\",\n            alertText: data?.[\"message\"],\n          });\n          setState((prev) => ({\n            ...prev,\n            selectedFile: {},\n            isImpoFormSubmitting: false,\n            isImport: false,\n          }));\n          handleFetchMyTaxDocs();\n        }\n      })\n      .catch((error) => {\n        console.log(\"handleUploadTaxDocs--->\", error);\n        const { data } = error.response;\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n\n        setState((prev) => ({\n          ...prev,\n          selectedFile: {},\n          isImpoFormSubmitting: false,\n          isImport: false,\n        }));\n      });\n  };\n\n  const handleFetchMyTaxDocs = () => {\n    setState((prev) => ({ ...prev, isMyTaxDocsLoading: true }));\n    let payload = { id: id };\n    privateApiPOST(Api.uploadTaxDocs, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setState((prev) => ({\n            ...prev,\n            isMyTaxDocsLoading: false,\n            myTaxDocs: data?.data,\n          }));\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setState((prev) => ({ ...prev, isMyTaxDocsLoading: false }));\n      });\n  };\n\n  useEffect(() => {\n    handleFetchMyTaxDocs();\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Container>\n        {showAlert.isAlert && (\n          <CustomAlert\n            open={showAlert.isAlert}\n            severity={showAlert.severity}\n            alertTitle={showAlert.alertTitle}\n            alertText={showAlert.alertText}\n            onClose={() =>\n              setShowAlert({\n                isAlert: false,\n                alertTitle: \"\",\n                alertText: \"\",\n                severity: \"\",\n              })\n            }\n          />\n        )}\n        <Card className={customStyles.alertCard}>\n          <CardContent>\n            <Typography sx={{ marginBottom: \"10px\", color: \"red\" }}>\n              Alerts\n            </Typography>\n            <Typography variant=\"body2\">\n              <span className={customStyles.alertIcon}>!&nbsp;</span>\n              Information / Documents submitted here will be secured.\n            </Typography>\n            <br />\n            <Typography variant=\"body2\">\n              <span className={customStyles.alertIcon}>!&nbsp;</span>\n              Please contact our Team if any issues in uploading documents\n            </Typography>\n          </CardContent>\n        </Card>\n\n        <Typography className={customStyles.root}>\n          If needed, use the following links to download the required documents:\n          <br />\n          <Link\n            href=\"/static/img/1099_NEC_Expenses_Tax_Information.xlsx\"\n            className={customStyles.link}\n          >\n            1099 NEC Expenses Tax Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/City_Tax_Return_Information.xlsx\"\n            className={customStyles.link}\n          >\n            City Tax Return Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/Crypto_Information.xls\"\n            className={customStyles.link}\n          >\n            Crypto Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/FBAR_Information_2022.xls\"\n            className={customStyles.link}\n          >\n            FBAR Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/ITIN_Information.xls\"\n            className={customStyles.link}\n          >\n            ITN Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/Rental_Property_Details.xls\"\n            className={customStyles.link}\n          >\n            Rental Property Details\n          </Link>\n          <br />\n          After downloading, please fill/complete these documents and upload\n          them in the attachment section.\n        </Typography>\n        <Paper elevation={3} className={customStyles.info}>\n          <Table width=\"100%\">\n            <TableBody>\n              <TableRow valign=\"top\">\n                <TableCell align=\"left\" width=\"20%\">\n                  Addition Information\n                </TableCell>\n                <TableCell width=\"5%\"> - </TableCell>\n                <TableCell align=\"left\" width=\"75%\">\n                  If you want to provide any additional information to your Tax\n                  Consultant, please discuss during the Tax Interview.\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Paper>\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          sx={{ marginTop: { xs: \"20px\" } }}\n        >\n          <Box sx={{ marginRight: \"20px\" }}>\n            <input\n              required\n              id=\"import-file-button\"\n              type=\"file\"\n              onChange={handleUploadClick}\n              accept=\".xlsx\"\n              style={{ opacity: 0, visibility: \"hidden\", width: \"1px\" }}\n            />\n            <label htmlFor=\"import-file-button\">\n              <Button\n                startIcon={<CloudUploadIcon />}\n                component=\"span\"\n                variant=\"contained\"\n              >\n                Choose File\n              </Button>\n            </label>\n            <Typography sx={{ marginTop: \"8px\", fontStyle: \"italic\" }}>\n              {state.selectedFile.name}\n            </Typography>\n          </Box>\n          <Button onClick={handleUploadTaxDocs} sx={{ marginBottom: \"10px\" }}>\n            Upload\n          </Button>\n        </Box>\n        <Box>\n          {state.isMyTaxDocsLoading ? (\n            <CircularProgress />\n          ) : (\n            <TableContainer sx={{ marginTop: \"32px\" }}>\n              <Table\n                sx={{\n                  borderCollapse: \"collapse\",\n                }}\n                aria-label=\"Place Order Series Table\"\n              >\n                <TableHead>\n                  <TableRow>\n                    <TableCell className={customStyles.tableHeader}>\n                      File Name\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      Upload Time\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      File Size\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {state.myTaxDocs.length > 0 &&\n                    state.myTaxDocs.map((row, index) => (\n                      <TableRow key={index}>\n                        <TableCell className={customStyles.tableData}>\n                          {row.file_name}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          {row.upload_time}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          {row.file_size}\n                        </TableCell>\n                        <TableCell className={customStyles.buttons}>\n                          <Button\n                            disabled={isLoading}\n                            startIcon={<GetApp />}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleDownloadFile(row.file_name);\n                            }}\n                          >\n                            Download{\" \"}\n                            {isLoading && (\n                              <CircularProgress sx={{ ml: 1 }} size={14} />\n                            )}\n                          </Button>\n                        </TableCell>\n                        <TableCell className={customStyles.buttons}>\n                          <Button\n                            disabled={isLoading}\n                            startIcon={<DeleteIcon />}\n                            size=\"small\"\n                            onClick={() => {\n                              handleDeleteFile(row.file_name);\n                            }}\n                          >\n                            Delete{\" \"}\n                            {isLoading && (\n                              <CircularProgress sx={{ ml: 1 }} size={14} />\n                            )}\n                          </Button>\n                        </TableCell>\n                        <TableCell className={customStyles.mobileView}>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                File Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.file_name}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Upload Time\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.upload_time}\n                              </Typography>\n                            </Box>\n\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                File Size\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.file_size}\n                              </Typography>\n                            </Box>\n\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                                justifyContent: \"space-between\",\n                                marginTop: \"16px\",\n                              }}\n                            >\n                              <Button\n                                disabled={isLoading}\n                                startIcon={<GetApp />}\n                                size=\"small\"\n                                variant=\"outlined\"\n                                onClick={() => {\n                                  handleDownloadFile(row.file_name);\n                                }}\n                              >\n                                Download{\" \"}\n                                {isLoading && (\n                                  <CircularProgress sx={{ ml: 1 }} size={14} />\n                                )}\n                              </Button>\n                              <Button\n                                disabled={isLoading}\n                                startIcon={<DeleteIcon />}\n                                size=\"small\"\n                                onClick={() => {\n                                  handleDeleteFile(row.file_name);\n                                }}\n                              >\n                                Delete{\" \"}\n                                {isLoading && (\n                                  <CircularProgress sx={{ ml: 1 }} size={14} />\n                                )}\n                              </Button>\n                            </Box>\n                          </Box>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default UploadTaxDocs;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport config from \"../../config\";\n// Material UI\nimport { Grid, Box, Avatar, Typography, Tabs, Tab } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport PercentIcon from \"@mui/icons-material/Percent\";\nimport Groups from \"@mui/icons-material/Groups\";\nimport ListAlt from \"@mui/icons-material/ListAlt\";\nimport AspectRatioOutlined from \"@mui/icons-material/AspectRatioOutlined\";\nimport UnfoldLess from \"@mui/icons-material/UnfoldLess\";\nimport UnfoldMore from \"@mui/icons-material/UnfoldMore\";\nimport DiscountOutlined from \"@mui/icons-material/DiscountOutlined\";\nimport MonetizationOnOutlined from \"@mui/icons-material/MonetizationOnOutlined\";\nimport InsertPageBreakOutlined from \"@mui/icons-material/InsertPageBreakOutlined\";\nimport DescriptionOutlined from \"@mui/icons-material/DescriptionOutlined\";\nimport StackedBarChartOutlined from \"@mui/icons-material/StackedBarChartOutlined\";\nimport PriceCheckOutlined from \"@mui/icons-material/PriceCheckOutlined\";\nimport SavingsOutlinedIcon from \"@mui/icons-material/SavingsOutlined\";\nimport AccountBalanceWalletOutlinedIcon from \"@mui/icons-material/AccountBalanceWalletOutlined\";\nimport FilerDeatils from \"./filerDeatils\";\nimport IncomeDetails from \"./incomeDetails\";\nimport BankDetails from \"./bankDetails\";\nimport ConfirmDetails from \"./confirmDetails\";\nimport PickAppointment from \"./pickAppointment\";\nimport PayPalPayment from \"../Home/payPalPayment\";\nimport TaxReturns from \"./taxReturns\";\nimport UploadTaxDocs from \"./TaxDocs\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst TabsDesktop = ({ data, handleFetchData, handleDownloadTemplate }) => {\n  const params = useParams();\n  const customTextClasses = customTextStyles();\n  const [value, setValue] = useState(parseInt(params.action));\n\n  console.log(params.action);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function CustomTabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box>{children}</Box>}\n      </div>\n    );\n  }\n\n  CustomTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        marginBottom: \"64px\",\n      }}\n    >\n      <Box\n        sx={{\n          borderBottom: 1,\n          borderColor: \"divider\",\n          margin: \"8px\",\n        }}\n      >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"basic tabs example\"\n        >\n          <Tab\n            label=\"Filer Details\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(0)}\n          />\n          <Tab\n            label=\"Income Details\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(1)}\n          />\n          <Tab\n            label=\"Bank Details\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(2)}\n          />\n          <Tab\n            label=\"Upload Tax Docs\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(3)}\n          />\n          <Tab\n            label=\"Tax Returns\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(3)}\n          />\n        </Tabs>\n      </Box>\n\n      <CustomTabPanel value={value} index={0}>\n        <FilerDeatils\n          id={data[\"id\"]}\n          personalDetails={data[\"personalDetails\"]}\n          contactDetails={data[\"contactDetails\"]}\n          spouseDetails={data[\"spouseDetails\"]}\n          incomeDetails={data[\"incomeDetails\"]}\n          providedLivingSupport={data[\"providedLivingSupport\"]}\n          handleFetchData={handleFetchData}\n          handleDownloadTemplate={handleDownloadTemplate}\n        />\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={1}>\n        <IncomeDetails\n          id={data[\"id\"]}\n          data={data[\"incomeDetails\"]}\n          handleFetchData={handleFetchData}\n          handleDownloadTemplate={handleDownloadTemplate}\n        />\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={2}>\n        <BankDetails\n          id={data[\"id\"]}\n          data={data[\"bankDetails\"]}\n          handleFetchData={handleFetchData}\n        />\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={3}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Box>\n              <UploadTaxDocs id={data[\"id\"]} />\n            </Box>\n          </Grid>\n        </Grid>\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={4}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Box>\n              <TaxReturns id={data[\"id\"]} />\n            </Box>\n          </Grid>\n        </Grid>\n      </CustomTabPanel>\n    </Box>\n  );\n};\nexport default TabsDesktop;\n","import { Container, Typography, Box, Paper, Grid } from \"@mui/material\";\nimport React from \"react\";\n\nconst RefundQuote = () => {\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Container>\n        <Paper elevation={3} style={{ padding: \"16px\" }}>\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\n            <Grid item>\n              <Typography variant=\"h5\" color=\"error\" align=\"center\">\n                Refund Quote will be available after a telephone call with Tax\n                Consultant.\n              </Typography>\n              <Box mt={2}>\n                <Typography variant=\"h5\" color=\"error\" align=\"center\">\n                  You will be receiving an email as soon as the Refund quote is\n                  ready.\n                </Typography>\n              </Box>\n              <Box mt={2}>\n                <Typography variant=\"h5\" color=\"error\" align=\"center\">\n                  Please visit the Refund Quote section later.\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Container>\n    </Box>\n  );\n};\n\nexport default RefundQuote;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport { Grid, Box, Avatar, Typography } from \"@mui/material\";\nimport SavingsOutlinedIcon from \"@mui/icons-material/SavingsOutlined\";\nimport AccountBalanceWalletOutlinedIcon from \"@mui/icons-material/AccountBalanceWalletOutlined\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { makeStyles } from \"@mui/styles\";\nimport BankDetails from \"./bankDetails\";\nimport FilerDetails from \"./filerDeatils\";\nimport IncomeDetails from \"./incomeDetails\";\nimport PickAppointment from \"./pickAppointment\";\nimport UploadTaxDocs from \"./TaxDocs\";\nimport TaxReturns from \"./taxReturns\";\nimport PayPalPayment from \"../Home/payPalPayment\";\nimport ConfirmDetails from \"./confirmDetails\";\nimport RefundQuote from \"./refundQuote\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst BasicAccordion = ({ data, handleFetchData, handleDownloadTemplate }) => {\n  const customTextClasses = customTextStyles();\n  const params = useParams();\n  const [expanded, setExpanded] =\n    parseInt(params.action) === 7 ? useState(\"panel7\") : useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    console.log(panel);\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handlePickAppointment = () => {\n    setExpanded(\"panel6\");\n  };\n\n  return (\n    <Box>\n      <Accordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel1\" ? \"600\" : \"400\" }}\n          >\n            Filer Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <FilerDetails\n            id={data[\"id\"]}\n            personalDetails={data[\"personalDetails\"]}\n            contactDetails={data[\"contactDetails\"]}\n            spouseDetails={data[\"spouseDetails\"]}\n            incomeDetails={data[\"incomeDetails\"]}\n            providedLivingSupport={data[\"providedLivingSupport\"]}\n            handleFetchData={handleFetchData}\n            handleDownloadTemplate={handleDownloadTemplate}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel2\"}\n        onChange={handleChange(\"panel2\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel2\" ? \"600\" : \"400\" }}\n          >\n            Income Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <IncomeDetails\n            id={data[\"id\"]}\n            data={data[\"incomeDetails\"]}\n            handleFetchData={handleFetchData}\n            handleDownloadTemplate={handleDownloadTemplate}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel3\"}\n        onChange={handleChange(\"panel3\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3a-content\"\n          id=\"panel3a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\n          >\n            Bank Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\", paddingLeft: \"0px\" }}>\n          <BankDetails\n            id={data[\"id\"]}\n            data={data[\"bankDetails\"]}\n            handleFetchData={handleFetchData}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel4\"}\n        onChange={handleChange(\"panel4\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel4a-content\"\n          id=\"panel4a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          Upload Tax Docs\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <UploadTaxDocs id={data[\"id\"]} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel5\"}\n        onChange={handleChange(\"panel5\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel5a-content\"\n          id=\"panel5a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel5\" ? \"600\" : \"400\" }}\n          >\n            Confirm Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <ConfirmDetails\n            id={data[\"id\"]}\n            personalDetails={data[\"personalDetails\"]}\n            contactDetails={data[\"contactDetails\"]}\n            spouseDetails={data[\"spouseDetails\"]}\n            providedLivingSupport={data[\"providedLivingSupport\"]}\n            incomeDetails={data[\"incomeDetails\"]}\n            bankDetails={data[\"bankDetails\"]}\n            handlePickAppointment={handlePickAppointment}\n            dependantDetails={data[\"dependantDetails\"]}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel6\"}\n        onChange={handleChange(\"panel6\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel6a-content\"\n          id=\"panel6a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel6\" ? \"600\" : \"400\" }}\n          >\n            Pick Appointment\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <PickAppointment id={data[\"id\"]} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel7\"}\n        onChange={handleChange(\"panel7\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel7a-content\"\n          id=\"panel7a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel7\" ? \"600\" : \"400\" }}\n          >\n            Pay Now\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <PayPalPayment />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel8\"}\n        onChange={handleChange(\"panel8\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel8a-content\"\n          id=\"panel8a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel8\" ? \"600\" : \"400\" }}\n          >\n            Tax Return\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <TaxReturns />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel9\"}\n        onChange={handleChange(\"panel9\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel9a-content\"\n          id=\"panel9a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel9\" ? \"600\" : \"400\" }}\n          >\n            Refund Quote\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <RefundQuote />\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n};\n\nexport default BasicAccordion;\n","import React, { useEffect, useState } from \"react\";\nimport Page from \"../../components/Page\";\nimport {\n  Grid,\n  Container,\n  Box,\n  CircularProgress,\n  Typography,\n  Card,\n  Button,\n  Avatar,\n} from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport TabsDesktop from \"../TaxFilling/TabsDesktop\";\nimport BasicAccordion from \"../TaxFilling/AccordionMobile\";\nimport { makeStyles } from \"@mui/styles\";\nimport ConfirmDetails from \"./confirmDetails\";\nimport PickAppointment from \"./pickAppointment\";\nimport PayPalPayment from \"../Home/payPalPayment\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nimport Api from \"../../components/Api\";\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\nimport RefundQuote from \"./refundQuote\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tabButton: {\n    display: \"block\",\n    width: \"100%\",\n    paddingLeft: \"15px\",\n    textAlign: \"left\",\n    fontWeight: \"500\",\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n  },\n}));\n\nconst TaxFillingPage = () => {\n  const params = useParams();\n  const customStyles = customTextStyles();\n  const [data, setData] = useState({});\n  const [isLoadingSpin, setIsLoadingSpin] = useState(true);\n  const [isActiveTab, setIsActiveTab] =\n    parseInt(params.action) === 7\n      ? useState(\"Pay Now\")\n      : useState(\"My Details\");\n\n  const handleActiveTabChange = (tabName) => {\n    setIsActiveTab(tabName);\n  };\n\n  const handleFetchTaxFilingDetails = () => {\n    setIsLoadingSpin(true);\n    let payload = { id: params.id };\n    privateApiPOST(Api.taxFiling, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setData(data?.data);\n          setIsLoadingSpin(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsLoadingSpin(false);\n      });\n  };\n\n  const handleDownloadTemplate = (file) => {\n    let payload = {\n      file_name: file,\n    };\n\n    privateApiPOST(Api.templateDownload, payload, { responseType: \"blob\" })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          const url = window.URL.createObjectURL(new Blob([data]));\n          const anchor = document.createElement(\"a\");\n          anchor.href = url;\n          anchor.setAttribute(\"download\", file);\n          document.body.appendChild(anchor);\n          anchor.click();\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDownloadFile--->\", err);\n      });\n  };\n\n  useEffect(() => {\n    handleFetchTaxFilingDetails();\n  }, []);\n\n  return (\n    <Page title={\"Tax Filing\"}>\n      <Box>\n        <Container maxWidth=\"lg\">\n          <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n            <Grid container>\n              <Grid item xs={2}>\n                <Card\n                  sx={{\n                    minHeight: \"240px\",\n                    borderRadius: \"2px\",\n                  }}\n                >\n                  {[\n                    \"My Details\",\n                    \"Confirm Details\",\n                    \"Pick Appointment\",\n                    \"Refund Quote\",\n                    \"Pay Now\",\n                  ].map((each, index) =>\n                    each === \"Pay Now\" ? (\n                      // Conditional rendering for \"Pay Now\" button\n                      <Button\n                        key={index}\n                        onClick={() => handleActiveTabChange(each)}\n                      >\n                        <img\n                          src=\"/static/img/pay_now.jpg\"\n                          alt=\"Pay Now\"\n                          style={{\n                            minWidth: \"100px\",\n                            width: \"190px\",\n                            height: \"50px\",\n                          }}\n                        />\n                      </Button>\n                    ) : (\n                      // Conditional rendering for other tabs\n                      <Button\n                        key={index}\n                        onClick={() => handleActiveTabChange(each)}\n                        variant={isActiveTab === each ? \"contained\" : \"text\"}\n                        className={customStyles.tabButton}\n                        sx={{\n                          color: isActiveTab === each ? \"#fff\" : \"#474747\",\n                        }}\n                      >\n                        {each}\n                      </Button>\n                    )\n                  )}\n                </Card>\n              </Grid>\n              <Grid item xs={10}>\n                {isLoadingSpin ? (\n                  <Box\n                    display=\"flex\"\n                    height=\"100%\"\n                    width=\"100%\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    sx={{\n                      position: \"absolute\",\n                      zIndex: \"10\",\n                      left: 0,\n                      top: \"30%\",\n                    }}\n                  >\n                    <CircularProgress size={30} />\n                  </Box>\n                ) : data ? (\n                  <Box\n                    sx={{\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                      boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\",\n                      borderRadius: \"4px\",\n                      padding: \"20px 10px\",\n                      height: \"800px\", // Adjust the height as needed\n                      overflow: \"auto\", // Add overflow to enable scrolling\n                      maxHeight: \"800px\", // Add a maximum height to prevent content from overflowing\n                      marginLeft: \"20px\",\n                    }}\n                  >\n                    <PerfectScrollbar>\n                      <Typography\n                        variant=\"h3\"\n                        sx={{\n                          marginLeft: \"20px\",\n                          marginBottom:\n                            isActiveTab === \"My Details\" ? 0 : \"30px\",\n                        }}\n                      >\n                        Tax-Filing For Year - {params.year}\n                      </Typography>\n\n                      {isActiveTab === \"My Details\" && (\n                        <Box>\n                          <Typography\n                            color={\"primary\"}\n                            sx={{\n                              marginTop: \"10px\",\n                              marginLeft: \"auto\",\n                              marginRight: \"auto\",\n                              textAlign: \"center\",\n                            }}\n                          >\n                            NOTE : ON FILLING ALL INFORMATION PLEASE MENTION\n                            YOUR AVAILABILITY IN Pick an Appointment PAGE\n                          </Typography>\n                          <Typography\n                            color={\"red\"}\n                            sx={{\n                              marginLeft: \"24px\",\n                              wordSpacing: \"3px\",\n                              marginTop: \"4px\",\n                            }}\n                          >\n                            Taxpayer and spouse's SSN and Date of Birth fields\n                            are set to default values. Please don't change them.\n                            We will collect these details via phone call at the\n                            time of tax filing\n                          </Typography>\n\n                          <TabsDesktop\n                            data={data}\n                            handleFetchData={handleFetchTaxFilingDetails}\n                            handleDownloadTemplate={handleDownloadTemplate}\n                          />\n                        </Box>\n                      )}\n                      {isActiveTab === \"Confirm Details\" && (\n                        <ConfirmDetails\n                          id={data[\"id\"]}\n                          personalDetails={data[\"personalDetails\"]}\n                          contactDetails={data[\"contactDetails\"]}\n                          spouseDetails={data[\"spouseDetails\"]}\n                          providedLivingSupport={data[\"providedLivingSupport\"]}\n                          incomeDetails={data[\"incomeDetails\"]}\n                          bankDetails={data[\"bankDetails\"]}\n                          handlePickAppointment={handleActiveTabChange}\n                          dependantDetails={data[\"dependantDetails\"]}\n                        />\n                      )}\n                      {isActiveTab === \"Pick Appointment\" && (\n                        <PickAppointment id={data[\"id\"]} />\n                      )}\n                      {isActiveTab === \"Refund Quote\" && <RefundQuote />}\n                      {isActiveTab === \"Pay Now\" && <PayPalPayment />}\n                    </PerfectScrollbar>\n                  </Box>\n                ) : null}\n              </Grid>\n            </Grid>\n          </Box>\n          <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\n            {isLoadingSpin ? (\n              <Box\n                display=\"flex\"\n                height=\"100%\"\n                width=\"100%\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                sx={{\n                  position: \"absolute\",\n                  zIndex: \"10\",\n                  left: 0,\n                  top: \"70%\",\n                }}\n              >\n                <CircularProgress size={30} />\n              </Box>\n            ) : data ? (\n              <BasicAccordion\n                data={data}\n                handleFetchData={handleFetchTaxFilingDetails}\n                handleDownloadTemplate={handleDownloadTemplate}\n              />\n            ) : null}\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default TaxFillingPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Box, Button, Typography } from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CustomAlert from \"../../components/CustomAlert\";\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport Api from \"../../components/Api\";\nimport Page from \"../../components/Page\";\nimport { setTaxYear } from \"../../redux/app/appSlice\";\n\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst useStyles = makeStyles((theme) => ({\n  // root: {\n  //   backgroundColor: theme.palette.background.dark,\n  //   height: \"100%\",\n  //   paddingBottom: \"0px\",\n  //   paddingTop: \"0px\",\n  //   position: \"relative\",\n  // },\n\n  // logo: {\n  //   width: 150,\n  //   padding: 10,\n  //   [theme.breakpoints.down(\"sm\")]: {\n  //     width: 110,\n  //   },\n  // },\n  submitProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  mainBlock: {\n    // width: \"50vw\",\n    // height: \"100vh\",\n    // display: \"flex\",\n    // flexDirection: \"row\",\n    minWidth: \"400px\",\n    margin: \"0\",\n    padding: \"0\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // flexDirection: \"column\",\n      minWidth: \"300px\",\n    },\n  },\n  // leftSide: {\n  //   width: \"70%\",\n  //   height: \"100vh\",\n  //   position: \"relative\",\n  //   backgroundColor: \"#2069D8\",\n  //   [theme.breakpoints.down(\"sm\")]: {\n  //     width: \"100%\",\n  //     height: \"40vh\",\n  //     margin: \"0\",\n  //   },\n  // },\n\n  avatarLogo: {\n    width: 200,\n    height: 72,\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"33%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      left: \"20%\",\n      top: \"30%\",\n    },\n  },\n  title: {\n    fontFamily: \"Montserrat\",\n    fontWeight: \"700\",\n    fontSize: \"72px\",\n    textAlign: \"center\",\n    lineHeight: \"87.7px\",\n    color: \"#FFFFFF\",\n    margin: \"auto\",\n    marginTop: \"50vh\",\n    marginBottom: \"auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"10vh\",\n    },\n  },\n\n  rightSide: {\n    width: \"100%\",\n    height: \"100vh\",\n    backgroundColor: \"#F5F5F5\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\", // Center vertically\n    alignItems: \"center\", // Center horizontally\n    margin: \"0\",\n    paddingRight: \"200px\",\n    padding: \"0\", // Reset padding\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: \"244px\", // Adjust padding for medium and larger screens\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\", // Set width to 100%\n      paddingLeft: \"0\", // Reset padding\n      justifyContent: \"center\", // Center vertically\n      alignItems: \"center\", // Center horizontally\n      paddingRight: \"0px\",\n      marginTop: \"-100px\",\n    },\n  },\n}));\n\nconst LoginView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  return (\n    <>\n      <Box className={classes.mainBlock}>\n        {showAlert.isAlert ? (\n          <CustomAlert\n            open={showAlert.isAlert}\n            severity={showAlert.severity}\n            alertTitle={showAlert.alertTitle}\n            alertText={showAlert.alertText}\n            onClose={() =>\n              setShowAlert({\n                isAlert: false,\n                alertTitle: \"\",\n                alertText: \"\",\n                severity: \"\",\n              })\n            }\n          />\n        ) : null}\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          height=\"100%\"\n          justifyContent=\"center\"\n        >\n          {/* <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              marginBottom={2}\n            >\n              \n            </Box> */}\n          <Formik\n            initialValues={{\n              email: \"\",\n              password: \"\",\n              // taxYear: \"\",\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email(\"Must be a valid email\")\n                .max(255)\n                .required(\"Email is required\"),\n              password: Yup.string().max(255).required(\"Password is required\"),\n              // taxYear: Yup.string()\n              //   .max(255)\n              //   .required(\"Tax Year is required\"),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              const url = Api.login;\n\n              const config = {\n                headers: {\n                  \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                },\n              };\n\n              axios\n                .post(url, values, config)\n                .then((res) => {\n                  if (res.status === 200) {\n                    window.sessionStorage.setItem(\n                      \"token\",\n                      res.data?.data?.token\n                    );\n                    setSubmitting(false);\n                    dispatch(setTaxYear(values.taxYear));\n                    navigate(\"/\");\n                  }\n                })\n                .catch((error) => {\n                  if (error.response.status === 400) {\n                    setShowAlert({\n                      isAlert: true,\n                      alertText: \"Invalid credentials\",\n                      severity: \"error\",\n                      alertTitle: \"Error\",\n                    });\n                    setSubmitting(false);\n                  } else {\n                    setShowAlert({\n                      isAlert: true,\n                      alertText: \"Something went wrong\",\n                      severity: \"error\",\n                      alertTitle: \"Error\",\n                    });\n                    resetForm();\n                    setSubmitting(false);\n                  }\n                });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values,\n            }) => (\n              <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography color=\"textPrimary\" variant=\"h4\">\n                    SIGN IN TO YOUR ACCOUNT\n                  </Typography>\n                </Box>\n\n                <CustomInputTextField\n                  attribute=\"Email Address\"\n                  is_required={true}\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <CustomInputTextField\n                  attribute=\"Password\"\n                  is_required={true}\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                {/* <TextField\n                        select\n                        error={Boolean(touched.taxYear && errors.taxYear)}\n                        helperText={touched.taxYear && errors.taxYear}\n                        fullWidth\n                        label=\"Tax Year\"\n                        margin=\"normal\"\n                        name=\"taxYear\" // Change \"taxyear\" to \"taxYear\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.taxYear}\n                        variant=\"outlined\"\n                      >\n                        <MenuItem value=\"currentYear\">Current Year</MenuItem>\n                        <MenuItem value=\"AllYears\">All Years</MenuItem>\n                      </TextField> */}\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default LoginView;\n","import React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Box, Button, Typography, CircularProgress } from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CustomAlert from \"../../components/CustomAlert\";\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport Api from \"../../components/Api\";\nimport Page from \"../../components/Page\";\nimport { setTaxYear } from \"../../redux/app/appSlice\";\n\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst useStyles = makeStyles((theme) => ({\n  submitProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  mainBlock: {\n    // width: \"50vw\",\n    // height: \"100vh\",\n    // display: \"flex\",\n    // flexDirection: \"row\",\n    minWidth: \"400px\",\n    margin: \"0\",\n    padding: \"0\",\n    [theme.breakpoints.down(\"sm\")]: {\n      //   flexDirection: \"column\",\n      minWidth: \"300px\",\n    },\n  },\n}));\n\nconst ForgotPasswordView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\n  const [forgotPasswordState, setForgetPasswordState] = useState({ email: \"\" });\n  const [isResetPasswordSubmitting, setIsRestPasswordSubmitting] =\n    useState(false);\n\n  const handleForgotPassword = () => {\n    const url = Api.forgotPassword;\n    setIsRestPasswordSubmitting(true);\n    const config = {\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n    };\n\n    axios\n      .post(url, forgotPasswordState, config)\n      .then((res) => {\n        setShowAlert({\n          isAlert: true,\n          alertText: res.data[\"message\"],\n          severity: \"success\",\n        });\n        setIsForgotPassword(false);\n        setIsRestPasswordSubmitting(false);\n        setForgetPasswordState({ email: \"\" });\n      })\n      .catch((error) => {\n        console.log(error.response);\n        setShowAlert({\n          isAlert: true,\n          alertText: error.response.data[\"message\"],\n          severity: \"error\",\n          alertTitle: \"Error\",\n        });\n        setIsForgotPassword(false);\n        setIsRestPasswordSubmitting(false);\n        setForgetPasswordState({ email: \"\" });\n      });\n  };\n\n  return (\n    <Box className={classes.mainBlock}>\n      {showAlert.isAlert ? (\n        <CustomAlert\n          open={showAlert.isAlert}\n          severity={showAlert.severity}\n          alertTitle={showAlert.alertTitle}\n          alertText={showAlert.alertText}\n          onClose={() =>\n            setShowAlert({\n              isAlert: false,\n              alertTitle: \"\",\n              alertText: \"\",\n              severity: \"\",\n            })\n          }\n        />\n      ) : null}\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        {/* <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              marginBottom={2}\n            >\n              \n            </Box> */}\n\n        <Box mb={3}>\n          <Typography color=\"textPrimary\" variant=\"h4\">\n            FORGOT PASSWORD?\n          </Typography>\n        </Box>\n\n        <CustomInputTextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          attribute=\"Email ID (User ID)\"\n          is_required={true}\n          type=\"email\"\n          fullWidth\n          autoComplete=\"off\"\n          value={forgotPasswordState.email}\n          onChange={(e) => setForgetPasswordState({ email: e.target.value })}\n        />\n\n        <Box my={2}>\n          <Button\n            onClick={handleForgotPassword}\n            color=\"primary\"\n            disabled={isResetPasswordSubmitting}\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Reset Password\n            {isResetPasswordSubmitting && (\n              <CircularProgress size={24} className={classes.submitProgress} />\n            )}\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ForgotPasswordView;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Avatar, Typography, Box, Grid, Container } from \"@mui/material\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport PaidIcon from \"@mui/icons-material/Paid\";\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\n\n// Your remaining components and code here\nimport Page from \"../../components/Page\";\nimport LoginView from \"./LoginView\";\nimport ForgotPasswordView from \"./ForgotPassword\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    border: \"1px solid #000000\",\n    padding: \"20px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#f7f7f7\",\n    // maxHeight: \"50vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"300px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      minHeight: \"280px\",\n      padding: \"20px 10px\",\n    },\n  },\n  logoAvatar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      //   marginLeft: \"200px\",\n      marginRight: \"auto\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"150px\",\n    },\n  },\n}));\n\nexport const AppBar = () => {\n  const customStyles = useStyles();\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#fafafa\",\n        padding: \"5px 20px\",\n      }}\n    >\n      <Box\n        sx={{\n          display: { xs: \"none\", sm: \"block\" },\n        }}\n      >\n        <Box sx={{ display: \"flex\" }}>\n          <Avatar\n            variant=\"square\"\n            src=\"/static/img/onecall-logo.png\"\n            sx={{\n              height: 50,\n              width: 140,\n              marginBottom: \"10px\",\n            }}\n            className={customStyles.logoAvatar}\n          />\n          <Typography\n            variant=\"h6\"\n            sx={{\n              fontSize: \"16px\",\n              marginTop: \"12px\",\n              marginLeft: \"20px\",\n            }}\n          >\n            WE MAKE TAX SIMPLE\n          </Typography>\n        </Box>\n        <Typography variant=\"body2\" sx={{ fontSize: \"16px\" }}>\n          <strong>Phone:</strong> (248) 971-3300\n        </Typography>\n        <Typography variant=\"body2\" sx={{ fontSize: \"16px\" }}>\n          <strong>E-mail:</strong> Onecalltaxservices.digital@gmail.com\n        </Typography>\n      </Box>\n      <Avatar\n        variant=\"square\"\n        src=\"/static/img/irs_image.jpg\"\n        sx={{\n          width: \"81px\",\n          height: \"83px\",\n          display: { xs: \"none\", sm: \"flex\" },\n        }}\n      />\n\n      <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\n        <Avatar\n          variant=\"square\"\n          src=\"/static/img/onecall-logo.png\"\n          sx={{\n            height: 50,\n            width: 140,\n            marginTop: \"12px\",\n            marginBottom: \"10px\",\n          }}\n          className={customStyles.logoAvatar}\n        />\n        <Typography\n          variant=\"h6\"\n          sx={{\n            fontSize: \"16px\",\n          }}\n        >\n          WE MAKE TAX SIMPLE\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst Authentication = () => {\n  const customStyles = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Page title=\"Login\">\n      <Box sx={{ backgroundColor: \"#183360\", height: \"100vh\" }}>\n        <Container maxWidth=\"lg\">\n          <Box sx={{ backgroundColor: \"#fafafa\", padding: \"5px 5px 30px\" }}>\n            <AppBar />\n            <Box sx={{ padding: { xs: 0, sm: \"20px 30px\" } }}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <Box className={customStyles.box}>\n                    <LoginView />\n                  </Box>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Box className={customStyles.box}>\n                    <ForgotPasswordView />\n                  </Box>\n                </Grid>\n              </Grid>\n\n              <Box\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography variant=\"h5\">New Client? Please</Typography>\n\n                <Avatar\n                  onClick={() => navigate(\"/register\")}\n                  variant=\"square\"\n                  src=\"/static/img/register.png\"\n                  sx={{ height: 33, width: 99, marginLeft: \"10px\" }}\n                />\n              </Box>\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default Authentication;\n","import React from \"react\";\nimport { Box, TextField, Grid, Typography } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst NO_WRAP_ATTRIBUTES = [\n  \"Occupation / Job Title\",\n  \"Email Address\",\n  \"Password\",\n  \"Email ID (User ID)\",\n  \"Confirm Password\",\n  \"Referral ID (Optional)\",\n];\n\nconst CustomInputTextField = ({\n  attribute,\n  is_required,\n  attributeTextAlign,\n  isMarginTopNotRequired,\n  ...others\n}) => {\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        maxHeight: \"60px\",\n      }}\n    >\n      <Grid container>\n        <Grid\n          item\n          xs={4}\n          sx={{ marginTop: isMarginTopNotRequired ? \"12px\" : \"24px\" }}\n        >\n          {/* <Typography\n            sx={{\n              margin: \"20px 10px\",\n              fontSize: \"16px\",\n              lineHeight: \"24px\",\n              fontWeight: 400,\n            }}\n          >\n            {is_required ? (\n              <>\n                {attribute}\n                <span\n                  style={{\n                    color: \"red\", // Set color to red\n                    fontSize: \"16px\",\n                    marginLeft: \"3px\",\n                  }}\n                >\n                  {\" \"}\n                  *\n                </span>\n              </>\n            ) : (\n              attribute\n            )}\n          </Typography> */}\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              marginRight: { xs: 0, sm: attributeTextAlign ? \"5px\" : 0 },\n              justifyContent: {\n                xs: \"flex-start\",\n                sm: attributeTextAlign ? \"flex-end\" : \"flex-start\",\n              },\n            }}\n          >\n            <Typography\n              variant=\"body1\"\n              sx={{\n                whiteSpace: NO_WRAP_ATTRIBUTES.includes(attribute)\n                  ? \"nowrap\"\n                  : \"pre-wrap\",\n              }}\n            >\n              {attribute}\n            </Typography>\n            {is_required && (\n              <Typography\n                sx={{\n                  color: \"red\",\n                  fontSize: \"0.875rem\",\n                  marginLeft: \"3px\",\n                }}\n              >\n                *\n              </Typography>\n            )}\n            &nbsp;:\n          </Box>\n        </Grid>\n        <Grid item xs={attribute === \"Income Amount\" ? 4 : 8}>\n          <TextField\n            {...others}\n            sx={{\n              \"& .MuiOutlinedInput-root\": {\n                \"& fieldset\": {\n                  borderRadius: \"2px\",\n                },\n              },\n              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n                border: \"0.1px solid #bdbdbd\",\n              },\n              \"& .MuiOutlinedInput-input\": {\n                padding: \"10px\",\n                backgroundColor: \"rgba(255,255,255,1)\",\n              },\n              width: \"90%\",\n            }}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nCustomInputTextField.prototype = {\n  is_required: PropTypes.bool,\n  attribute: PropTypes.string, //['success','warning', 'error']\n  attributeTextAlign: PropTypes.string, //['success','warning', 'error']\n};\n\nexport default CustomInputTextField;\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Snackbar } from \"@mui/material\";\nimport { Alert, AlertTitle } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(10),\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\n  },\n  alertContainer: {\n    minWidth: 350,\n  },\n}));\n\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\n  let vertical = \"top\",\n    horizontal = \"right\";\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={onClose}\n      className={classes.root}\n    >\n      <Alert\n        severity={severity}\n        onClose={onClose}\n        className={classes.alertContainer}\n      >\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\n        {alertText}!\n      </Alert>\n    </Snackbar>\n  );\n};\n\nCustomAlert.prototype = {\n  open: PropTypes.bool,\n  severity: PropTypes.string, //['success','warning', 'error']\n  alertText: PropTypes.string,\n  alertTitle: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default CustomAlert;\n"],"sourceRoot":""}