{"version":3,"sources":["webpack:///./src/views/Auth/LoginView.js","webpack:///./src/views/Auth/ForgotPassword.js","webpack:///./src/views/Auth/index.js","webpack:///./src/views/Auth/RegisterView.js","webpack:///./src/components/CustomInputField.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["useStyles","makeStyles","theme","_rightSide","submitProgress","position","top","left","marginTop","marginLeft","mainBlock","_defineProperty","minWidth","margin","padding","breakpoints","down","avatarLogo","width","height","title","fontFamily","fontWeight","fontSize","textAlign","lineHeight","color","marginBottom","rightSide","backgroundColor","display","flexDirection","justifyContent","alignItems","paddingRight","up","paddingLeft","LoginView","classes","navigate","useNavigate","dispatch","useDispatch","_useState2","_slicedToArray","useState","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","React","createElement","Fragment","Box","className","CustomAlert","open","onClose","Formik","initialValues","email","password","validationSchema","Yup","shape","max","required","onSubmit","values","_ref","setSubmitting","resetForm","url","Api","login","config","headers","Cookies","get","axios","post","then","res","_res$data","status","window","sessionStorage","setItem","data","token","setTaxYear","taxYear","error","response","_ref2","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","autoComplete","mb","Typography","variant","CustomInputTextField","attribute","is_required","Boolean","fullWidth","helperText","name","onBlur","onChange","type","value","is_bold","my","Button","disabled","size","ForgotPasswordView","_useState4","setIsForgotPassword","_useState6","forgotPasswordState","setForgetPasswordState","_useState8","isResetPasswordSubmitting","setIsRestPasswordSubmitting","autoFocus","id","e","target","onClick","forgotPassword","console","log","CircularProgress","_logoAvatar","box","border","minHeight","logoAvatar","marginRight","AppBar","customStyles","sx","xs","sm","Avatar","src","Authentication","Page","backgroundImage","paddingTop","backgroundRepeat","backgroundSize","Container","maxWidth","Grid","container","spacing","item","root","palette","background","dark","alert","right","logo","menuPaper","maxHeight","RegisterView","_useLocation","useLocation","search","pathname","queryParams","URLSearchParams","firstName","lastName","gender","passwordConfirmation","referralId","role","matches","when","is","val","length","oneOf","signup","select","MenuItem","component","NO_WRAP_ATTRIBUTES","attributeTextAlign","attributeMarginTop","others","_objectWithoutProperties","_excluded","_objectSpread","whiteSpace","includes","TextField","_extends","borderRadius","defaultProps","prototype","PropTypes","bool","string","forwardRef","ref","children","_ref$title","rest","Helmet","propTypes","node","isRequired","boxShadow","alertContainer","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","func"],"mappings":"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","file":"RegisterView.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Box, Button, Typography } from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CustomAlert from \"../../components/CustomAlert\";\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport Api from \"../../components/Api\";\nimport Page from \"../../components/Page\";\nimport { setTaxYear } from \"../../redux/app/appSlice\";\n\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst useStyles = makeStyles((theme) => ({\n  // root: {\n  //   backgroundColor: theme.palette.background.dark,\n  //   height: \"100%\",\n  //   paddingBottom: \"0px\",\n  //   paddingTop: \"0px\",\n  //   position: \"relative\",\n  // },\n\n  // logo: {\n  //   width: 150,\n  //   padding: 10,\n  //   [theme.breakpoints.down(\"sm\")]: {\n  //     width: 110,\n  //   },\n  // },\n  submitProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  mainBlock: {\n    // width: \"50vw\",\n    // height: \"100vh\",\n    // display: \"flex\",\n    // flexDirection: \"row\",\n    minWidth: \"400px\",\n    margin: \"0\",\n    padding: \"0\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // flexDirection: \"column\",\n      minWidth: \"300px\",\n    },\n  },\n  // leftSide: {\n  //   width: \"70%\",\n  //   height: \"100vh\",\n  //   position: \"relative\",\n  //   backgroundColor: \"#2069D8\",\n  //   [theme.breakpoints.down(\"sm\")]: {\n  //     width: \"100%\",\n  //     height: \"40vh\",\n  //     margin: \"0\",\n  //   },\n  // },\n\n  avatarLogo: {\n    width: 200,\n    height: 72,\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"33%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      left: \"20%\",\n      top: \"30%\",\n    },\n  },\n  title: {\n    fontFamily: \"Montserrat\",\n    fontWeight: \"700\",\n    fontSize: \"72px\",\n    textAlign: \"center\",\n    lineHeight: \"87.7px\",\n    color: \"#FFFFFF\",\n    margin: \"auto\",\n    marginTop: \"50vh\",\n    marginBottom: \"auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"10vh\",\n    },\n  },\n\n  rightSide: {\n    width: \"100%\",\n    height: \"100vh\",\n    backgroundColor: \"#F5F5F5\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\", // Center vertically\n    alignItems: \"center\", // Center horizontally\n    margin: \"0\",\n    paddingRight: \"200px\",\n    padding: \"0\", // Reset padding\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: \"244px\", // Adjust padding for medium and larger screens\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\", // Set width to 100%\n      paddingLeft: \"0\", // Reset padding\n      justifyContent: \"center\", // Center vertically\n      alignItems: \"center\", // Center horizontally\n      paddingRight: \"0px\",\n      marginTop: \"-100px\",\n    },\n  },\n  \"& .css-t7eypm-MuiTypography-root\": {\n    fontWeight: \"700\",\n  },\n}));\n\nconst LoginView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  return (\n    <>\n      <Box className={classes.mainBlock}>\n        {showAlert.isAlert ? (\n          <CustomAlert\n            open={showAlert.isAlert}\n            severity={showAlert.severity}\n            alertTitle={showAlert.alertTitle}\n            alertText={showAlert.alertText}\n            onClose={() =>\n              setShowAlert({\n                isAlert: false,\n                alertTitle: \"\",\n                alertText: \"\",\n                severity: \"\",\n              })\n            }\n          />\n        ) : null}\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          height=\"100%\"\n          justifyContent=\"center\"\n        >\n          {/* <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              marginBottom={2}\n            >\n              \n            </Box> */}\n          <Formik\n            initialValues={{\n              email: \"\",\n              password: \"\",\n              // taxYear: \"\",\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email(\"Must be a valid email\")\n                .max(255)\n                .required(\"Email is required\"),\n              password: Yup.string().max(255).required(\"Password is required\"),\n              // taxYear: Yup.string()\n              //   .max(255)\n              //   .required(\"Tax Year is required\"),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              const url = Api.login;\n\n              const config = {\n                headers: {\n                  \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                },\n              };\n\n              axios\n                .post(url, values, config)\n                .then((res) => {\n                  if (res.status === 200) {\n                    window.sessionStorage.setItem(\n                      \"token\",\n                      res.data?.data?.token\n                    );\n                    setSubmitting(false);\n                    dispatch(setTaxYear(values.taxYear));\n                    navigate(\"/\");\n                  }\n                })\n                .catch((error) => {\n                  if (error.response.status === 400) {\n                    setShowAlert({\n                      isAlert: true,\n                      alertText: \"Invalid credentials\",\n                      severity: \"error\",\n                      alertTitle: \"Error\",\n                    });\n                    setSubmitting(false);\n                  } else {\n                    setShowAlert({\n                      isAlert: true,\n                      alertText: \"Something went wrong\",\n                      severity: \"error\",\n                      alertTitle: \"Error\",\n                    });\n                    resetForm();\n                    setSubmitting(false);\n                  }\n                });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values,\n            }) => (\n              <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography color=\"textPrimary\" variant=\"h4\">\n                    SIGN IN TO YOUR ACCOUNT\n                  </Typography>\n                </Box>\n\n                <CustomInputTextField\n                  attribute=\"Email Address\"\n                  is_required={true}\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                  is_bold={true}\n                />\n                <CustomInputTextField\n                  attribute=\"Password\"\n                  is_required={true}\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                  is_bold={true}\n                />\n                {/* <TextField\n                        select\n                        error={Boolean(touched.taxYear && errors.taxYear)}\n                        helperText={touched.taxYear && errors.taxYear}\n                        fullWidth\n                        label=\"Tax Year\"\n                        margin=\"normal\"\n                        name=\"taxYear\" // Change \"taxyear\" to \"taxYear\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.taxYear}\n                        variant=\"outlined\"\n                      >\n                        <MenuItem value=\"currentYear\">Current Year</MenuItem>\n                        <MenuItem value=\"AllYears\">All Years</MenuItem>\n                      </TextField> */}\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default LoginView;\n","import React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Box, Button, Typography, CircularProgress } from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CustomAlert from \"../../components/CustomAlert\";\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport Api from \"../../components/Api\";\nimport Page from \"../../components/Page\";\nimport { setTaxYear } from \"../../redux/app/appSlice\";\n\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst useStyles = makeStyles((theme) => ({\n  submitProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  mainBlock: {\n    // width: \"50vw\",\n    // height: \"100vh\",\n    // display: \"flex\",\n    // flexDirection: \"row\",\n    minWidth: \"400px\",\n    margin: \"0\",\n    padding: \"0\",\n    [theme.breakpoints.down(\"sm\")]: {\n      //   flexDirection: \"column\",\n      minWidth: \"300px\",\n    },\n  },\n}));\n\nconst ForgotPasswordView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\n  const [forgotPasswordState, setForgetPasswordState] = useState({ email: \"\" });\n  const [isResetPasswordSubmitting, setIsRestPasswordSubmitting] =\n    useState(false);\n\n  const handleForgotPassword = () => {\n    const url = Api.forgotPassword;\n    setIsRestPasswordSubmitting(true);\n    const config = {\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n    };\n\n    axios\n      .post(url, forgotPasswordState, config)\n      .then((res) => {\n        setShowAlert({\n          isAlert: true,\n          alertText: res.data[\"message\"],\n          severity: \"success\",\n        });\n        setIsForgotPassword(false);\n        setIsRestPasswordSubmitting(false);\n        setForgetPasswordState({ email: \"\" });\n      })\n      .catch((error) => {\n        console.log(error.response);\n        setShowAlert({\n          isAlert: true,\n          alertText: error.response.data[\"message\"],\n          severity: \"error\",\n          alertTitle: \"Error\",\n        });\n        setIsForgotPassword(false);\n        setIsRestPasswordSubmitting(false);\n        setForgetPasswordState({ email: \"\" });\n      });\n  };\n\n  return (\n    <Box className={classes.mainBlock}>\n      {showAlert.isAlert ? (\n        <CustomAlert\n          open={showAlert.isAlert}\n          severity={showAlert.severity}\n          alertTitle={showAlert.alertTitle}\n          alertText={showAlert.alertText}\n          onClose={() =>\n            setShowAlert({\n              isAlert: false,\n              alertTitle: \"\",\n              alertText: \"\",\n              severity: \"\",\n            })\n          }\n        />\n      ) : null}\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        {/* <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              marginBottom={2}\n            >\n              \n            </Box> */}\n\n        <Box mb={3}>\n          <Typography color=\"textPrimary\" variant=\"h4\">\n            FORGOT PASSWORD?\n          </Typography>\n        </Box>\n\n        <CustomInputTextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          attribute=\"Email ID (User ID)\"\n          is_required={true}\n          type=\"email\"\n          fullWidth\n          autoComplete=\"off\"\n          value={forgotPasswordState.email}\n          onChange={(e) => setForgetPasswordState({ email: e.target.value })}\n          is_bold={true}\n        />\n\n        <Box my={2}>\n          <Button\n            onClick={handleForgotPassword}\n            color=\"primary\"\n            disabled={isResetPasswordSubmitting}\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Reset Password\n            {isResetPasswordSubmitting && (\n              <CircularProgress size={24} className={classes.submitProgress} />\n            )}\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ForgotPasswordView;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Avatar, Typography, Box, Grid, Container } from \"@mui/material\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport PaidIcon from \"@mui/icons-material/Paid\";\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\n\n// Your remaining components and code here\nimport Page from \"../../components/Page\";\nimport LoginView from \"./LoginView\";\nimport ForgotPasswordView from \"./ForgotPassword\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    border: \"1px solid #000000\",\n    padding: \"20px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#f7f7f7\",\n    // maxHeight: \"50vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"300px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      minHeight: \"280px\",\n      padding: \"20px 10px\",\n    },\n  },\n  logoAvatar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      //   marginLeft: \"200px\",\n      marginRight: \"auto\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"150px\",\n    },\n  },\n}));\n\nexport const AppBar = () => {\n  const customStyles = useStyles();\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#fafafa\",\n        padding: \"5px 20px\",\n      }}\n    >\n      <Box\n        sx={{\n          display: { xs: \"none\", sm: \"block\" },\n        }}\n      >\n        <Box sx={{ display: \"flex\" }}>\n          <Avatar\n            variant=\"square\"\n            src=\"/static/img/onecall-logo.png\"\n            sx={{\n              height: 50,\n              width: 140,\n              marginBottom: \"10px\",\n            }}\n            className={customStyles.logoAvatar}\n          />\n          <Typography\n            variant=\"h6\"\n            sx={{\n              fontSize: \"16px\",\n              marginTop: \"12px\",\n              marginLeft: \"20px\",\n            }}\n          >\n            WE MAKE TAX SIMPLE\n          </Typography>\n        </Box>\n        <Typography variant=\"body2\" sx={{ fontSize: \"16px\" }}>\n          <strong>Phone:</strong> (201) 277-3977\n        </Typography>\n        <Typography variant=\"body2\" sx={{ fontSize: \"16px\" }}>\n          <strong>E-mail:</strong> support@onecalltaxservices.com\n        </Typography>\n      </Box>\n      <Avatar\n        variant=\"square\"\n        src=\"/static/img/irs_image.jpg\"\n        sx={{\n          width: \"81px\",\n          height: \"83px\",\n          display: { xs: \"none\", sm: \"flex\" },\n        }}\n      />\n\n      <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\n        <Avatar\n          variant=\"square\"\n          src=\"/static/img/onecall-logo.png\"\n          sx={{\n            height: 50,\n            width: 140,\n            marginTop: \"12px\",\n            marginBottom: \"10px\",\n          }}\n          className={customStyles.logoAvatar}\n        />\n        <Typography\n          variant=\"h6\"\n          sx={{\n            fontSize: \"16px\",\n          }}\n        >\n          WE MAKE TAX SIMPLE\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst Authentication = () => {\n  const customStyles = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Page title=\"Login\">\n      <Box\n        sx={{\n          height: \"100vh\",\n          backgroundImage: \"url(/static/img/login_bg.png)\",\n          paddingTop: \"8%\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"100% 100%\",\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Box sx={{ backgroundColor: \"#fafafa\", padding: \"5px 5px 30px\" }}>\n            <AppBar />\n            <Box sx={{ padding: { xs: 0, sm: \"20px 30px\" } }}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <Box className={customStyles.box}>\n                    <LoginView />\n                  </Box>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Box className={customStyles.box}>\n                    <ForgotPasswordView />\n                  </Box>\n                </Grid>\n              </Grid>\n\n              <Box\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography variant=\"h5\">New Client? Please</Typography>\n\n                <Avatar\n                  onClick={() => navigate(\"/register\")}\n                  variant=\"square\"\n                  src=\"/static/img/register.png\"\n                  sx={{ height: 33, width: 99, marginLeft: \"10px\" }}\n                />\n              </Box>\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default Authentication;\n","import React, { useEffect, useState } from \"react\";\nimport { Link as RouterLink, useLocation, useNavigate } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  Container,\n  Link,\n  TextField,\n  Typography,\n  Avatar,\n  MenuItem,\n} from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport CustomInputTextField from \"../../components/CustomInputField\";\nimport { AppBar } from \".\";\nimport CustomAlert from \"../../components/CustomAlert\";\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport Api from \"../../components/Api\";\nimport Page from \"../../components/Page\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: \"100%\",\n  },\n  alert: {\n    position: \"absolute\",\n    right: 50,\n    top: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      right: 20,\n      maxWidth: 250,\n    },\n  },\n  logo: {\n    width: 100,\n  },\n  menuPaper: {\n    maxHeight: 200,\n  },\n  mainBlock: {\n    // width: \"100%\",\n    // height: \"100vh\",\n    // display: \"flex\",\n    // flexDirection: \"row\",\n    padding: \"10px 50px 20px\",\n    margin: \"20px\",\n    border: \"1px solid #000000\",\n    minWidth: \"500px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // flexDirection: \"column\",\n      minWidth: \"350px\",\n      padding: \"10px 0 10px 5px\",\n      margin: \"10px 0\",\n    },\n  },\n}));\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const { pathname, search } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  return (\n    <Page title=\"Register\">\n      <Box\n        sx={{\n          height: \"100vh\",\n          backgroundImage: \"url(/static/img/green_bg.jpg)\",\n          paddingTop: \"5%\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"100% 100%\",\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Box\n            sx={{\n              backgroundColor: \"#f7f7f7\",\n            }}\n          >\n            <AppBar />\n\n            <Box className={classes.mainBlock}>\n              {showAlert.isAlert ? (\n                <CustomAlert\n                  open={showAlert.isAlert}\n                  severity={showAlert.severity}\n                  alertTitle={showAlert.alertTitle}\n                  alertText={showAlert.alertText}\n                  onClose={() =>\n                    setShowAlert({\n                      isAlert: false,\n                      alertTitle: \"\",\n                      alertText: \"\",\n                      severity: \"\",\n                    })\n                  }\n                />\n              ) : null}\n\n              <Box sx={{ width: { xs: \"100%\", sm: \"60%\" } }}>\n                <Formik\n                  initialValues={{\n                    firstName: \"\",\n                    lastName: \"\",\n                    gender: \"\",\n                    email: queryParams.get(\"email\"),\n                    password: \"\",\n                    passwordConfirmation: \"\",\n                    referralId: queryParams.get(\"referralId\"),\n                    role: \"CLIENT\",\n                  }}\n                  validationSchema={Yup.object().shape({\n                    firstName: Yup.string()\n                      .max(255)\n                      .required(\"First Name is required\"),\n                    lastName: Yup.string()\n                      .max(255)\n                      .required(\"Last Name is required\"),\n                    gender: Yup.string().required(\"Gender is required\"),\n                    email: Yup.string()\n                      .email(\"Must be a valid email\")\n                      .max(255)\n                      .required(\"Email is required\"),\n\n                    password: Yup.string()\n                      .required(\"Please enter your password\")\n                      .matches(\n                        /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n                        \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\n                      ),\n                    passwordConfirmation: Yup.string().when(\"password\", {\n                      is: (val) => (val && val.length > 0 ? true : false),\n                      then: Yup.string().oneOf(\n                        [Yup.ref(\"password\")],\n                        \"Both password need to be the same\"\n                      ),\n                    }),\n                  })}\n                  onSubmit={(values, { setSubmitting, resetForm }) => {\n                    const url = Api.signup;\n\n                    const config = {\n                      headers: {\n                        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                      },\n                    };\n\n                    axios\n                      .post(url, values, config)\n                      .then((res) => {\n                        if (res.status === 200) {\n                          setShowAlert({\n                            isAlert: true,\n                            alertText: \"Your are successfully registered.\",\n                            severity: \"success\",\n                          });\n                          setSubmitting(false);\n                          resetForm();\n                        }\n                      })\n                      .catch((error) => {\n                        if (error.response) {\n                          const { data } = error.response;\n                          setShowAlert({\n                            isAlert: true,\n                            alertText: data?.[\"message\"],\n                            severity: \"error\",\n                            alertTitle: \"Error\",\n                          });\n                          // resetForm();\n                          setSubmitting(false);\n                        }\n                      });\n                  }}\n                >\n                  {({\n                    errors,\n                    handleBlur,\n                    handleChange,\n                    handleSubmit,\n                    isSubmitting,\n                    touched,\n                    values,\n                  }) => (\n                    <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"h4\"\n                        sx={{ marginBottom: \"12px\" }}\n                      >\n                        NEW USER REGISTRATION\n                      </Typography>\n\n                      <CustomInputTextField\n                        error={Boolean(touched.firstName && errors.firstName)}\n                        fullWidth\n                        helperText={touched.firstName && errors.firstName}\n                        is_required={true}\n                        attribute=\"First Name\"\n                        margin=\"normal\"\n                        name=\"firstName\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.firstName}\n                        variant=\"outlined\"\n                      />\n                      <CustomInputTextField\n                        error={Boolean(touched.lastName && errors.lastName)}\n                        fullWidth\n                        helperText={touched.lastName && errors.lastName}\n                        is_required={true}\n                        attribute=\"Last Name\"\n                        margin=\"normal\"\n                        name=\"lastName\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.lastName}\n                        variant=\"outlined\"\n                      />\n                      <CustomInputTextField\n                        error={Boolean(touched.gender && errors.gender)}\n                        select\n                        fullWidth\n                        helperText={touched.gender && errors.gender}\n                        is_required={true}\n                        attribute=\"Gender\"\n                        margin=\"normal\"\n                        name=\"gender\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.gender}\n                        variant=\"outlined\"\n                      >\n                        <MenuItem value=\"MALE\">Male</MenuItem>\n                        <MenuItem value=\"FEMALE\">Female</MenuItem>\n                        <MenuItem value=\"Other\">Other</MenuItem>\n                      </CustomInputTextField>\n                      <CustomInputTextField\n                        error={Boolean(touched.email && errors.email)}\n                        fullWidth\n                        helperText={touched.email && errors.email}\n                        is_required={true}\n                        attribute=\"Email Address\"\n                        margin=\"normal\"\n                        name=\"email\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"email\"\n                        value={values.email}\n                        variant=\"outlined\"\n                      />\n\n                      <CustomInputTextField\n                        error={Boolean(touched.password && errors.password)}\n                        fullWidth\n                        helperText={touched.password && errors.password}\n                        is_required={true}\n                        attribute=\"Password\"\n                        margin=\"normal\"\n                        name=\"password\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.password}\n                        variant=\"outlined\"\n                      />\n                      <CustomInputTextField\n                        error={Boolean(\n                          touched.passwordConfirmation &&\n                            errors.passwordConfirmation\n                        )}\n                        fullWidth\n                        helperText={\n                          touched.passwordConfirmation &&\n                          errors.passwordConfirmation\n                        }\n                        is_required={true}\n                        attribute=\"Confirm Password\"\n                        margin=\"normal\"\n                        name=\"passwordConfirmation\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.passwordConfirmation}\n                        variant=\"outlined\"\n                      />\n                      <CustomInputTextField\n                        error={Boolean(touched.referralId && errors.referralId)}\n                        fullWidth\n                        helperText={touched.referralId && errors.referralId}\n                        is_required={false}\n                        attribute=\"Referral Id (Optional)\"\n                        margin=\"normal\"\n                        name=\"referralId\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.referralId}\n                        variant=\"outlined\"\n                      />\n                      <Box my={2}>\n                        <Button\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          fullWidth\n                          size=\"large\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                        >\n                          Register\n                        </Button>\n                      </Box>\n                    </form>\n                  )}\n                </Formik>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                  sx={{ textAlign: \"center\" }}\n                >\n                  Have an account?{\" \"}\n                  <Button component=\"span\" onClick={() => navigate(\"/login\")}>\n                    Sign in\n                  </Button>\n                </Typography>\n              </Box>\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default RegisterView;\n","import React from \"react\";\nimport { Box, TextField, Grid, Typography } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst NO_WRAP_ATTRIBUTES = [\n  \"Middle Initial\",\n  \"Email Address\",\n  \"Password\",\n  \"Email ID (User ID)\",\n  \"Confirm Password\",\n  \"Referral ID (Optional)\",\n  \"Preferrable Time\",\n  \"Time Zone\",\n  \"Phone Number\",\n];\n\nconst CustomInputTextField = ({\n  attribute,\n  is_required,\n  is_bold,\n  attributeTextAlign,\n  attributeMarginTop,\n  ...others\n}) => {\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        maxHeight: \"60px\",\n      }}\n    >\n      <Grid container>\n        <Grid\n          item\n          xs={4}\n          sx={{ marginTop: attributeMarginTop ? attributeMarginTop : \"24px\" }}\n        >\n          {/* <Typography\n            sx={{\n              margin: \"20px 10px\",\n              fontSize: \"16px\",\n              lineHeight: \"24px\",\n              fontWeight: 400,\n            }}\n          >\n            {is_required ? (\n              <>\n                {attribute}\n                <span\n                  style={{\n                    color: \"red\", // Set color to red\n                    fontSize: \"16px\",\n                    marginLeft: \"3px\",\n                  }}\n                >\n                  {\" \"}\n                  *\n                </span>\n              </>\n            ) : (\n              attribute\n            )}\n          </Typography> */}\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              marginRight: { xs: 0, sm: attributeTextAlign ? \"5px\" : 0 },\n              justifyContent: {\n                xs: \"flex-start\",\n                sm: attributeTextAlign ? \"flex-end\" : \"flex-start\",\n              },\n            }}\n          >\n            <Typography\n              variant=\"body1\"\n              sx={{\n                ...(is_bold && { fontWeight: 600 }), // Apply fontWeight if is_bold is true\n                whiteSpace: NO_WRAP_ATTRIBUTES.includes(attribute)\n                  ? \"nowrap\"\n                  : \"pre-wrap\",\n              }}\n            >\n              {attribute}\n            </Typography>\n            {is_required && (\n              <Typography\n                sx={{\n                  color: \"red\",\n                  fontSize: \"0.875rem\",\n                  marginLeft: \"3px\",\n                }}\n              >\n                *\n              </Typography>\n            )}\n            &nbsp;:\n          </Box>\n        </Grid>\n        <Grid item xs={attribute === \"Income Amount\" ? 4 : 8}>\n          <TextField\n            {...others}\n            sx={{\n              \"& .MuiOutlinedInput-root\": {\n                \"& fieldset\": {\n                  borderRadius: \"2px\",\n                },\n              },\n              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n                border: \"0.1px solid #bdbdbd\",\n              },\n              \"& .MuiOutlinedInput-input\": {\n                padding: \"10px\",\n                backgroundColor: \"rgba(255,255,255,1)\",\n              },\n              width: \"90%\",\n            }}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nCustomInputTextField.defaultProps = {\n  is_bold: false,\n};\n\nCustomInputTextField.prototype = {\n  is_required: PropTypes.bool,\n  is_bold: PropTypes.bool,\n  attribute: PropTypes.string, //['success','warning', 'error']\n  attributeTextAlign: PropTypes.string, //['success','warning', 'error']\n  attributeMarginTop: PropTypes.string,\n};\n\nexport default CustomInputTextField;\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Snackbar } from \"@mui/material\";\nimport { Alert, AlertTitle } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(10),\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\n  },\n  alertContainer: {\n    minWidth: 350,\n  },\n}));\n\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\n  let vertical = \"top\",\n    horizontal = \"right\";\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={onClose}\n      className={classes.root}\n    >\n      <Alert\n        severity={severity}\n        onClose={onClose}\n        className={classes.alertContainer}\n      >\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\n        {alertText}!\n      </Alert>\n    </Snackbar>\n  );\n};\n\nCustomAlert.prototype = {\n  open: PropTypes.bool,\n  severity: PropTypes.string, //['success','warning', 'error']\n  alertText: PropTypes.string,\n  alertTitle: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default CustomAlert;\n"],"sourceRoot":""}