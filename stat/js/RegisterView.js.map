{"version":3,"sources":["webpack:///./src/views/Auth/RegisterView.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["useStyles","makeStyles","theme","_rightSide","root","backgroundColor","palette","background","dark","height","alert","_defineProperty","position","right","top","breakpoints","down","maxWidth","logo","width","menuPaper","maxHeight","mainBlock","display","flexDirection","margin","padding","leftSide","avatarLogo","left","title","fontFamily","fontWeight","fontSize","textAlign","lineHeight","color","marginTop","marginBottom","rightSide","justifyContent","alignItems","paddingRight","up","paddingLeft","RegisterView","classes","_useState2","_slicedToArray","useState","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","React","createElement","Page","className","Box","Avatar","variant","src","CustomAlert","open","onClose","PerfectScrollbar","Container","Formik","initialValues","firstName","lastName","gender","email","password","passwordConfirmation","referralId","validationSchema","Yup","shape","max","required","matches","when","is","val","length","then","oneOf","onSubmit","values","_ref","setSubmitting","resetForm","url","Api","signup","config","headers","Cookies","get","axios","post","res","status","error","response","data","_ref2","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","autoComplete","mb","Typography","TextField","Boolean","fullWidth","helperText","label","name","onBlur","onChange","value","select","MenuItem","type","my","Button","disabled","size","Link","component","RouterLink","to","forwardRef","ref","children","_ref$title","rest","_objectWithoutProperties","_excluded","_extends","Helmet","propTypes","PropTypes","node","isRequired","string","spacing","boxShadow","alertContainer","minWidth","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","prototype","bool","func"],"mappings":"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","file":"RegisterView.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  Avatar,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport CustomAlert from \"../../components/CustomAlert\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport Api from \"../../components/Api\";\r\nimport Page from \"../../components/Page\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n  },\r\n  alert: {\r\n    position: \"absolute\",\r\n    right: 50,\r\n    top: 50,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      right: 20,\r\n      maxWidth: 250,\r\n    },\r\n  },\r\n  logo: {\r\n    width: 100,\r\n  },\r\n  menuPaper: {\r\n    maxHeight: 200,\r\n  },\r\n  mainBlock: {\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  leftSide: {\r\n    width: \"70%\",\r\n    height: \"100vh\",\r\n    position: \"relative\",\r\n    backgroundColor: \"#2069D8\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      height: \"40vh\",\r\n      margin: \"0\",\r\n    },\r\n  },\r\n\r\n  avatarLogo: {\r\n    width: 200,\r\n    height: 72,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"33%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      left: \"20%\",\r\n      top: \"30%\",\r\n    },\r\n  },\r\n\r\n  title: {\r\n    fontFamily: \"Montserrat\",\r\n    fontWeight: \"700\",\r\n    fontSize: \"72px\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"87.7px\",\r\n    color: \"#FFFFFF\",\r\n    margin: \"auto\",\r\n    marginTop: \"50vh\",\r\n    marginBottom: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"10vh\",\r\n    },\r\n  },\r\n\r\n  rightSide: {\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#F5F5F5\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\", // Center vertically\r\n    alignItems: \"center\", // Center horizontally\r\n    margin: \"0\",\r\n    paddingRight: \"200px\",\r\n    padding: \"0\", // Reset padding\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingLeft: \"244px\", // Adjust padding for medium and larger screens\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\", // Set width to 100%\r\n      paddingLeft: \"0\", // Reset padding\r\n      justifyContent: \"center\", // Center vertically\r\n      alignItems: \"center\", // Center horizontally\r\n      paddingRight: \"0px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst RegisterView = () => {\r\n  const classes = useStyles();\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Register\">\r\n      <Box className={classes.mainBlock}>\r\n        <Box className={classes.leftSide}>\r\n          <Avatar\r\n            variant=\"square\"\r\n            src=\"/static/img/onecall-logo.png\"\r\n            className={classes.avatarLogo}\r\n          />\r\n        </Box>\r\n        <Box className={classes.rightSide}>\r\n          {showAlert.isAlert ? (\r\n            <CustomAlert\r\n              open={showAlert.isAlert}\r\n              severity={showAlert.severity}\r\n              alertTitle={showAlert.alertTitle}\r\n              alertText={showAlert.alertText}\r\n              onClose={() =>\r\n                setShowAlert({\r\n                  isAlert: false,\r\n                  alertTitle: \"\",\r\n                  alertText: \"\",\r\n                  severity: \"\",\r\n                })\r\n              }\r\n            />\r\n          ) : null}\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            height=\"100%\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <PerfectScrollbar>\r\n              <Container maxWidth=\"sm\">\r\n                <Box\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"center\"\r\n                  marginBottom={2}\r\n                >\r\n                  {/* We can place our logo here */}\r\n                </Box>\r\n                <Formik\r\n                  initialValues={{\r\n                    firstName: \"\",\r\n                    lastName: \"\",\r\n                    gender: \"\",\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    passwordConfirmation: \"\",\r\n                    referralId: \"\",\r\n                  }}\r\n                  validationSchema={Yup.object().shape({\r\n                    firstName: Yup.string()\r\n                      .max(255)\r\n                      .required(\"First Name is required\"),\r\n                    lastName: Yup.string()\r\n                      .max(255)\r\n                      .required(\"Last Name is required\"),\r\n                    gender: Yup.string().required(\"Gender is required\"),\r\n                    email: Yup.string()\r\n                      .email(\"Must be a valid email\")\r\n                      .max(255)\r\n                      .required(\"Email is required\"),\r\n\r\n                    password: Yup.string()\r\n                      .required(\"Please enter your password\")\r\n                      .matches(\r\n                        /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n                        \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\r\n                      ),\r\n                    passwordConfirmation: Yup.string().when(\"password\", {\r\n                      is: (val) => (val && val.length > 0 ? true : false),\r\n                      then: Yup.string().oneOf(\r\n                        [Yup.ref(\"password\")],\r\n                        \"Both password need to be the same\"\r\n                      ),\r\n                    }),\r\n                  })}\r\n                  onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                    const url = Api.signup;\r\n\r\n                    const config = {\r\n                      headers: {\r\n                        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\r\n                      },\r\n                    };\r\n\r\n                    axios\r\n                      .post(url, values, config)\r\n                      .then((res) => {\r\n                        if (res.status === 200) {\r\n                          setShowAlert({\r\n                            isAlert: true,\r\n                            alertText: \"Your are successfully registered.\",\r\n                            severity: \"success\",\r\n                          });\r\n                          setSubmitting(false);\r\n                          resetForm();\r\n                        }\r\n                      })\r\n                      .catch((error) => {\r\n                        if (error.response) {\r\n                          const { data } = error.response;\r\n                          setShowAlert({\r\n                            isAlert: true,\r\n                            alertText: data?.[\"message\"],\r\n                            severity: \"error\",\r\n                            alertTitle: \"Error\",\r\n                          });\r\n                          // resetForm();\r\n                          setSubmitting(false);\r\n                        }\r\n                      });\r\n                  }}\r\n                >\r\n                  {({\r\n                    errors,\r\n                    handleBlur,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    touched,\r\n                    values,\r\n                  }) => (\r\n                    <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                      <Box mb={3}>\r\n                        <Typography color=\"textPrimary\" variant=\"h2\">\r\n                          Register\r\n                        </Typography>\r\n                      </Box>\r\n                      <TextField\r\n                        error={Boolean(touched.firstName && errors.firstName)}\r\n                        fullWidth\r\n                        helperText={touched.firstName && errors.firstName}\r\n                        label=\"First Name\"\r\n                        margin=\"normal\"\r\n                        name=\"firstName\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.firstName}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <TextField\r\n                        error={Boolean(touched.lastName && errors.lastName)}\r\n                        fullWidth\r\n                        helperText={touched.lastName && errors.lastName}\r\n                        label=\"Last Name\"\r\n                        margin=\"normal\"\r\n                        name=\"lastName\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.lastName}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <TextField\r\n                        error={Boolean(touched.gender && errors.gender)}\r\n                        select\r\n                        fullWidth\r\n                        helperText={touched.gender && errors.gender}\r\n                        label=\"Gender\"\r\n                        margin=\"normal\"\r\n                        name=\"gender\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.gender}\r\n                        variant=\"outlined\"\r\n                      >\r\n                        <MenuItem value=\"MALE\">Male</MenuItem>\r\n                        <MenuItem value=\"FEMALE\">Female</MenuItem>\r\n                        <MenuItem value=\"Other\">Other</MenuItem>\r\n                      </TextField>\r\n                      <TextField\r\n                        error={Boolean(touched.email && errors.email)}\r\n                        fullWidth\r\n                        helperText={touched.email && errors.email}\r\n                        label=\"Email Address\"\r\n                        margin=\"normal\"\r\n                        name=\"email\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"email\"\r\n                        value={values.email}\r\n                        variant=\"outlined\"\r\n                      />\r\n\r\n                      <TextField\r\n                        error={Boolean(touched.password && errors.password)}\r\n                        fullWidth\r\n                        helperText={touched.password && errors.password}\r\n                        label=\"Password\"\r\n                        margin=\"normal\"\r\n                        name=\"password\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"password\"\r\n                        value={values.password}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <TextField\r\n                        error={Boolean(\r\n                          touched.passwordConfirmation &&\r\n                            errors.passwordConfirmation\r\n                        )}\r\n                        fullWidth\r\n                        helperText={\r\n                          touched.passwordConfirmation &&\r\n                          errors.passwordConfirmation\r\n                        }\r\n                        label=\"Confirm Password\"\r\n                        margin=\"normal\"\r\n                        name=\"passwordConfirmation\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"password\"\r\n                        value={values.passwordConfirmation}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <TextField\r\n                        error={Boolean(touched.referralId && errors.referralId)}\r\n                        fullWidth\r\n                        helperText={touched.referralId && errors.referralId}\r\n                        label=\"Referral Id (Optional)\"\r\n                        margin=\"normal\"\r\n                        name=\"referralId\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.referralId}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <Box my={2}>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          disabled={isSubmitting}\r\n                          fullWidth\r\n                          size=\"large\"\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                        >\r\n                          Sign up\r\n                        </Button>\r\n                      </Box>\r\n                      <Typography color=\"textSecondary\" variant=\"body1\">\r\n                        Have an account?{\" \"}\r\n                        <Link component={RouterLink} to=\"/login\" variant=\"h6\">\r\n                          Sign in\r\n                        </Link>\r\n                      </Typography>\r\n                    </form>\r\n                  )}\r\n                </Formik>\r\n              </Container>\r\n            </PerfectScrollbar>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import React, { forwardRef } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\r\n  return (\r\n    <div ref={ref} {...rest}>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Snackbar } from \"@mui/material\";\r\nimport { Alert, AlertTitle } from \"@mui/material\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(10),\r\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\r\n  },\r\n  alertContainer: {\r\n    minWidth: 350,\r\n  },\r\n}));\r\n\r\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\r\n  let vertical = \"top\",\r\n    horizontal = \"right\";\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical, horizontal }}\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={onClose}\r\n      className={classes.root}\r\n    >\r\n      <Alert\r\n        severity={severity}\r\n        onClose={onClose}\r\n        className={classes.alertContainer}\r\n      >\r\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\r\n        {alertText}!\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nCustomAlert.prototype = {\r\n  open: PropTypes.bool,\r\n  severity: PropTypes.string, //['success','warning', 'error']\r\n  alertText: PropTypes.string,\r\n  alertTitle: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default CustomAlert;\r\n"],"sourceRoot":""}