{"version":3,"sources":["webpack:///./src/views/Auth/RegisterView.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["useStyles","makeStyles","theme","_rightSide","root","backgroundColor","palette","background","dark","height","alert","_defineProperty","position","right","top","breakpoints","down","maxWidth","logo","width","menuPaper","maxHeight","mainBlock","display","flexDirection","margin","padding","leftSide","avatarLogo","left","title","fontFamily","fontWeight","fontSize","textAlign","lineHeight","color","marginTop","marginBottom","rightSide","justifyContent","alignItems","paddingRight","up","paddingLeft","RegisterView","classes","_useLocation","useLocation","search","pathname","queryParams","URLSearchParams","_useState2","_slicedToArray","useState","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","React","createElement","Page","className","Box","Avatar","variant","src","CustomAlert","open","onClose","PerfectScrollbar","Container","Formik","initialValues","firstName","lastName","gender","email","get","password","passwordConfirmation","referralId","validationSchema","Yup","shape","max","required","matches","when","is","val","length","then","oneOf","onSubmit","values","_ref","setSubmitting","resetForm","url","Api","signup","config","headers","Cookies","axios","post","res","status","error","response","data","_ref2","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","autoComplete","mb","Typography","TextField","Boolean","fullWidth","helperText","label","name","onBlur","onChange","value","select","MenuItem","type","my","Button","disabled","size","Link","component","RouterLink","to","forwardRef","ref","children","_ref$title","rest","_objectWithoutProperties","_excluded","_extends","Helmet","propTypes","PropTypes","node","isRequired","string","spacing","boxShadow","alertContainer","minWidth","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","prototype","bool","func"],"mappings":"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","file":"RegisterView.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  Container,\n  Link,\n  TextField,\n  Typography,\n  Avatar,\n  MenuItem,\n} from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\n\nimport CustomAlert from \"../../components/CustomAlert\";\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport Api from \"../../components/Api\";\nimport Page from \"../../components/Page\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: \"100%\",\n  },\n  alert: {\n    position: \"absolute\",\n    right: 50,\n    top: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      right: 20,\n      maxWidth: 250,\n    },\n  },\n  logo: {\n    width: 100,\n  },\n  menuPaper: {\n    maxHeight: 200,\n  },\n  mainBlock: {\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    margin: \"0\",\n    padding: \"0\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  leftSide: {\n    width: \"70%\",\n    height: \"100vh\",\n    position: \"relative\",\n    backgroundColor: \"#2069D8\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"40vh\",\n      margin: \"0\",\n    },\n  },\n\n  avatarLogo: {\n    width: 200,\n    height: 72,\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"33%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      left: \"20%\",\n      top: \"30%\",\n    },\n  },\n\n  title: {\n    fontFamily: \"Montserrat\",\n    fontWeight: \"700\",\n    fontSize: \"72px\",\n    textAlign: \"center\",\n    lineHeight: \"87.7px\",\n    color: \"#FFFFFF\",\n    margin: \"auto\",\n    marginTop: \"50vh\",\n    marginBottom: \"auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"10vh\",\n    },\n  },\n\n  rightSide: {\n    width: \"100%\",\n    height: \"100vh\",\n    backgroundColor: \"#F5F5F5\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\", // Center vertically\n    alignItems: \"center\", // Center horizontally\n    margin: \"0\",\n    paddingRight: \"200px\",\n    padding: \"0\", // Reset padding\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: \"244px\", // Adjust padding for medium and larger screens\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\", // Set width to 100%\n      paddingLeft: \"0\", // Reset padding\n      justifyContent: \"center\", // Center vertically\n      alignItems: \"center\", // Center horizontally\n      paddingRight: \"0px\",\n    },\n  },\n}));\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const { pathname, search } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  return (\n    <Page className={classes.root} title=\"Register\">\n      <Box className={classes.mainBlock}>\n        <Box className={classes.leftSide}>\n          <Avatar\n            variant=\"square\"\n            src=\"/static/img/onecall-logo.png\"\n            className={classes.avatarLogo}\n          />\n        </Box>\n        <Box className={classes.rightSide}>\n          {showAlert.isAlert ? (\n            <CustomAlert\n              open={showAlert.isAlert}\n              severity={showAlert.severity}\n              alertTitle={showAlert.alertTitle}\n              alertText={showAlert.alertText}\n              onClose={() =>\n                setShowAlert({\n                  isAlert: false,\n                  alertTitle: \"\",\n                  alertText: \"\",\n                  severity: \"\",\n                })\n              }\n            />\n          ) : null}\n\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            height=\"100%\"\n            justifyContent=\"center\"\n          >\n            <PerfectScrollbar>\n              <Container maxWidth=\"sm\">\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  marginBottom={2}\n                >\n                  {/* We can place our logo here */}\n                </Box>\n                <Formik\n                  initialValues={{\n                    firstName: \"\",\n                    lastName: \"\",\n                    gender: \"\",\n                    email: queryParams.get(\"email\"),\n                    password: \"\",\n                    passwordConfirmation: \"\",\n                    referralId: queryParams.get(\"referralId\"),\n                  }}\n                  validationSchema={Yup.object().shape({\n                    firstName: Yup.string()\n                      .max(255)\n                      .required(\"First Name is required\"),\n                    lastName: Yup.string()\n                      .max(255)\n                      .required(\"Last Name is required\"),\n                    gender: Yup.string().required(\"Gender is required\"),\n                    email: Yup.string()\n                      .email(\"Must be a valid email\")\n                      .max(255)\n                      .required(\"Email is required\"),\n\n                    password: Yup.string()\n                      .required(\"Please enter your password\")\n                      .matches(\n                        /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n                        \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\n                      ),\n                    passwordConfirmation: Yup.string().when(\"password\", {\n                      is: (val) => (val && val.length > 0 ? true : false),\n                      then: Yup.string().oneOf(\n                        [Yup.ref(\"password\")],\n                        \"Both password need to be the same\"\n                      ),\n                    }),\n                  })}\n                  onSubmit={(values, { setSubmitting, resetForm }) => {\n                    const url = Api.signup;\n\n                    const config = {\n                      headers: {\n                        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                      },\n                    };\n\n                    axios\n                      .post(url, values, config)\n                      .then((res) => {\n                        if (res.status === 200) {\n                          setShowAlert({\n                            isAlert: true,\n                            alertText: \"Your are successfully registered.\",\n                            severity: \"success\",\n                          });\n                          setSubmitting(false);\n                          resetForm();\n                        }\n                      })\n                      .catch((error) => {\n                        if (error.response) {\n                          const { data } = error.response;\n                          setShowAlert({\n                            isAlert: true,\n                            alertText: data?.[\"message\"],\n                            severity: \"error\",\n                            alertTitle: \"Error\",\n                          });\n                          // resetForm();\n                          setSubmitting(false);\n                        }\n                      });\n                  }}\n                >\n                  {({\n                    errors,\n                    handleBlur,\n                    handleChange,\n                    handleSubmit,\n                    isSubmitting,\n                    touched,\n                    values,\n                  }) => (\n                    <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                      <Box mb={3}>\n                        <Typography color=\"textPrimary\" variant=\"h2\">\n                          Register\n                        </Typography>\n                      </Box>\n                      <TextField\n                        error={Boolean(touched.firstName && errors.firstName)}\n                        fullWidth\n                        helperText={touched.firstName && errors.firstName}\n                        label=\"First Name\"\n                        margin=\"normal\"\n                        name=\"firstName\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.firstName}\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        error={Boolean(touched.lastName && errors.lastName)}\n                        fullWidth\n                        helperText={touched.lastName && errors.lastName}\n                        label=\"Last Name\"\n                        margin=\"normal\"\n                        name=\"lastName\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.lastName}\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        error={Boolean(touched.gender && errors.gender)}\n                        select\n                        fullWidth\n                        helperText={touched.gender && errors.gender}\n                        label=\"Gender\"\n                        margin=\"normal\"\n                        name=\"gender\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.gender}\n                        variant=\"outlined\"\n                      >\n                        <MenuItem value=\"MALE\">Male</MenuItem>\n                        <MenuItem value=\"FEMALE\">Female</MenuItem>\n                        <MenuItem value=\"Other\">Other</MenuItem>\n                      </TextField>\n                      <TextField\n                        error={Boolean(touched.email && errors.email)}\n                        fullWidth\n                        helperText={touched.email && errors.email}\n                        label=\"Email Address\"\n                        margin=\"normal\"\n                        name=\"email\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"email\"\n                        value={values.email}\n                        variant=\"outlined\"\n                      />\n\n                      <TextField\n                        error={Boolean(touched.password && errors.password)}\n                        fullWidth\n                        helperText={touched.password && errors.password}\n                        label=\"Password\"\n                        margin=\"normal\"\n                        name=\"password\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.password}\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        error={Boolean(\n                          touched.passwordConfirmation &&\n                            errors.passwordConfirmation\n                        )}\n                        fullWidth\n                        helperText={\n                          touched.passwordConfirmation &&\n                          errors.passwordConfirmation\n                        }\n                        label=\"Confirm Password\"\n                        margin=\"normal\"\n                        name=\"passwordConfirmation\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.passwordConfirmation}\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        error={Boolean(touched.referralId && errors.referralId)}\n                        fullWidth\n                        helperText={touched.referralId && errors.referralId}\n                        label=\"Referral Id (Optional)\"\n                        margin=\"normal\"\n                        name=\"referralId\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.referralId}\n                        variant=\"outlined\"\n                      />\n                      <Box my={2}>\n                        <Button\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          fullWidth\n                          size=\"large\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                        >\n                          Sign up\n                        </Button>\n                      </Box>\n                      <Typography color=\"textSecondary\" variant=\"body1\">\n                        Have an account?{\" \"}\n                        <Link component={RouterLink} to=\"/login\" variant=\"h6\">\n                          Sign in\n                        </Link>\n                      </Typography>\n                    </form>\n                  )}\n                </Formik>\n              </Container>\n            </PerfectScrollbar>\n          </Box>\n        </Box>\n      </Box>\n    </Page>\n  );\n};\n\nexport default RegisterView;\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Snackbar } from \"@mui/material\";\nimport { Alert, AlertTitle } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(10),\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\n  },\n  alertContainer: {\n    minWidth: 350,\n  },\n}));\n\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\n  let vertical = \"top\",\n    horizontal = \"right\";\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={onClose}\n      className={classes.root}\n    >\n      <Alert\n        severity={severity}\n        onClose={onClose}\n        className={classes.alertContainer}\n      >\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\n        {alertText}!\n      </Alert>\n    </Snackbar>\n  );\n};\n\nCustomAlert.prototype = {\n  open: PropTypes.bool,\n  severity: PropTypes.string, //['success','warning', 'error']\n  alertText: PropTypes.string,\n  alertTitle: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default CustomAlert;\n"],"sourceRoot":""}