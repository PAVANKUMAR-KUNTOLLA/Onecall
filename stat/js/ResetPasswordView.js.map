{"version":3,"sources":["webpack:///./src/views/Auth/ResetPasswordView.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["useStyles","makeStyles","theme","root","backgroundColor","palette","background","dark","height","paddingBottom","spacing","paddingTop","position","logo","_defineProperty","width","padding","breakpoints","down","submitProgress","top","left","marginTop","marginLeft","ResetPasswordView","_ref","match","classes","params","useNavigate","useParams","_useState2","_slicedToArray","useState","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","React","createElement","Page","className","title","CustomAlert","open","onClose","Box","display","flexDirection","justifyContent","Container","maxWidth","alignItems","marginBottom","Formik","initialValues","password","passwordConfirmation","validationSchema","Yup","shape","required","matches","when","is","val","length","then","oneOf","onSubmit","values","_ref2","setSubmitting","resetForm","url","Api","resetPassword","data","uidb64","token","config","headers","Cookies","get","axios","post","res","status","error","console","log","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","autoComplete","mb","Typography","color","variant","TextField","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","type","value","my","Button","disabled","size","CircularProgress","Link","component","RouterLink","to","forwardRef","ref","children","_ref$title","rest","_objectWithoutProperties","_excluded","_extends","Helmet","propTypes","PropTypes","node","isRequired","string","boxShadow","alertContainer","minWidth","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","prototype","bool","func"],"mappings":"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","file":"ResetPasswordView.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  Container,\n  Link,\n  TextField,\n  Typography,\n  CircularProgress,\n} from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport CustomAlert from \"../../components/CustomAlert\";\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport Api from \"../../components/Api\";\n\nimport Page from \"../../components/Page\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: \"100%\",\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    position: \"relative\",\n  },\n\n  logo: {\n    width: 150,\n    padding: 10,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: 110,\n    },\n  },\n  submitProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst ResetPasswordView = ({ match }) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const params = useParams();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  return (\n    <Page className={classes.root} title=\"Reset Password\">\n      {showAlert.isAlert ? (\n        <CustomAlert\n          open={showAlert.isAlert}\n          severity={showAlert.severity}\n          alertTitle={showAlert.alertTitle}\n          alertText={showAlert.alertText}\n          onClose={() =>\n            setShowAlert({\n              isAlert: false,\n              alertTitle: \"\",\n              alertText: \"\",\n              severity: \"\",\n            })\n          }\n        />\n      ) : null}\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            marginBottom={2}\n          >\n            {/* We can place our logo here */}\n          </Box>\n          <Formik\n            initialValues={{\n              password: \"\",\n              passwordConfirmation: \"\",\n            }}\n            validationSchema={Yup.object().shape({\n              password: Yup.string()\n                .required(\"Please enter your password\")\n                .matches(\n                  /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n                  \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\n                ),\n\n              passwordConfirmation: Yup.string().when(\"password\", {\n                is: (val) => (val && val.length > 0 ? true : false),\n                then: Yup.string().oneOf(\n                  [Yup.ref(\"password\")],\n                  \"Both password need to be the same\"\n                ),\n              }),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              const url = Api.resetPassword;\n\n              let data = {\n                password: values[\"password\"],\n                uidb64: params.uidb64,\n                token: params.token,\n              };\n\n              const config = {\n                headers: {\n                  \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                },\n              };\n\n              axios\n                .post(url, data, config)\n                .then((res) => {\n                  const { status, data } = res;\n                  if (status === 200) {\n                    setSubmitting(false);\n                    setShowAlert({\n                      isAlert: true,\n                      alertText: data?.[\"message\"],\n                      severity: \"success\",\n                    });\n                    resetForm();\n                  }\n                })\n                .catch((error) => {\n                  console.log(error);\n                  setSubmitting(false);\n                  setShowAlert({\n                    isAlert: true,\n                    alertText: \"Something went wrong\",\n                    severity: \"error\",\n                    alertTitle: \"Error\",\n                  });\n                  resetForm();\n                });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values,\n            }) => (\n              <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography color=\"textPrimary\" variant=\"h2\">\n                    Reset Password\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(\n                    touched.passwordConfirmation && errors.passwordConfirmation\n                  )}\n                  fullWidth\n                  helperText={\n                    touched.passwordConfirmation && errors.passwordConfirmation\n                  }\n                  label=\"Confirm Password\"\n                  margin=\"normal\"\n                  name=\"passwordConfirmation\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.passwordConfirmation}\n                  variant=\"outlined\"\n                />\n\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Reset Password\n                    {isSubmitting && (\n                      <CircularProgress\n                        size={24}\n                        className={classes.submitProgress}\n                      />\n                    )}\n                  </Button>\n                </Box>\n                <Typography color=\"textSecondary\" variant=\"body1\">\n                  Go back to{\" \"}\n                  <Link component={RouterLink} to=\"/login\" variant=\"h6\">\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default ResetPasswordView;\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Snackbar } from \"@mui/material\";\nimport { Alert, AlertTitle } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(10),\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\n  },\n  alertContainer: {\n    minWidth: 350,\n  },\n}));\n\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\n  let vertical = \"top\",\n    horizontal = \"right\";\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={onClose}\n      className={classes.root}\n    >\n      <Alert\n        severity={severity}\n        onClose={onClose}\n        className={classes.alertContainer}\n      >\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\n        {alertText}!\n      </Alert>\n    </Snackbar>\n  );\n};\n\nCustomAlert.prototype = {\n  open: PropTypes.bool,\n  severity: PropTypes.string, //['success','warning', 'error']\n  alertText: PropTypes.string,\n  alertTitle: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default CustomAlert;\n"],"sourceRoot":""}