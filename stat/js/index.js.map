{"version":3,"sources":["webpack:///./src/views/Refer/referFriend.js","webpack:///./src/views/Refer/referralDiscount.js","webpack:///./src/views/Refer/myReferrer.js","webpack:///./src/views/Refer/myReferrals.js","webpack:///./src/views/Refer/tabsDesktop.js","webpack:///./src/views/Refer/accordinMobile.js","webpack:///./src/views/Refer/index.js","webpack:///./src/utils/index.js","webpack:///./src/views/TaxFilling/Forms/filerDeatils.js","webpack:///./src/views/TaxFilling/Forms/incomeDetails.js","webpack:///./src/views/TaxFilling/Forms/bankDetails.js","webpack:///./src/views/TaxFilling/Forms/taxReturns.js","webpack:///./src/views/TaxFilling/Forms/TaxDocs.js","webpack:///./src/views/TaxFilling/TabsDesktop.js","webpack:///./src/views/TaxFilling/AdminTaxFilingpage/index.js","webpack:///./src/views/TaxFilling/Forms/pickAppointment.js","webpack:///./src/views/Home/payPalPayment.js","webpack:///./src/views/TaxFilling/Forms/confirmDetails.js","webpack:///./src/views/TaxFilling/Forms/refundQuote.js","webpack:///./src/views/TaxFilling/AccordionMobile.js","webpack:///./src/views/TaxFilling/ClientTaxFilingPage/index.js","webpack:///./src/views/TaxFilling/index.js","webpack:///./src/views/Auth/LoginView.js","webpack:///./src/views/Auth/ForgotPassword.js","webpack:///./src/views/Auth/index.js","webpack:///./src/components/CustomInputField.js","webpack:///./src/constants/index.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["initialValues","firstName","lastName","email","contact","validationSchema","Yup","shape","required","ReferFriend","_ref","_useState2","_slicedToArray","useState","setIsReferalDetailsLoading","React","createElement","Box","sx","marginTop","backgroundColor","padding","sm","xs","paddingTop","paddingBottom","bgcolor","transition","borderRadius","boxShadow","overflow","_defineProperty","Container","maxWidth","Typography","variant","Formik","onSubmit","values","_ref2","setSubmitting","resetForm","payload","_objectSpread","privateApiPOST","Api","makeReferal","then","response","status","data","console","log","error","_ref3","handleChange","errors","touched","handleBlur","Form","Grid","container","spacing","marginLeft","marginBottom","item","marginRight","CustomInputTextField","attribute","margin","name","onBlur","onChange","fullWidth","value","Boolean","helperText","justifyContent","alignItems","textAlign","Button","type","color","ReferralDiscount","List","ListItem","size","MyReferrer","setIsReferralDetailsLoading","_useState4","referralEmail","referralID","referralDetails","setReferralDetails","useEffect","sessionStorage","getItem","privateApiGET","profile","disabled","customTextStyles","makeStyles","theme","tableHeader","fontSize","fontWeight","lineHeight","breakpoints","down","display","tableData","headerText","confirmButton","mobileViewTableCellValue","mobileView","cursor","border","up","mobileViewTableCellHeader","MyReferrals","customStyles","joined","not_joined","referalDetails","setReferalDetails","TableContainer","Table","borderCollapse","TableHead","TableRow","TableCell","className","TableBody","length","map","row","id","key","first_name","last_name","phone_no","flexDirection","contact_no","accordion","accordionHeader","opacity","paddingLeft","maxHeight","accordionHeaderText","accordionColumn","accordionColumnHeaderText","accordionColumnText","footerText","collpaseIcon","TabsDesktop","handleFetchData","customTextClasses","setValue","CustomTabPanel","props","children","index","other","_objectWithoutProperties","_excluded","_extends","role","hidden","concat","a11yProps","propTypes","PropTypes","node","number","isRequired","width","borderBottom","borderColor","Tabs","event","newValue","Tab","label","tabHeaderText","BasicAccordion","expanded","setExpanded","panel","isExpanded","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","ReferPage","Page","title","capitalizeString","str","charAt","toUpperCase","slice","toLowerCase","buttons","CustomLabel","style","FilerDetails","open","personalDetails","contactDetails","spouseDetails","incomeDetails","providedLivingSupport","handleDownloadTemplate","isFilerDetailsLoading","setIsFilerDetailsLoading","isDependantDetailsLoading","setIsDependantDetailsLoading","_useState6","dependantDetails","setDependantDetails","transform","input","includes","replace","_useState8","middleName","ssn","dateOfBirth","gender","occupation","residentialStatus","street","apartment","city","state","zipCode","country","primaryCountryCode","primaryPhoneNumber","secondaryCountryCode","secondaryPhoneNumber","contactEmail","taxFiledLastYear","taxPayerStatus","spouseFirstName","spouseMiddleInitial","spouseLastName","spouseSsnOrItin","spouseApplyForItin","spouseDateOfBirth","spouseGender","spouseOccupation","spouseResidentialStatus","spouseEmail","isNewDependant","additionalFirstName","additionalMiddleInitial","additionalLastName","additionalSsnOrItin","additionalApplyForItin","additionalDateOfBirth","additionalGender","additionalOccupation","additionalVisaType","additionalEmail","additionalStayCount","additionalRelationship","formData","stateOptions","statesNames","countryCodes","countryCode","handleDeleteDependant","dependantId","taxFilingId","deleteDependant","handleFetchDependantDetails","minHeight","CircularProgress","max","matches","Date","when","is","otherwise","personalContactDetails","_ref4","handleSubmit","isSubmitting","setFieldValue","autoComplete","leftSide","flexWrap","attributeTextAlign","is_required","InputLabelProps","shrink","InputProps","inputProps","placeholder","select","MenuItem","rightSide","option","TextField","lg","ButtonBase","onClick","textDecoration","disableTouchRipple","wordSpacing","startIcon","RemoveIcon","AddIcon","each","DeleteIcon","ml","IncomeDetails","isIncomeDetailsLoading","setIsIncomeDetailsLoading","interestIncome","dividendIncome","soldStocks","soldCrypto","foreignIncome","retirementAccounts","stateTaxRefund","foreignBankAccount","foreignAssets","rentalIncome","income1099","incomeDescription","incomeAmount","addAdditionalInformation","FormControl","component","FormLabel","RadioGroup","FormControlLabel","control","Radio","Tooltip","placement","bankingType","bankName","accountHolderName","ownership","routingNumber","confirmRoutingNumber","oneOf","accountNumber","confirmAccountNumber","accountType","confirmAccountType","BankDetails","isBankDetailsLoading","setIsBankDetailsLoading","bankDetails","align","TaxReturns","params","useParams","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","useSelector","app","isLoading","setIsLoading","isImport","isImpoFormSubmitting","selectedFile","remarks","isMyTaxDocsLoading","myTaxDocs","setState","handleDownloadFile","file","file_name","downloadTaxDocsFile","responseType","res","url","window","URL","createObjectURL","Blob","anchor","document","href","setAttribute","body","appendChild","click","err","handleDeleteFile","file_id","deleteTaxDocsFile","handleFetchMyTaxDocs","_data","prev","uploadTaxDocs","CustomAlert","onClose","e","target","files","accept","visibility","htmlFor","CloudUploadIcon","fontStyle","FormData","append","token","axios","post","headers","Authorization","upload_time","GetApp","alertCard","alertIcon","root","link","info","UploadTaxDocs","Card","CardContent","Link","Paper","elevation","valign","file_size","parseInt","action","FilerDeatils","tabButton","AdminTaxFillingPage","setData","isLoadingSpin","setIsLoadingSpin","handleFetchTaxFilingDetails","taxFiling","height","position","zIndex","left","top","PerfectScrollbar","year","templateDownload","PickAppointment","isPickAppointmentDetailsLoading","setIsPickAppointmentDetailsLoading","date","time","timezone","appointmentData","setAppointmentData","appointmentDetails","setAppointmentDetails","handleCancelAppointment","appointmentId","deleteAppointment","handleFetchAppointmentDetails","_error$response$data","message","showMsg","timeOptions","hours","minutes","hourStr","String","padStart","minuteStr","timeOption","push","generateTimeOptions","attributeMarginTop","readOnly","preventDefault","bookAppointment","_error$response$data2","handleFetchAppointmentChange","start_time","end_time","Chip","IconButton","onCursor","Avatar","alt","src","PayPalPayment","fontFamily","p","mt","useStyles","ConfirmDetails","handlePickAppointment","mb","RefundQuote","ClientTaxFillingPage","isActiveTab","setIsActiveTab","handleActiveTabChange","tabName","minWidth","HomePage","_rightSide","submitProgress","mainBlock","avatarLogo","paddingRight","LoginView","classes","navigate","useNavigate","dispatch","useDispatch","Fragment","password","login","config","Cookies","get","_res$data","setItem","setTaxYear","taxYear","my","ForgotPasswordView","setIsForgotPassword","forgotPasswordState","setForgetPasswordState","isResetPasswordSubmitting","setIsRestPasswordSubmitting","autoFocus","forgotPassword","_logoAvatar","box","logoAvatar","AppBar","Authentication","NO_WRAP_ATTRIBUTES","others","whiteSpace","prototype","bool","string","refundTypes","forwardRef","ref","_ref$title","rest","Helmet","alertContainer","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { useState } from \"react\";\nimport Page from \"../../components/Page\";\nimport { Grid, Box, Typography, Button, Container } from \"@mui/material\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Api from \"../../components/Api\";\nimport { privateApiPOST } from \"../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  contact: \"\",\n};\n\nconst validationSchema = Yup.object().shape({\n  firstName: Yup.string().required(\"First Name is required\"),\n  lastName: Yup.string().required(\"Last Name is required\"),\n  email: Yup.string()\n    .email(\"Invalid email format\")\n    .required(\"Email is required\"),\n  contact: Yup.string().required(\"Contact number is required\"),\n});\n\nconst ReferFriend = () => {\n  const [isReferalDetailsLoading, setIsReferalDetailsLoading] = useState(false);\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h4\">Referal Details:</Typography>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            setIsReferalDetailsLoading(true);\n            setSubmitting(true);\n            let payload = { ...values };\n            privateApiPOST(Api.makeReferal, payload)\n              .then((response) => {\n                const { status, data } = response;\n                if (status === 200) {\n                  console.log(\"data\", data);\n                  setIsReferalDetailsLoading(false);\n                  resetForm();\n                  setSubmitting(false);\n                }\n              })\n              .catch((error) => {\n                console.log(\"Error\", error);\n                setIsReferalDetailsLoading(false);\n                setSubmitting(false);\n              });\n          }}\n        >\n          {({ values, handleChange, errors, touched, handleBlur }) => (\n            <Form>\n              <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\n                <Grid\n                  container\n                  sx={{\n                    marginBottom: \"30px\",\n                    marginTop: \"30px\",\n                  }}\n                >\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                    <CustomInputTextField\n                      attribute=\"First Name\"\n                      margin=\"normal\"\n                      name=\"firstName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.firstName}\n                      variant=\"outlined\"\n                      error={Boolean(touched.firstName && errors.firstName)}\n                      helperText={touched.firstName && errors.firstName}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                    <CustomInputTextField\n                      attribute=\"Last Name\"\n                      margin=\"normal\"\n                      name=\"lastName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.lastName}\n                      variant=\"outlined\"\n                      error={Boolean(touched.lastName && errors.lastName)}\n                      helperText={touched.lastName && errors.lastName}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                    <CustomInputTextField\n                      attribute=\"Email\"\n                      margin=\"normal\"\n                      name=\"email\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.email}\n                      variant=\"outlined\"\n                      error={Boolean(touched.email && errors.email)}\n                      helperText={touched.email && errors.email}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                    <CustomInputTextField\n                      attribute=\"Contact\"\n                      margin=\"normal\"\n                      name=\"contact\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.contact}\n                      variant=\"outlined\"\n                      error={Boolean(touched.contact && errors.contact)}\n                      helperText={touched.contact && errors.contact}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid\n                  container\n                  justifyContent=\"center\" // Center horizontally\n                  alignItems=\"center\" // Center vertically\n                >\n                  <Box\n                    sx={{\n                      textAlign: \"center\",\n                      paddingBottom: { xs: \"20px\" },\n                    }}\n                  >\n                    <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      sx={{\n                        marginRight: { xs: \"0px\", sm: \"130px\" },\n                      }}\n                    >\n                      Submit\n                    </Button>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n    </Box>\n  );\n};\n\nexport default ReferFriend;\n","import { Typography, Box, Container, List, ListItem } from \"@mui/material\";\nimport React from \"react\";\n\nconst ReferralDiscount = () => {\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Box>\n          <Typography variant=\"h3\">Referral Discount Details :</Typography>\n          <Typography sx={{ marginTop: \"10px\" }}>\n            1 - 4 New Clients Referred : $10 for each client who completes their\n            tax filing with us\n          </Typography>\n          <Typography sx={{ marginTop: \"10px\" }}>\n            5 - 9 New Clients Referred : $20 for each client who completes their\n            tax filing with us\n          </Typography>\n          <Typography sx={{ marginTop: \"10px\" }}>\n            10 or more New Clients Referred : $30 for each client who completes\n            their tax filing with us\n          </Typography>\n          <List>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> All Referral Discounts will be applied only\n                if newly referred clients complete their tax filing with us\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> Referral discount will be used towards your\n                tax filing fee\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> If you have more referral discount than your\n                tax filing fee, it will be carried forward and used towards your\n                future service fee with Taxcooler Inc\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> Referral discount cannot be transferred from\n                one client to another\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> You can earn as much referral discount as\n                possible by referring more new clients to us every year\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> New Client means who did not file with\n                TaxCooler Inc in any of the previous years\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Box variant=\"body1\">\n                <font color=\"green\" size=\"2\">\n                  Example:\n                  <ul>\n                    <li>You referred 5 new clients in this year</li>\n                    <li>\n                      3 of them filed with us and 2 of them did not complete\n                      their tax return with us. You get referral discount for 3\n                      new clients who completed their filing with us\n                    </li>\n                    <li>\n                      Referral discount would be $10 per client. So you have\n                      earned $30 referral discount\n                    </li>\n                    <li>\n                      This discount will be applied on your filing fee when you\n                      are filing your tax return. If you filed your tax return\n                      already, the discount will be carried forward to your\n                      future filing fee (or any other service fee with Taxcooler\n                      Inc)\n                    </li>\n                  </ul>\n                </font>\n              </Box>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> All amounts indicated here are in legal US\n                Dollars\n              </Typography>\n            </ListItem>\n          </List>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default ReferralDiscount;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Container, Typography, Box, Grid, TextField } from \"@mui/material\";\nimport Api from \"../../components/Api\";\nimport { privateApiGET } from \"../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst MyReferrer = () => {\n  const [isReferralDetailsLoading, setIsReferralDetailsLoading] =\n    useState(false);\n  const [referralDetails, setReferralDetails] = useState({\n    referralEmail: \"\",\n    referralID: \"\",\n  });\n\n  const handleFetchProfileDetails = () => {\n    setIsReferralDetailsLoading(true);\n    privateApiGET(Api.profile)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setReferralDetails({\n            ...referralDetails,\n            referralEmail: data?.data[\"referred_by\"],\n            referralID: data?.data[\"referral_id\"],\n          });\n          setIsReferralDetailsLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsReferralDetailsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\")) {\n      handleFetchProfileDetails();\n    }\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h4\">Referal Details:</Typography>\n\n        <Grid container>\n          <Grid item sm={5} xs={12} sx={{ marginRight: \"20px\" }}>\n            <CustomInputTextField\n              fullWidth\n              attribute=\"Referral ID\"\n              margin=\"normal\"\n              name=\"referralID\" // Updated name\n              disabled\n              value={referralDetails.referralID} // Updated value\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item sm={5} xs={12} sx={{ marginRight: \"20px\" }}>\n            <CustomInputTextField\n              fullWidth\n              attribute=\"Referral Email\"\n              margin=\"normal\"\n              name=\"referralEmail\" // Updated name\n              value={referralDetails.referralEmail} // Updated value\n              variant=\"outlined\"\n              disabled\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default MyReferrer;\n","import React, { useState, useEffect, Component } from \"react\";\nimport {\n  Grid,\n  Box,\n  Link,\n  Avatar,\n  Typography,\n  Button,\n  Container,\n  Card,\n  CardContent,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  TextField,\n  Radio,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n  FormControl,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport Api from \"../../components/Api\";\nimport { privateApiGET } from \"../../components/PrivateRoute\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: \"700\",\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  headerText: {\n    fontSize: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"32px\",\n    marginBottom: \"16px\",\n    color: \"#2069DB\",\n  },\n  confirmButton: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    lineHeight: \"19px\",\n    color: \"#FFFFFF\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n}));\n\nconst MyReferrals = () => {\n  const customStyles = customTextStyles();\n  const [isReferalDetailsLoading, setIsReferalDetailsLoading] = useState(false);\n  const [referalDetails, setReferalDetails] = useState({\n    joined: [],\n    not_joined: [],\n  });\n\n  const handleFetchReferalDetails = () => {\n    privateApiGET(Api.referalDetails)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setReferalDetails({\n            joined: data?.data[\"joined\"],\n            not_joined: data?.data[\"not_joined\"],\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n      });\n  };\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\")) {\n      handleFetchReferalDetails();\n    }\n  }, []);\n  console.log(referalDetails);\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Box>\n          <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\n            Registerd Till Now:\n          </Typography>\n          <TableContainer sx={{ marginTop: \"32px\" }}>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n              aria-label=\"Place Order Series Table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={customStyles.tableHeader}>\n                    First Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Last Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Email Id\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Phone Number\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {referalDetails[\"joined\"].length > 0 &&\n                  referalDetails[\"joined\"].map((row, id) => (\n                    <TableRow key={id}>\n                      <TableCell className={customStyles.tableData}>\n                        {row.first_name}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.last_name}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.email}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.phone_no}\n                      </TableCell>\n                      <TableCell className={customStyles.mobileView}>\n                        <Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                First Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.first_name}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Last Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.last_name}\n                              </Typography>\n                            </Box>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Email Id\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.email}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Phone Number\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.phone_no}\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n        <Box sx={{ marginTop: { xs: \"16px\", sm: \"24px\" } }}>\n          <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\n            Referred Till Now:\n          </Typography>\n          <TableContainer sx={{ marginTop: \"32px\" }}>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n              aria-label=\"Place Order Series Table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={customStyles.tableHeader}>\n                    First Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Last Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Email Id\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Phone Number\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {referalDetails[\"not_joined\"].length > 0 &&\n                  referalDetails[\"not_joined\"].map((row, id) => (\n                    <TableRow key={id}>\n                      <TableCell className={customStyles.tableData}>\n                        {row.first_name}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.last_name}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.email}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.contact_no}\n                      </TableCell>\n                      <TableCell className={customStyles.mobileView}>\n                        <Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\", marginRight: \"10px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                First Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.first_name}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\", marginRight: \"10px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Last Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.last_name}\n                              </Typography>\n                            </Box>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Email Id\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.email}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Phone Number\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.contact_no}\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default MyReferrals;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport config from \"../../config\";\n// Material UI\nimport { Grid, Box, Avatar, Typography, Tabs, Tab } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport PropTypes from \"prop-types\";\nimport PercentIcon from \"@mui/icons-material/Percent\";\nimport Groups from \"@mui/icons-material/Groups\";\nimport ListAlt from \"@mui/icons-material/ListAlt\";\nimport AspectRatioOutlined from \"@mui/icons-material/AspectRatioOutlined\";\nimport UnfoldLess from \"@mui/icons-material/UnfoldLess\";\nimport UnfoldMore from \"@mui/icons-material/UnfoldMore\";\nimport DiscountOutlined from \"@mui/icons-material/DiscountOutlined\";\nimport MonetizationOnOutlined from \"@mui/icons-material/MonetizationOnOutlined\";\nimport InsertPageBreakOutlined from \"@mui/icons-material/InsertPageBreakOutlined\";\nimport DescriptionOutlined from \"@mui/icons-material/DescriptionOutlined\";\nimport StackedBarChartOutlined from \"@mui/icons-material/StackedBarChartOutlined\";\nimport PriceCheckOutlined from \"@mui/icons-material/PriceCheckOutlined\";\nimport SavingsOutlinedIcon from \"@mui/icons-material/SavingsOutlined\";\nimport AccountBalanceWalletOutlinedIcon from \"@mui/icons-material/AccountBalanceWalletOutlined\";\nimport ReferFriend from \"./referFriend\";\nimport ReferralDiscount from \"./referralDiscount\";\nimport MyReferrer from \"./myReferrer\";\nimport MyReferrals from \"./myReferrals\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst TabsDesktop = ({ data, handleFetchData }) => {\n  const customTextClasses = customTextStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function CustomTabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box>{children}</Box>}\n      </div>\n    );\n  }\n\n  CustomTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Box\n        sx={{\n          width: \"100%\",\n          marginBottom: \"64px\",\n        }}\n      >\n        <Box\n          sx={{\n            borderBottom: 1,\n            borderColor: \"divider\",\n            margin: \"8px 32px 32px 10px\",\n          }}\n        >\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"basic tabs example\"\n          >\n            <Tab\n              label=\"Referral Discount\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(0)}\n            />\n            <Tab\n              label=\"My Referrals\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(1)}\n            />\n            <Tab\n              label=\"Refer a Friend\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(2)}\n            />\n            <Tab\n              label=\"My Referrer\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(2)}\n            />\n          </Tabs>\n        </Box>\n\n        <CustomTabPanel value={value} index={0}>\n          <ReferralDiscount />\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={1}>\n          <MyReferrals />\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={2}>\n          <Grid container>\n            <Grid item xs={12}>\n              <Box>\n                <ReferFriend />\n              </Box>\n            </Grid>\n          </Grid>\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={3}>\n          <MyReferrer />\n        </CustomTabPanel>\n      </Box>\n    </Grid>\n  );\n};\nexport default TabsDesktop;\n","import React, { useState } from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport PercentIcon from \"@mui/icons-material/Percent\";\nimport Groups from \"@mui/icons-material/Groups\";\nimport ListAlt from \"@mui/icons-material/ListAlt\";\nimport AspectRatioOutlined from \"@mui/icons-material/AspectRatioOutlined\";\nimport UnfoldLess from \"@mui/icons-material/UnfoldLess\";\nimport UnfoldMore from \"@mui/icons-material/UnfoldMore\";\nimport DiscountOutlined from \"@mui/icons-material/DiscountOutlined\";\nimport MonetizationOnOutlined from \"@mui/icons-material/MonetizationOnOutlined\";\nimport InsertPageBreakOutlined from \"@mui/icons-material/InsertPageBreakOutlined\";\nimport DescriptionOutlined from \"@mui/icons-material/DescriptionOutlined\";\nimport StackedBarChartOutlined from \"@mui/icons-material/StackedBarChartOutlined\";\nimport PriceCheckOutlined from \"@mui/icons-material/PriceCheckOutlined\";\nimport { Grid, Box, Avatar, Typography } from \"@mui/material\";\nimport SavingsOutlinedIcon from \"@mui/icons-material/SavingsOutlined\";\nimport AccountBalanceWalletOutlinedIcon from \"@mui/icons-material/AccountBalanceWalletOutlined\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport config from \"../../config\";\nimport { makeStyles } from \"@mui/styles\";\nimport ReferFriend from \"./referFriend\";\nimport ReferralDiscount from \"./referralDiscount\";\nimport MyReferrer from \"./myReferrer\";\nimport MyReferrals from \"./myReferrals\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst BasicAccordion = ({ data, handleFetchData }) => {\n  const customTextClasses = customTextStyles();\n  const [expanded, setExpanded] = useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <Box>\n      <Accordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel1\" ? \"600\" : \"400\" }}\n          >\n            Referral Discount\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails\n          sx={{\n            bgcolor: \"#FAFAFA\",\n          }}\n        >\n          <ReferralDiscount />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel2\"}\n        onChange={handleChange(\"panel2\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel2\" ? \"600\" : \"400\" }}\n          >\n            My Referrals\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <MyReferrals />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel3\"}\n        onChange={handleChange(\"panel3\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3a-content\"\n          id=\"panel3a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\n          >\n            Refer a Friend\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <ReferFriend />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel4\"}\n        onChange={handleChange(\"panel4\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel4a-content\"\n          id=\"panel4a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\n          >\n            My Referral\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <MyReferrer />\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n};\n\nexport default BasicAccordion;\n","import React, { useEffect, useState } from \"react\";\nimport Page from \"../../components/Page\";\nimport { Grid, Container, Box, CircularProgress } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\n\nimport TabsDesktop from \"./tabsDesktop\";\nimport BasicAccordion from \"./accordinMobile\";\n\nimport Api from \"../../components/Api\";\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\nimport DrawerAppBar from \"../../Layout/MainLayout/appBarMaterialUI\";\n\nconst ReferPage = () => {\n  return (\n    <Page title={\"Refer\"}>\n      <Container maxWidth=\"lg\">\n        <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n          <TabsDesktop />\n        </Box>\n        <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\n          <BasicAccordion />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ReferPage;\n","// Convert number to thousand separated string\n// eg: 100000 -> 100,000\nexport function thousands_separators(num) {\n  if (num) {\n    var num_parts = num.toString().split(\".\");\n    num_parts[0] = num_parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return num_parts.join(\".\");\n  }\n  return num;\n}\n\nexport function formattedPrice(price) {\n  return price.toLocaleString(\"en-IN\", {\n    style: \"currency\",\n    currency: \"INR\",\n  });\n}\n\nexport const capitalizeString = (str) => {\n  if (str) return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n  else return \"\";\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  MenuItem,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  CircularProgress,\n  ButtonBase,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport { makeStyles } from \"@mui/styles\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { statesNames, countryCode } from \"../../../constants\";\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: 600,\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: 400,\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    marginBottom: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nexport function CustomLabel({ label, required }) {\n  return (\n    <label style={{ display: \"flex\", alignItems: \"center\" }}>\n      {label}\n      {required && (\n        <span\n          style={{\n            color: \"red\",\n            fontSize: \"16px\",\n            marginLeft: \"3px\",\n          }}\n        >\n          *\n        </span>\n      )}\n    </label>\n  );\n}\n\nconst FilerDetails = ({\n  open,\n  id,\n  personalDetails,\n  contactDetails,\n  spouseDetails,\n  incomeDetails,\n  providedLivingSupport,\n  handleFetchData,\n  handleDownloadTemplate,\n}) => {\n  const customStyles = customTextStyles();\n  const [isFilerDetailsLoading, setIsFilerDetailsLoading] = useState(false);\n  const [isDependantDetailsLoading, setIsDependantDetailsLoading] =\n    useState(false);\n  const [dependantDetails, setDependantDetails] = useState([]);\n\n  const transform = (input) => {\n    if (input === undefined || input === null) {\n      return \"\";\n    }\n\n    if (input.includes(\"-\")) {\n      return input;\n    }\n\n    const rawSsn = input.replace(/-/g, \"\"); // Remove hyphens\n    const formattedSsn = rawSsn\n      .replace(/\\D/g, \"\") // Remove non-digits\n      .replace(/(\\d{3})(\\d{3})(\\d{3})/, \"$1-$2-$3\"); // Format as 123-45-6789\n    return formattedSsn;\n  };\n\n  const [formData, setFormData] = useState({\n    // Personal Details\n\n    firstName: personalDetails[\"firstName\"],\n    middleName: personalDetails[\"middleName\"],\n    lastName: personalDetails[\"lastName\"],\n    ssn: personalDetails[\"ssn\"],\n    dateOfBirth: personalDetails[\"dateOfBirth\"],\n    gender: personalDetails[\"gender\"],\n    occupation: personalDetails[\"occupation\"],\n    residentialStatus: personalDetails[\"residentialStatus\"],\n    email: personalDetails[\"email\"],\n\n    // Contact Details\n    street: contactDetails[\"street\"],\n    apartment: contactDetails[\"apartment\"],\n    city: contactDetails[\"city\"],\n    state: contactDetails[\"state\"],\n    zipCode: contactDetails[\"zipCode\"],\n    country: contactDetails[\"country\"],\n    primaryCountryCode: contactDetails[\"primaryCountryCode\"],\n    primaryPhoneNumber: contactDetails[\"primaryPhoneNumber\"],\n    secondaryCountryCode: contactDetails[\"secondaryCountryCode\"],\n    secondaryPhoneNumber: contactDetails[\"secondaryPhoneNumber\"],\n    contactEmail: contactDetails[\"contactEmail\"],\n\n    taxFiledLastYear: incomeDetails[\"taxFiledLastYear\"], // Set an initial value for taxFiledLastYear\n\n    // additional Spouse Details (Initially hidden)\n    taxPayerStatus: personalDetails[\"taxPayerStatus\"], // Default to \"No\" (Single)\n    spouseFirstName: spouseDetails[\"spouseFirstName\"],\n    spouseMiddleInitial: spouseDetails[\"spouseMiddleInitial\"],\n    spouseLastName: spouseDetails[\"spouseLastName\"],\n    spouseSsnOrItin: spouseDetails[\"spouseSsnOrItin\"],\n    spouseApplyForItin: spouseDetails[\"spouseApplyForItin\"], // Default to \"No\"\n    spouseDateOfBirth: spouseDetails[\"spouseDateOfBirth\"],\n    spouseGender: spouseDetails[\"spouseGender\"],\n    spouseOccupation: spouseDetails[\"spouseOccupation\"],\n    spouseResidentialStatus: spouseDetails[\"spouseResidentialStatus\"],\n    spouseEmail: spouseDetails[\"spouseEmail\"],\n\n    providedLivingSupport: providedLivingSupport,\n    isNewDependant: false,\n    additionalFirstName: \"\",\n    additionalMiddleInitial: \"\",\n    additionalLastName: \"\",\n    additionalSsnOrItin: \"\",\n    additionalApplyForItin: false, // Default to \"No\"\n    additionalDateOfBirth: \"\",\n    additionalGender: \"\",\n    additionalOccupation: \"\",\n    additionalVisaType: \"\",\n    additionalEmail: \"\",\n    additionalStayCount: \"\",\n    additionalRelationship: \"\",\n  });\n\n  const stateOptions = statesNames;\n  const countryCodes = countryCode;\n\n  const handleDeleteDependant = (dependantId) => {\n    setIsDependantDetailsLoading(true);\n    let payload = { taxFilingId: id, id: dependantId };\n    privateApiPOST(Api.deleteDependant, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setIsDependantDetailsLoading(false);\n          handleFetchDependantDetails();\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsFilerDetailsLoading(false);\n      });\n  };\n\n  const handleFetchDependantDetails = () => {\n    setIsDependantDetailsLoading(true);\n    let payload = { id: id };\n    privateApiPOST(Api.dependantDetails, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setDependantDetails(data?.data);\n          setIsDependantDetailsLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsDependantDetailsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (open) {\n      handleFetchDependantDetails();\n    }\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        {isFilerDetailsLoading ? (\n          <CircularProgress />\n        ) : (\n          <Box>\n            <Formik\n              initialValues={formData}\n              validationSchema={Yup.object().shape({\n                firstName: Yup.string()\n                  .max(255)\n                  .required(\"First Name is required\"),\n                middleName: Yup.string().max(255),\n                lastName: Yup.string()\n                  .max(255)\n                  .required(\"Last Name is required\"),\n                ssn: Yup.string()\n                  .matches(\n                    /^\\d{9}$/,\n                    \"SSN must be exactly 9 digits long and contain only numbers\"\n                  )\n                  .required(\"SSN is required\"),\n                dateOfBirth: Yup.date()\n                  .max(new Date(), \"Date of Birth cannot be in the future\")\n                  .required(\"Date of Birth is required\"),\n                gender: Yup.string().required(\"Gender is required\"),\n                occupation: Yup.string()\n                  .max(255)\n                  .required(\"Occupation is required\"),\n                residentialStatus: Yup.string().required(\n                  \"Residential Status is required\"\n                ),\n                street: Yup.string().max(255).required(\"Street is required\"),\n                apartment: Yup.string().max(255),\n                city: Yup.string().max(255).required(\"City is required\"),\n                state: Yup.string().max(255).required(\"State is required\"),\n                zipCode: Yup.string().max(10).required(\"Zip Code is required\"),\n                country: Yup.string().max(255).required(\"Country is required\"),\n                primaryCountryCode: Yup.string().required(\n                  \" Country Code is required\"\n                ),\n                primaryPhoneNumber: Yup.string().required(\n                  \"Primary Phone Number is required\"\n                ),\n                secondaryCountryCode: Yup.string(),\n                secondaryPhoneNumber: Yup.string(),\n                contactEmail: Yup.string()\n                  .email(\"Must be a valid email\")\n                  .max(255)\n                  .required(\"Contact Email is required\"),\n                taxFiledLastYear: Yup.boolean().required(\n                  \"Please select an option\"\n                ),\n                taxPayerStatus: Yup.string().required(\n                  \"Please select your status\"\n                ),\n\n                // additional Spouse Details (Add validation rules as needed)\n                spouseFirstName: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string().required(\"Spouse First Name is required\"),\n                  otherwise: Yup.string(),\n                }),\n                spouseMiddleInitial: Yup.string(),\n                spouseLastName: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string().required(\"Spouse Last Name is required\"),\n                  otherwise: Yup.string(),\n                }),\n                spouseSsnOrItin: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string()\n                    .required(\"Spouse SSN/ITIN is required if married\")\n                    .matches(/^\\d{9}$/, \"Spouse SSN/ITIN must be 9 digits\"),\n                  otherwise: Yup.string(),\n                }),\n                spouseApplyForItin: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string().required(\n                    \"Please select whether you want to apply for ITIN\"\n                  ),\n                  otherwise: Yup.string(),\n                }),\n                spouseDateOfBirth: Yup.date().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.date().required(\"Spouse Date of Birth is required\"),\n                  otherwise: Yup.date(),\n                }),\n                spouseGender: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string().required(\"Spouse Gender is required\"),\n                  otherwise: Yup.string(),\n                }),\n                spouseOccupation: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string().required(\"Spouse Occupation is required\"),\n                  otherwise: Yup.string(),\n                }),\n                spouseResidentialStatus: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string().required(\n                    \"Spouse Residential Status is required\"\n                  ),\n                  otherwise: Yup.string(),\n                }),\n                spouseEmail: Yup.string().when(\"taxPayerStatus\", {\n                  is: \"MARRIED\",\n                  then: Yup.string()\n                    .email(\"Must be a valid email\")\n                    .max(255)\n                    .required(\"Spouse Email is required\"),\n                  otherwise: Yup.string(),\n                }),\n\n                //  additional Details (Add validation rules as needed)\n\n                providedLivingSupport: Yup.boolean().required(\n                  \"Please select an option\"\n                ),\n\n                isNewDependant: Yup.boolean().required(\n                  \"Please select an option\"\n                ),\n\n                additionalFirstName: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\"First Name is required\"),\n                  otherwise: Yup.string(),\n                }),\n                additionalMiddleInitial: Yup.string(),\n                additionalLastName: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\"Last Name is required\"),\n                  otherwise: Yup.string(),\n                }),\n                additionalSsnOrItin: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\n                    \"SSN/ITIN is required if married\"\n                  ),\n                  otherwise: Yup.string(),\n                }),\n                additionalApplyForItin: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\n                    \"Please select whether you want to apply for ITIN\"\n                  ),\n                  otherwise: Yup.string(),\n                }),\n                additionalDateOfBirth: Yup.date().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.date().required(\"Date of Birth is required\"),\n                  otherwise: Yup.date(),\n                }),\n                additionalGender: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\"Gender is required\"),\n                  otherwise: Yup.string(),\n                }),\n                additionalOccupation: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\"Occupation is required\"),\n                  otherwise: Yup.string(),\n                }),\n                additionalVisaType: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\"Residential Status is required\"),\n                  otherwise: Yup.string(),\n                }),\n                additionalEmail: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string()\n                    .email(\"Must be a valid email\")\n                    .max(255)\n                    .required(\"Email is required\"),\n                  otherwise: Yup.string(),\n                }),\n                additionalRelationship: Yup.string().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.string().required(\"Relationship is required\"),\n                  otherwise: Yup.string(),\n                }),\n                additionalStayCount: Yup.number().when(\"isNewDependant\", {\n                  is: true,\n                  then: Yup.number().required(\n                    \"No. of months dependent has stayed with you in U.S is required\"\n                  ),\n                  otherwise: Yup.number(),\n                }),\n              })}\n              onSubmit={(values, { setSubmitting, resetForm }) => {\n                setIsFilerDetailsLoading(true);\n                setSubmitting(true);\n                let payload = { ...values, id: id };\n                privateApiPOST(Api.personalContactDetails, payload)\n                  .then((response) => {\n                    const { status, data } = response;\n                    if (status === 200) {\n                      console.log(\"data\", data);\n                      setIsFilerDetailsLoading(false);\n                      handleFetchData();\n                      setSubmitting(false);\n                    }\n                  })\n                  .catch((error) => {\n                    console.log(\"Error\", error);\n                    setIsFilerDetailsLoading(false);\n                    setSubmitting(false);\n                  });\n              }}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values,\n                setFieldValue,\n              }) => (\n                <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                  <Grid container spacing={2}>\n                    {/* Left Side - Personal Details */}\n\n                    <Grid item sm={6} xs={12}>\n                      <Box className={customStyles.leftSide}>\n                        <Typography variant=\"h4\" sx={{ marginBottom: \"36px\" }}>\n                          Personal Details\n                        </Typography>\n\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            justifyContent: \"space-between\",\n                            maxWidth: \"96%\",\n                          }}\n                        >\n                          <Typography\n                            variant=\"subtitle1\"\n                            color=\"textSecondary\"\n                            sx={{ marginTop: \"20px\", maxWidth: \"25%\" }}\n                          >\n                            Taxpayer Name\n                            <font color=\"#11a63d\" size=\"2\">\n                              (As Per SSN):\n                            </font>\n                          </Typography>\n\n                          <Box>\n                            <CustomInputTextField\n                              attribute=\"First Name\"\n                              attributeTextAlign=\"right\"\n                              is_required={true}\n                              error={Boolean(\n                                touched.firstName && errors.firstName\n                              )}\n                              fullWidth\n                              helperText={touched.firstName && errors.firstName}\n                              // label={\n                              //   <CustomLabel label=\"First Name\" required={true} />\n                              // }\n                              margin=\"normal\"\n                              name=\"firstName\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={values.firstName}\n                              variant=\"outlined\"\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Middle Initial\"\n                              attributeTextAlign=\"right\"\n                              is_required={false}\n                              error={Boolean(\n                                touched.middleName && errors.middleName\n                              )}\n                              fullWidth\n                              helperText={\n                                touched.middleName && errors.middleName\n                              }\n                              // label={\n                              //   <CustomLabel label=\"Middle Name\" required={false} />\n                              // }\n                              margin=\"normal\"\n                              name=\"middleName\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={values.middleName}\n                              variant=\"outlined\"\n                            />\n                            <CustomInputTextField\n                              attribute=\"Last Name\"\n                              attributeTextAlign=\"right\"\n                              is_required={true}\n                              error={Boolean(\n                                touched.lastName && errors.lastName\n                              )}\n                              fullWidth\n                              helperText={touched.lastName && errors.lastName}\n                              // label={\n                              //   <CustomLabel label=\"Last Name\" required={true} />\n                              // }\n                              margin=\"normal\"\n                              name=\"lastName\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={values.lastName}\n                              variant=\"outlined\"\n                            />\n                          </Box>\n                        </Box>\n\n                        <CustomInputTextField\n                          attribute=\"SSN\"\n                          attributeTextAlign=\"right\"\n                          is_required={true}\n                          error={Boolean(touched.ssn && errors.ssn)}\n                          fullWidth\n                          helperText={touched.ssn && errors.ssn}\n                          // label={<CustomLabel label=\"SSN\" required={true} />}\n                          margin=\"normal\"\n                          name=\"ssn\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={transform(values.ssn)}\n                          variant=\"outlined\"\n                        />\n                        <CustomInputTextField\n                          attribute=\"Date of Birth\"\n                          attributeTextAlign=\"right\"\n                          is_required={true}\n                          error={Boolean(\n                            touched.dateOfBirth && errors.dateOfBirth\n                          )}\n                          fullWidth\n                          helperText={touched.dateOfBirth && errors.dateOfBirth}\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Date of Birth\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"dateOfBirth\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          type=\"date\"\n                          value={values.dateOfBirth}\n                          variant=\"outlined\"\n                          InputLabelProps={{\n                            shrink: true, // This is important for the label to behave correctly\n                          }}\n                          InputProps={{\n                            style: {\n                              color: \"black\", // Customize the label color\n                            },\n                          }}\n                          inputProps={{\n                            // To disable the default placeholder\n                            placeholder: \"\",\n                            // Other attributes you might need\n                          }}\n                        />\n                        <CustomInputTextField\n                          attribute=\"Gender\"\n                          attributeTextAlign=\"right\"\n                          is_required={true}\n                          error={Boolean(touched.gender && errors.gender)}\n                          select\n                          fullWidth\n                          helperText={touched.gender && errors.gender}\n                          // label={<CustomLabel label=\"Gender\" required={true} />}\n                          margin=\"normal\"\n                          name=\"gender\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.gender}\n                          variant=\"outlined\"\n                        >\n                          <MenuItem value=\"MALE\">Male</MenuItem>\n                          <MenuItem value=\"FEMALE\">Female</MenuItem>\n                          <MenuItem value=\"Other\">Other</MenuItem>\n                        </CustomInputTextField>\n                        <CustomInputTextField\n                          attribute=\"Occupation / Job Title\"\n                          attributeTextAlign=\"right\"\n                          is_required={true}\n                          error={Boolean(\n                            touched.occupation && errors.occupation\n                          )}\n                          fullWidth\n                          helperText={touched.occupation && errors.occupation}\n                          // label={\n                          //   <CustomLabel label=\"Occupation\" required={true} />\n                          // }\n                          margin=\"normal\"\n                          name=\"occupation\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.occupation}\n                          variant=\"outlined\"\n                        />\n                        <CustomInputTextField\n                          attribute=\"Residential Status\"\n                          attributeTextAlign=\"right\"\n                          is_required={true}\n                          error={Boolean(\n                            touched.residentialStatus &&\n                              errors.residentialStatus\n                          )}\n                          fullWidth\n                          helperText={\n                            touched.residentialStatus &&\n                            errors.residentialStatus\n                          }\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Residential Status\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"residentialStatus\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.residentialStatus}\n                          variant=\"outlined\"\n                        />\n                      </Box>\n                    </Grid>\n\n                    {/* Right Side - Contact Details */}\n                    <Grid\n                      item\n                      sm={6}\n                      xs={12}\n                      // sx={{ marginLeft: { xs: \"0px\", sm: \"60px\" } }}\n                    >\n                      <Box className={customStyles.rightSide}>\n                        <Typography variant=\"h4\" sx={{ marginBottom: \"16px\" }}>\n                          Contact Details\n                        </Typography>\n                        <Typography\n                          color={\"#11a63d\"}\n                          sx={{ marginLeft: \"10px\" }}\n                          variant=\"h5\"\n                        >\n                          (Provide U.S current communication Address)\n                        </Typography>\n                        <CustomInputTextField\n                          attribute=\"Street\"\n                          is_required={true}\n                          error={Boolean(touched.street && errors.street)}\n                          fullWidth\n                          helperText={touched.street && errors.street}\n                          // label={<CustomLabel label=\"Street\" required={true} />}\n                          margin=\"normal\"\n                          name=\"street\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.street}\n                          variant=\"outlined\"\n                        />\n                        <CustomInputTextField\n                          attribute=\"Apartment\"\n                          is_required={true}\n                          error={Boolean(touched.apartment && errors.apartment)}\n                          fullWidth\n                          helperText={touched.apartment && errors.apartment}\n                          // label={\n                          //   <CustomLabel label=\"Apartment\" required={true} />\n                          // }\n                          margin=\"normal\"\n                          name=\"apartment\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.apartment}\n                          variant=\"outlined\"\n                        />\n                        <CustomInputTextField\n                          attribute=\"City\"\n                          is_required={true}\n                          error={Boolean(touched.city && errors.city)}\n                          fullWidth\n                          helperText={touched.city && errors.city}\n                          // label={<CustomLabel label=\"City\" required={true} />}\n                          margin=\"normal\"\n                          name=\"city\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.city}\n                          variant=\"outlined\"\n                        />\n                        <CustomInputTextField\n                          attribute=\"State\"\n                          is_required={true}\n                          error={Boolean(touched.state && errors.state)}\n                          select\n                          fullWidth\n                          helperText={touched.state && errors.state}\n                          // label={<CustomLabel label=\"State\" required={true} />}\n                          margin=\"normal\"\n                          name=\"state\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.state}\n                          variant=\"outlined\"\n                        >\n                          {stateOptions.map((option) => (\n                            <MenuItem key={option.value} value={option.value}>\n                              {option.label}\n                            </MenuItem>\n                          ))}\n                        </CustomInputTextField>\n                        <CustomInputTextField\n                          attribute=\"Zip Code\"\n                          is_required={true}\n                          error={Boolean(touched.zipCode && errors.zipCode)}\n                          fullWidth\n                          helperText={touched.zipCode && errors.zipCode}\n                          // label={\n                          //   <CustomLabel label=\"Zip Code\" required={true} />\n                          // }\n                          margin=\"normal\"\n                          name=\"zipCode\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.zipCode}\n                          variant=\"outlined\"\n                        />\n                        <CustomInputTextField\n                          attribute=\"Country\"\n                          is_required={true}\n                          error={Boolean(touched.country && errors.country)}\n                          select\n                          fullWidth\n                          helperText={touched.country && errors.country}\n                          // label={\n                          //   <CustomLabel label=\"Country\" required={true} />\n                          // }\n                          margin=\"normal\"\n                          name=\"country\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.country}\n                          variant=\"outlined\"\n                        >\n                          {/* <MenuItem value=\"India\">India</MenuItem> */}\n                          <MenuItem value=\"USA\">USA</MenuItem>\n                          <MenuItem value=\"Other\">Other</MenuItem>\n                        </CustomInputTextField>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                            width: \"93%\",\n                            margin: \"10px 0\",\n                            maxHeight: \"60px\",\n                          }}\n                        >\n                          <Typography\n                            variant=\"body1\"\n                            sx={{\n                              width: { xs: \"30%\", sm: \"120px\" },\n                            }}\n                          >\n                            <span>Primary Phone</span>\n                            <span\n                              style={{\n                                color: \"red\",\n                                fontSize: \"0.875rem\",\n                                marginLeft: \"3px\",\n                              }}\n                            >\n                              *\n                            </span>\n                            &nbsp;:\n                          </Typography>\n\n                          <TextField\n                            attribute=\"Primary Phone\"\n                            error={Boolean(\n                              touched.primaryCountryCode &&\n                                errors.primaryCountryCode\n                            )}\n                            select\n                            helperText={\n                              touched.primaryCountryCode &&\n                              errors.primaryCountryCode\n                            }\n                            // label={\n                            //   <CustomLabel label=\"+91\" required={true} />\n                            // }\n                            margin=\"normal\"\n                            name=\"primaryCountryCode\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.primaryCountryCode}\n                            variant=\"outlined\"\n                            sx={{\n                              width: \"18%\",\n                              \"& .MuiOutlinedInput-root\": {\n                                \"& fieldset\": {\n                                  borderRadius: \"2px\",\n                                },\n                              },\n                              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                                {\n                                  border: \"0.1px solid #bdbdbd\",\n                                },\n                              \"& .MuiOutlinedInput-input\": {\n                                padding: \"10px\",\n                                backgroundColor: \"rgba(255,255,255,1)\",\n                              },\n                            }}\n                          >\n                            {countryCodes.map((option) => (\n                              <MenuItem key={option.value} value={option.value}>\n                                {option.label}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n\n                          <TextField\n                            error={Boolean(\n                              touched.primaryPhoneNumber &&\n                                errors.primaryPhoneNumber\n                            )}\n                            helperText={\n                              touched.primaryPhoneNumber &&\n                              errors.primaryPhoneNumber\n                            }\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Primary Phone Number\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"primaryPhoneNumber\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.primaryPhoneNumber}\n                            variant=\"outlined\"\n                            sx={{\n                              \"& .MuiOutlinedInput-root\": {\n                                \"& fieldset\": {\n                                  borderRadius: \"2px\",\n                                },\n                              },\n                              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                                {\n                                  border: \"0.1px solid #bdbdbd\",\n                                },\n                              \"& .MuiOutlinedInput-input\": {\n                                padding: \"10px\",\n                                backgroundColor: \"rgba(255,255,255,1)\",\n                              },\n                              width: { xs: \"50%\", sm: \"165px\" },\n                            }}\n                          />\n                        </Box>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                            width: \"93%\",\n                            margin: \"10px 0\",\n                            maxHeight: \"60px\",\n                          }}\n                        >\n                          <Typography\n                            variant=\"body1\"\n                            sx={{\n                              width: { xs: \"30%\", sm: \"120px\" },\n                            }}\n                          >\n                            <span>Secondary Phone</span>\n                            &nbsp;:\n                          </Typography>\n\n                          <TextField\n                            error={Boolean(\n                              touched.secondaryCountryCode &&\n                                errors.secondaryCountryCode\n                            )}\n                            select\n                            helperText={\n                              touched.secondaryCountryCode &&\n                              errors.secondaryCountryCode\n                            }\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Country Code\"\n                            //     required={false}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"secondaryCountryCode\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.secondaryCountryCode}\n                            variant=\"outlined\"\n                            sx={{\n                              \"& .MuiOutlinedInput-root\": {\n                                \"& fieldset\": {\n                                  borderRadius: \"2px\",\n                                },\n                              },\n                              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                                {\n                                  border: \"0.1px solid #bdbdbd\",\n                                },\n                              \"& .MuiOutlinedInput-input\": {\n                                padding: \"10px\",\n                                backgroundColor: \"rgba(255,255,255,1)\",\n                              },\n                              width: \"18%\",\n                            }}\n                          >\n                            {countryCodes.map((option) => (\n                              <MenuItem key={option.value} value={option.value}>\n                                {option.label}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n\n                          <TextField\n                            attribute=\"Secondary Phone\"\n                            error={Boolean(\n                              touched.secondaryPhoneNumber &&\n                                errors.secondaryPhoneNumber\n                            )}\n                            helperText={\n                              touched.secondaryPhoneNumber &&\n                              errors.secondaryPhoneNumber\n                            }\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Secondary Phone Number\"\n                            //     required={false}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"secondaryPhoneNumber\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.secondaryPhoneNumber}\n                            variant=\"outlined\"\n                            sx={{\n                              \"& .MuiOutlinedInput-root\": {\n                                \"& fieldset\": {\n                                  borderRadius: \"2px\",\n                                },\n                              },\n                              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                                {\n                                  border: \"0.1px solid #bdbdbd\",\n                                },\n                              \"& .MuiOutlinedInput-input\": {\n                                padding: \"10px\",\n                                backgroundColor: \"rgba(255,255,255,1)\",\n                              },\n                              width: { xs: \"50%\", sm: \"165px\" },\n                            }}\n                          />\n                        </Box>\n\n                        <CustomInputTextField\n                          attribute=\"Email Id\"\n                          is_required={true}\n                          error={Boolean(\n                            touched.contactEmail && errors.contactEmail\n                          )}\n                          fullWidth\n                          helperText={\n                            touched.contactEmail && errors.contactEmail\n                          }\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Contact Email\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"contactEmail\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.contactEmail}\n                          variant=\"outlined\"\n                        />\n                      </Box>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Box sx={{ margin: \"16px 0\" }}>\n                      <Grid container spacing={2}>\n                        <Grid\n                          item\n                          xs={10}\n                          sm={5}\n                          style={{ display: \"flex\", alignItems: \"center\" }}\n                        >\n                          <Typography variant=\"body1\">\n                            <CustomLabel\n                              label=\"Have you filed your taxes with Taxcooler in the last year?\"\n                              required={true}\n                            />\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={2} sm={1}>\n                          <select\n                            id=\"taxFiledLastYear\"\n                            name=\"taxFiledLastYear\"\n                            value={values.taxFiledLastYear}\n                            onChange={handleChange}\n                            style={{ width: \"100%\" }}\n                          >\n                            <option value=\"\">Select</option>\n                            {/* Add an empty option */}\n                            <option value={true}>Yes</option>\n                            <option value={false}>No</option>\n                          </select>\n                        </Grid>\n                      </Grid>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Box sx={{ margin: \"16px 0\" }}>\n                      <Grid container spacing={2}>\n                        <Grid\n                          item\n                          xs={8}\n                          sm={5}\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Typography variant=\"body1\">\n                            <CustomLabel\n                              label=\"Taxpayer Status\"\n                              required={true}\n                            />\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={4} sm={1}>\n                          <select\n                            id=\"taxPayerStatus\"\n                            name=\"taxPayerStatus\"\n                            value={values.taxPayerStatus}\n                            onChange={handleChange}\n                            style={{ width: \"100%\" }}\n                          >\n                            <option value=\"\">Select Status</option>{\" \"}\n                            {/* Add an empty option */}\n                            <option value=\"SINGLE\">Single</option>\n                            <option value=\"MARRIED\">Married</option>\n                          </select>\n                        </Grid>\n                      </Grid>\n                    </Box>\n                  </Grid>\n                  {values.taxPayerStatus === \"MARRIED\" && (\n                    <Grid container spacing={2}>\n                      {/* Left Side - Spouse Details */}\n                      <Grid item lg={6} sm={6} xs={12}>\n                        <Typography variant=\"h4\">Spouse Details</Typography>\n                        <Grid container spacing={2}>\n                          <CustomInputTextField\n                            attribute=\"First Name\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"First Name\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseFirstName\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.spouseFirstName}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseFirstName && errors.spouseFirstName\n                            )}\n                            helperText={\n                              touched.spouseFirstName && errors.spouseFirstName\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Middle Initial\"\n                            is_required={false}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Spouse Middle Initial\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseMiddleInitial\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.spouseMiddleInitial}\n                            variant=\"outlined\"\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Last Name\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Spouse Last Name\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseLastName\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.spouseLastName}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseLastName && errors.spouseLastName\n                            )}\n                            helperText={\n                              touched.spouseLastName && errors.spouseLastName\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"SSN/ITIN\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Spouse SSN/ITIN\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseSsnOrItin\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={transform(values.spouseSsnOrItin)}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseSsnOrItin && errors.spouseSsnOrItin\n                            )}\n                            helperText={\n                              touched.spouseSsnOrItin && errors.spouseSsnOrItin\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Do you want to apply for ITIN?\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Do you want to apply for ITIN?\"\n                            //     required={true}\n                            //   />\n                            // }\n                            select\n                            margin=\"normal\"\n                            name=\"spouseApplyForItin\"\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.spouseApplyForItin}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseApplyForItin &&\n                                errors.spouseApplyForItin\n                            )}\n                            helperText={\n                              touched.spouseApplyForItin &&\n                              errors.spouseApplyForItin\n                            }\n                          >\n                            <MenuItem value={false}>No</MenuItem>\n                            <MenuItem value={true}>Yes</MenuItem>\n                          </CustomInputTextField>\n                          {values.spouseApplyForItin === true && (\n                            <ButtonBase\n                              onClick={() =>\n                                handleDownloadTemplate(\"ITIN_Information.xls\")\n                              }\n                              sx={{\n                                marginTop: \"12px\",\n                                textDecoration: \"underline\",\n                              }}\n                              disableTouchRipple\n                            >\n                              Download ITIN Information Excel\n                            </ButtonBase>\n                          )}\n                        </Grid>\n                      </Grid>\n\n                      {/* Right Side - Spouse Contact */}\n                      <Grid item lg={6} sm={6} xs={12}>\n                        <Typography variant=\"h4\">Spouse Contact</Typography>\n                        <Grid container spacing={2}>\n                          <CustomInputTextField\n                            attribute=\"Date of Birth\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Date of Birth\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseDateOfBirth\"\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            type=\"date\"\n                            value={values.spouseDateOfBirth}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseDateOfBirth &&\n                                errors.spouseDateOfBirth\n                            )}\n                            helperText={\n                              touched.spouseDateOfBirth &&\n                              errors.spouseDateOfBirth\n                            }\n                            InputLabelProps={{\n                              shrink: true, // This is important for the label to behave correctly\n                            }}\n                            InputProps={{\n                              style: {\n                                color: \"black\", // Customize the label color\n                              },\n                            }}\n                            inputProps={{\n                              // To disable the default placeholder\n                              placeholder: \"\",\n                              // Other attributes you might need\n                            }}\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Gender\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Spouse Gender\"\n                            //     required={true}\n                            //   />\n                            // }\n                            select\n                            margin=\"normal\"\n                            name=\"spouseGender\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.spouseGender}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseGender && errors.spouseGender\n                            )}\n                            helperText={\n                              touched.spouseGender && errors.spouseGender\n                            }\n                          >\n                            <MenuItem value=\"MALE\">Male</MenuItem>\n                            <MenuItem value=\"FEMALE\">Female</MenuItem>\n                            <MenuItem value=\"Other\">Other</MenuItem>\n                          </CustomInputTextField>\n\n                          <CustomInputTextField\n                            attribute=\"Occupation / Job Title\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Spouse Occupation / Job Title\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseOccupation\"\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.spouseOccupation}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseOccupation &&\n                                errors.spouseOccupation\n                            )}\n                            helperText={\n                              touched.spouseOccupation &&\n                              errors.spouseOccupation\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Residential Status\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Spouse Residential Status\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseResidentialStatus\"\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.spouseResidentialStatus}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseResidentialStatus &&\n                                errors.spouseResidentialStatus\n                            )}\n                            helperText={\n                              touched.spouseResidentialStatus &&\n                              errors.spouseResidentialStatus\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Email Id\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Spouse Email Id\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"spouseEmail\"\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.spouseEmail}\n                            variant=\"outlined\"\n                            error={Boolean(\n                              touched.spouseEmail && errors.spouseEmail\n                            )}\n                            helperText={\n                              touched.spouseEmail && errors.spouseEmail\n                            }\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  )}\n\n                  <Grid container>\n                    <Grid\n                      container\n                      sx={{\n                        marginTop: \"36px\",\n                        marginBottom: \"24px\",\n                      }}\n                    >\n                      <Grid\n                        item\n                        xs={10}\n                        sm={9}\n                        sx={{ display: \"flex\", alignItems: \"center\" }}\n                      >\n                        <Typography variant=\"body1\">\n                          <CustomLabel\n                            label=\" Have you (or your spouse, if married) provided living\n                        support to your kids and/or dependents during the tax\n                        year?\"\n                          />\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={2}>\n                        <CustomInputTextField\n                          attribute=\"\"\n                          is_required={true}\n                          // label={<CustomLabel label=\"\" />}\n                          select\n                          margin=\"normal\"\n                          name=\"providedLivingSupport\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.providedLivingSupport}\n                          variant=\"outlined\"\n                          error={Boolean(\n                            touched.providedLivingSupport &&\n                              errors.providedLivingSupport\n                          )}\n                          helperText={\n                            touched.providedLivingSupport &&\n                            errors.providedLivingSupport\n                          }\n                        >\n                          <MenuItem value={true}>Yes</MenuItem>\n                          <MenuItem value={false}>No</MenuItem>\n                        </CustomInputTextField>\n                      </Grid>\n                    </Grid>\n                    <Grid>\n                      <Typography\n                        variant=\"body1\"\n                        style={{ color: \"blue\", wordSpacing: \"2px\" }}\n                      >\n                        NOTE: Make sure the kids or dependants reported in your\n                        (Taxpayer) 2023 Tax Return are not claimed as dependants\n                        in any other 2023 Individual Tax Returns.\n                      </Typography>\n                    </Grid>\n\n                    {values.providedLivingSupport === true ? (\n                      <Grid item xs={12}>\n                        <Button\n                          type=\"button\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          startIcon={\n                            values.isNewDependant ? <RemoveIcon /> : <AddIcon />\n                          }\n                          onClick={() => {\n                            // Toggle between true and false\n                            setFieldValue(\n                              \"isNewDependant\",\n                              !values.isNewDependant\n                            );\n                          }}\n                          sx={{\n                            width: \"210px\",\n                            margin: \"10px\",\n                          }}\n                        >\n                          {values.isNewDependant\n                            ? \"Remove Dependant\"\n                            : \"Add Dependant\"}\n                        </Button>\n                      </Grid>\n                    ) : null}\n\n                    {values.isNewDependant && (\n                      <Grid container spacing={2}>\n                        {/* Left Side - additional Details */}\n                        <Grid item lg={6} sm={6} xs={12}>\n                          <Typography variant=\"h4\">\n                            Additional Details\n                          </Typography>\n                          <Grid container spacing={2}>\n                            <CustomInputTextField\n                              attribute=\"First Name\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"First Name\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalFirstName`}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={values.additionalFirstName}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalFirstName &&\n                                errors.additionalFirstName\n                              }\n                              helperText={\n                                touched.additionalFirstName &&\n                                errors.additionalFirstName\n                              }\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Middle Initial\"\n                              is_required={false}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Middle Initial\"\n                              //     required={false}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalMiddleInitial`}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={values.additionalMiddleInitial}\n                              variant=\"outlined\"\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Last Name\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Last Name\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalLastName`}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={values.additionalLastName}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalLastName &&\n                                errors.additionalLastName\n                              }\n                              helperText={\n                                touched.additionalLastName &&\n                                errors.additionalLastName\n                              }\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"SSN/ITIN\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel label=\"SSN/ITIN\" required={true} />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalSsnOrItin`}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={transform(values.additionalSsnOrItin)}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalSsnOrItin &&\n                                errors.additionalSsnOrItin\n                              }\n                              helperText={\n                                touched.additionalSsnOrItin &&\n                                errors.additionalSsnOrItin\n                              }\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Do you want to apply for ITIN?\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Do you want to apply for ITIN?\"\n                              //     required={true}\n                              //   />\n                              // }\n                              select\n                              margin=\"normal\"\n                              name={`additionalApplyForItin`}\n                              onBlur={handleBlur}\n                              fullWidth\n                              onChange={handleChange}\n                              value={values.additionalApplyForItin}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalApplyForItin &&\n                                errors.additionalApplyForItin\n                              }\n                              helperText={\n                                touched.additionalApplyForItin &&\n                                errors.additionalApplyForItin\n                              }\n                            >\n                              <MenuItem value={false}>No</MenuItem>\n                              <MenuItem value={true}>Yes</MenuItem>\n                            </CustomInputTextField>\n                            {values.additionalApplyForItin === true && (\n                              <ButtonBase\n                                onClick={() =>\n                                  handleDownloadTemplate(\"ITIN_Information.xls\")\n                                }\n                                sx={{\n                                  marginTop: \"2px\",\n                                  textDecoration: \"underline\",\n                                }}\n                                disableTouchRipple\n                              >\n                                Download ITIN Information Excel\n                              </ButtonBase>\n                            )}\n\n                            <CustomInputTextField\n                              attribute=\"Relationship\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Relationship\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalRelationship`}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={values.additionalRelationship}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalRelationship &&\n                                errors.additionalRelationship\n                              }\n                              helperText={\n                                touched.additionalRelationship &&\n                                errors.additionalRelationship\n                              }\n                            />\n                          </Grid>\n                        </Grid>\n\n                        {/* Right Side - additional Contact */}\n                        <Grid item lg={6} sm={6} xs={12}>\n                          <Typography variant=\"h4\">\n                            Additional Contact\n                          </Typography>\n                          <Grid container spacing={2}>\n                            <CustomInputTextField\n                              attribute=\"Dependent DOB\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Date of Birth\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalDateOfBirth`}\n                              onBlur={handleBlur}\n                              fullWidth\n                              onChange={handleChange}\n                              type=\"date\"\n                              value={values.additionalDateOfBirth}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalDateOfBirth &&\n                                errors.additionalDateOfBirth\n                              }\n                              helperText={\n                                touched.additionalDateOfBirth &&\n                                errors.additionalDateOfBirth\n                              }\n                              InputLabelProps={{\n                                shrink: true, // This is important for the label to behave correctly\n                              }}\n                              InputProps={{\n                                style: {\n                                  color: \"black\", // Customize the label color\n                                },\n                              }}\n                              inputProps={{\n                                // To disable the default placeholder\n                                placeholder: \"\",\n                                // Other attributes you might need\n                              }}\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Gender\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel label=\"Gender\" required={true} />\n                              // }\n                              select\n                              margin=\"normal\"\n                              name={`additionalGender`}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={values.additionalGender}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalGender &&\n                                errors.additionalGender\n                              }\n                              helperText={\n                                touched.additionalGender &&\n                                errors.additionalGender\n                              }\n                            >\n                              <MenuItem value=\"MALE\">Male</MenuItem>\n                              <MenuItem value=\"FEMALE\">Female</MenuItem>\n                              <MenuItem value=\"Other\">Other</MenuItem>\n                            </CustomInputTextField>\n\n                            <CustomInputTextField\n                              attribute=\"Occupation / Job Title\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Occupation / Job Title\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalOccupation`}\n                              onBlur={handleBlur}\n                              fullWidth\n                              onChange={handleChange}\n                              value={values.additionalOccupation}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalOccupation &&\n                                errors.additionalOccupation\n                              }\n                              helperText={\n                                touched.additionalOccupation &&\n                                errors.additionalOccupation\n                              }\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Visa Type\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Visa Type\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalVisaType`}\n                              onBlur={handleBlur}\n                              select\n                              fullWidth\n                              onChange={handleChange}\n                              value={values.additionalVisaType}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalVisaType &&\n                                errors.additionalVisaType\n                              }\n                              helperText={\n                                touched.additionalVisaType &&\n                                errors.additionalVisaType\n                              }\n                            >\n                              {[\n                                \"H4\",\n                                \"US Citizen\",\n                                \"L2\",\n                                \"Green Card\",\n                                \"Other\",\n                              ].map((each, id) => {\n                                return (\n                                  <MenuItem key={id} value={each}>\n                                    {each}\n                                  </MenuItem>\n                                );\n                              })}\n                            </CustomInputTextField>\n\n                            <CustomInputTextField\n                              attribute=\"Email Id\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel label=\"Email Id\" required={true} />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalEmail`}\n                              onBlur={handleBlur}\n                              fullWidth\n                              onChange={handleChange}\n                              value={values.additionalEmail}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalEmail &&\n                                errors.additionalEmail\n                              }\n                              helperText={\n                                touched.additionalEmail &&\n                                errors.additionalEmail\n                              }\n                            />\n                            <CustomInputTextField\n                              attribute=\"No. of months dependent has stayed with you in U.S\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"No. of months dependent has stayed with you in U.S\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name={`additionalStayCount`}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              type=\"number\"\n                              fullWidth\n                              value={values.additionalStayCount}\n                              variant=\"outlined\"\n                              error={\n                                touched.additionalStayCount &&\n                                errors.additionalStayCount\n                              }\n                              helperText={\n                                touched.additionalStayCount &&\n                                errors.additionalStayCount\n                              }\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    )}\n                    <Grid item xs={12}>\n                      {isDependantDetailsLoading ? (\n                        <CircularProgress />\n                      ) : (\n                        <TableContainer\n                          sx={{\n                            marginTop: \"32px\",\n                            paddingBottom: { xs: \"10px\", sm: \"0px\" },\n                          }}\n                        >\n                          <Typography variant=\"h5\" sx={{ textAlign: \"center\" }}>\n                            Existing Dependant Details\n                          </Typography>\n                          <Table\n                            sx={{\n                              borderCollapse: \"collapse\",\n                            }}\n                            aria-label=\"Place Order Series Table\"\n                          >\n                            <TableHead>\n                              <TableRow>\n                                <TableCell className={customStyles.tableHeader}>\n                                  Name\n                                </TableCell>\n\n                                <TableCell className={customStyles.tableHeader}>\n                                  Relationship\n                                </TableCell>\n                                <TableCell className={customStyles.tableHeader}>\n                                  SSN/ITIN\n                                </TableCell>\n                                <TableCell className={customStyles.tableHeader}>\n                                  Apply ?\n                                </TableCell>\n                                <TableCell className={customStyles.tableHeader}>\n                                  DOB\n                                </TableCell>\n                                <TableCell className={customStyles.tableHeader}>\n                                  Visa Type\n                                </TableCell>\n                                <TableCell className={customStyles.tableHeader}>\n                                  C.S\n                                </TableCell>\n                                <TableCell className={customStyles.tableHeader}>\n                                  Months\n                                </TableCell>\n                                <TableCell className={customStyles.tableHeader}>\n                                  Action\n                                </TableCell>\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              {dependantDetails.length > 0 &&\n                                dependantDetails.map((row, index) => (\n                                  <TableRow key={index}>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      {row.additionalFirstName}{\" \"}\n                                      {row.additionalLastName}\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      {row.additionalRelationship}\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      {transform(row.additionalSsnOrItin)}\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      {row.additionalApplyForItin\n                                        ? \"YES\"\n                                        : \"NO\"}\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      {row.additionalDateOfBirth}\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      {row.additionalVisaType}\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      USA\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      {row.additionalStayCount}\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.tableData}\n                                    >\n                                      <Button\n                                        disabled={isFilerDetailsLoading}\n                                        startIcon={<DeleteIcon />}\n                                        size=\"small\"\n                                        onClick={() => {\n                                          handleDeleteDependant(row.id);\n                                        }}\n                                        className={customStyles.buttons}\n                                      >\n                                        Delete{\" \"}\n                                        {isFilerDetailsLoading && (\n                                          <CircularProgress\n                                            sx={{ ml: 1 }}\n                                            size={14}\n                                          />\n                                        )}\n                                      </Button>\n                                    </TableCell>\n                                    <TableCell\n                                      className={customStyles.mobileView}\n                                    >\n                                      <Box>\n                                        <Box\n                                          sx={{\n                                            display: \"flex\",\n                                            flexWrap: \"wrap\",\n                                            justifyContent: \"space-between\",\n                                            marginTop: \"16px\",\n                                          }}\n                                        >\n                                          <Box sx={{ marginTop: \"3px\" }}>\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellHeader\n                                              }\n                                            >\n                                              First Name\n                                            </Typography>\n\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellValue\n                                              }\n                                            >\n                                              {row.additionalFirstName}\n                                            </Typography>\n                                          </Box>\n                                          <Box sx={{ marginTop: \"3px\" }}>\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellHeader\n                                              }\n                                            >\n                                              Last Name\n                                            </Typography>\n\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellValue\n                                              }\n                                            >\n                                              {row.additionalLastName}\n                                            </Typography>\n                                          </Box>\n                                          <Box sx={{ marginTop: \"3px\" }}>\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellHeader\n                                              }\n                                            >\n                                              RelationShip\n                                            </Typography>\n\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellValue\n                                              }\n                                            >\n                                              {row.additionalRelationship}\n                                            </Typography>\n                                          </Box>\n                                        </Box>\n                                        <Box\n                                          sx={{\n                                            display: \"flex\",\n                                            flexWrap: \"wrap\",\n                                            justifyContent: \"space-between\",\n                                            marginTop: \"16px\",\n                                          }}\n                                        >\n                                          <Box sx={{ marginTop: \"3px\" }}>\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellHeader\n                                              }\n                                            >\n                                              Visa Type\n                                            </Typography>\n\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellValue\n                                              }\n                                            >\n                                              {row.additionalVisaType}\n                                            </Typography>\n                                          </Box>\n\n                                          <Box sx={{ marginTop: \"3px\" }}>\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellHeader\n                                              }\n                                            >\n                                              SSN/ITIN\n                                            </Typography>\n\n                                            <Typography\n                                              className={\n                                                customStyles.mobileViewTableCellValue\n                                              }\n                                            >\n                                              {transform(\n                                                row.additionalSsnOrItin\n                                              )}\n                                            </Typography>\n                                          </Box>\n\n                                          <Button\n                                            disabled={isFilerDetailsLoading}\n                                            startIcon={<DeleteIcon />}\n                                            size=\"small\"\n                                            onClick={() => {\n                                              handleDeleteDependant(row.id);\n                                            }}\n                                          >\n                                            Delete{\" \"}\n                                            {isFilerDetailsLoading && (\n                                              <CircularProgress\n                                                sx={{ ml: 1 }}\n                                                size={14}\n                                              />\n                                            )}\n                                          </Button>\n                                        </Box>\n                                      </Box>\n                                    </TableCell>\n                                  </TableRow>\n                                ))}\n                            </TableBody>\n                          </Table>\n\n                          {dependantDetails.length === 0 && (\n                            <Typography\n                              variant=\"h5\"\n                              sx={{ textAlign: \"center\", margin: \"5px 0\" }}\n                            >\n                              No Dependants Found\n                            </Typography>\n                          )}\n                          <Typography\n                            variant=\"h5\"\n                            sx={{\n                              textAlign: \"center\",\n                              color: \"red\",\n                              marginTop: \"20px\",\n                            }}\n                          >\n                            TO MODIFY EXISTING DEPENDENT DETAILS, DELETE THE\n                            SAME and then CLICK on \"Add Additional Dependents\"\n                          </Typography>\n                        </TableContainer>\n                      )}\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          margin: { xs: \"8px 0\", sm: \"26px 0 20px\" },\n                        }}\n                      >\n                        <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                        >\n                          SAVE\n                        </Button>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </form>\n              )}\n            </Formik>\n          </Box>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default FilerDetails;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Typography,\n  Grid,\n  Button,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  CircularProgress,\n  Tooltip,\n  ButtonBase,\n} from \"@mui/material\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\"; // Import Yup for validation\nimport TextField from \"@mui/material/TextField\";\nimport Api from \"../../../components/Api\";\nimport { privateApiPOST } from \"../../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\n\nconst IncomeDetails = ({\n  open,\n  id,\n  data,\n  handleFetchData,\n  handleDownloadTemplate,\n}) => {\n  const [isIncomeDetailsLoading, setIsIncomeDetailsLoading] = useState(false);\n\n  const initialValues = {\n    interestIncome: data[\"interestIncome\"],\n    dividendIncome: data[\"dividendIncome\"],\n    soldStocks: data[\"soldStocks\"],\n    soldCrypto: data[\"soldCrypto\"],\n    foreignIncome: data[\"foreignIncome\"],\n    retirementAccounts: data[\"retirementAccounts\"],\n    stateTaxRefund: data[\"stateTaxRefund\"],\n    foreignBankAccount: data[\"foreignBankAccount\"],\n    foreignAssets: data[\"foreignAssets\"],\n    rentalIncome: data[\"rentalIncome\"],\n    income1099: data[\"income1099\"],\n    incomeDescription: data[\"incomeDescription\"],\n    incomeAmount: data[\"incomeAmount\"],\n    addAdditionalInformation: false,\n  };\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Container maxWidth=\"lg\">\n        {isIncomeDetailsLoading ? (\n          <CircularProgress />\n        ) : (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={Yup.object().shape({\n              interestIncome: Yup.boolean(),\n              dividendIncome: Yup.boolean(),\n              soldStocks: Yup.boolean(),\n              soldCrypto: Yup.boolean(),\n              foreignIncome: Yup.boolean(),\n              retirementAccounts: Yup.boolean(),\n              stateTaxRefund: Yup.boolean(),\n              foreignBankAccount: Yup.boolean(),\n              foreignAssets: Yup.boolean(),\n              rentalIncome: Yup.boolean(),\n              income1099: Yup.boolean(),\n              incomeDescription: Yup.string().when(\"addAdditionalInformation\", {\n                is: true,\n                then: Yup.string().required(\"Income Description is Required\"),\n                otherwise: Yup.string(),\n              }),\n              incomeAmount: Yup.number().when(\"addAdditionalInformation\", {\n                is: true,\n                then: Yup.number().required(\"Income Amount is Required\"),\n                otherwise: Yup.number(),\n              }),\n              addAdditionalInformation: Yup.boolean(),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              setIsIncomeDetailsLoading(true);\n              setSubmitting(true);\n              let payload = { ...values, id: id };\n              privateApiPOST(Api.incomeDetails, payload)\n                .then((response) => {\n                  const { status, data } = response;\n                  if (status === 200) {\n                    console.log(\"data\", data);\n                    setIsIncomeDetailsLoading(false);\n                    handleFetchData();\n                    setSubmitting(false);\n                  }\n                })\n                .catch((error) => {\n                  console.log(\"Error\", error);\n                  setIsIncomeDetailsLoading(false);\n                  setSubmitting(false);\n                });\n            }}\n          >\n            {({\n              values,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              errors,\n              touched,\n            }) => (\n              <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <Grid container spacing={2}>\n                  {/* Interest Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have any Interest Income?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"interestIncome\"\n                        value={values.interestIncome}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Upload 1099-INT forms and Interest received in Foreign Banks\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Dividend Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have any Dividend Income?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"dividendIncome\"\n                        value={values.dividendIncome}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Upload 1099-DIV forms and dividends received in Foreign Banks\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Sold Stocks */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Did you sell any stocks in 2022?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"soldStocks\"\n                        value={values.soldStocks}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Upload 1099-B, Gain/Loss statement in excel format. If it is ESPP/RSU stocks, upload adjusted cost basis details as well.\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Sold Crypto */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Did you sell any Crypto Currency in 2022?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"soldCrypto\"\n                        value={values.soldCrypto}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Download and fill Crypto CSV.\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                      {values.soldCrypto ? (\n                        <ButtonBase\n                          onClick={() =>\n                            handleDownloadTemplate(\"Crypto_Information_1.xls\")\n                          }\n                          sx={{\n                            marginTop: \"2px\",\n                            textDecoration: \"underline\",\n                          }}\n                          disableTouchRipple\n                        >\n                          Download and fill Crypto Excel\n                        </ButtonBase>\n                      ) : null}\n                    </FormControl>\n                  </Grid>\n                  {/* Foreign Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have any foreign country income in 2022?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"foreignIncome\"\n                        value={values.foreignIncome}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n\n                      <Tooltip\n                        title=\"Upload Total income received in Foreign Country and Total taxes paid in Foreign Country\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Contributions/Distributions */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have contributions/distributions to/from\n                        retirement accounts in year 2022?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"retirementAccounts\"\n                        value={values.retirementAccounts}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"401k/IRA etc., which is not mentioned in your W2. Upload Bank Statement 1099 R in Upload Tax Docs section\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* State Tax Refund */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Did you get State tax refund(s) in 2022?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"stateTaxRefund\"\n                        value={values.stateTaxRefund}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"If yes, upload 1099 G you might have received from State in Upload Tax Docs section\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Foreign Bank Account */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have Account Balance in Foreign banks exceeding\n                        more than $10,000?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"foreignBankAccount\"\n                        value={values.foreignBankAccount}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"As per recent IRS laws, you need to report if the combined investments(stocks/bonds/real estate) of all your foreign accounts exceeds $10,000 on at least 1 day.\n                        You do not need to pay any tax on this amount. A separate form need to be sent to IRS\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                      {values.foreignBankAccount ? (\n                        <ButtonBase\n                          onClick={() =>\n                            handleDownloadTemplate(\"FBAR_Information_2022.xls\")\n                          }\n                          sx={{\n                            marginTop: \"2px\",\n                            textDecoration: \"underline\",\n                          }}\n                          disableTouchRipple\n                        >\n                          Download and fill FBAR Excel\n                        </ButtonBase>\n                      ) : null}\n                    </FormControl>\n                  </Grid>\n\n                  {/* Foreign Assets */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have Foreign Assets value more than $50,000 at\n                        any time during the tax year?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"foreignAssets\"\n                        value={values.foreignAssets}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"As per recent IRS laws, you need to report if the combined investments(stocks/bonds/Accounts/Partnerships) of all your foreign assets exceeds $50,000 on at least 1 day in year 2022. You do not need to pay any tax on this amount. You need to report these details to avoid penalties.\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                      {values.foreignAssets ? (\n                        <ButtonBase\n                          onClick={() =>\n                            handleDownloadTemplate(\n                              \"FBAR_Information_2022_1.xls\"\n                            )\n                          }\n                          sx={{\n                            marginTop: \"2px\",\n                            textDecoration: \"underline\",\n                          }}\n                          disableTouchRipple\n                        >\n                          Download and fill FBAR Excel(Financial Assets Tab)\n                        </ButtonBase>\n                      ) : null}\n                    </FormControl>\n                  </Grid>\n\n                  {/* Rental Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have Rental Income in Foreign Country/USA?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"rentalIncome\"\n                        value={values.rentalIncome}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n\n                  {/* 1099-Misc/1099-NEC Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have 1099-Misc/1099-NEC Income in year 2022?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"income1099\"\n                        value={values.income1099}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Upload 1099 Misc / 1099 NEC\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid\n                    container\n                    spacing={2}\n                    sx={{\n                      marginTop: \"30px\",\n                      marginBottom: \"30px\",\n                      marginLeft: \"0px\",\n                    }}\n                  >\n                    <Grid item xs={12} className=\"leftSide\">\n                      <Typography variant=\"h5\">\n                        Add other Income Information\n                      </Typography>\n\n                      <CustomInputTextField\n                        error={Boolean(\n                          touched.incomeDescription && errors.incomeDescription\n                        )}\n                        fullWidth\n                        helperText={\n                          touched.incomeDescription && errors.incomeDescription\n                        }\n                        attribute=\"Income Description\"\n                        margin=\"normal\"\n                        name=\"incomeDescription\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.incomeDescription}\n                        variant=\"outlined\"\n                      />\n\n                      <CustomInputTextField\n                        error={Boolean(\n                          touched.incomeAmount && errors.incomeAmount\n                        )}\n                        fullWidth\n                        helperText={touched.incomeAmount && errors.incomeAmount}\n                        attribute=\"Income Amount\"\n                        margin=\"normal\"\n                        name=\"incomeAmount\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.incomeAmount}\n                        variant=\"outlined\"\n                        type=\"number\"\n                      />\n\n                      {/* <Grid item xs={12} sm={6}>\n                        <Button\n                          variant={\n                            values.addAdditionalInformation\n                              ? \"contained\"\n                              : \"outlined\"\n                          }\n                          color=\"primary\"\n                          name=\"addAdditionalInformation\"\n                          onClick={() =>\n                            handleChange(!values.addAdditionalInformation)\n                          }\n                          value={values.addAdditionalInformation}\n                        >\n                          Add Additional Information\n                        </Button>\n                      </Grid> */}\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    paddingBottom: { xs: \"20px\" },\n                  }}\n                >\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Save\n                  </Button>\n                </Box>\n              </Form>\n            )}\n          </Formik>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default IncomeDetails;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  Button,\n  CircularProgress,\n  FormControl,\n} from \"@mui/material\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\"; // Import Yup for validation\nimport Api from \"../../../components/Api\";\nimport { privateApiPOST } from \"../../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\n\nconst validationSchema = Yup.object().shape({\n  bankingType: Yup.string().required(\"Banking Type is required\"),\n  bankName: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Bank Name is required\"),\n  }),\n  accountHolderName: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Account Holder Name is required\"),\n  }),\n  ownership: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Ownership is required\"),\n  }),\n  routingNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .matches(/^\\d{9}$/, \"Routing Number must be a valid 9-digit number\")\n      .required(\"Routing Number is required\"),\n  }),\n  confirmRoutingNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .required(\"Confirm Routing Number is required\")\n      .oneOf([Yup.ref(\"routingNumber\"), null], \"Routing Numbers must match\"),\n  }),\n  accountNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Account Number is required\"),\n  }),\n  confirmAccountNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .required(\"Confirm Account Number is required\")\n      .oneOf([Yup.ref(\"accountNumber\"), null], \"Account Numbers must match\"),\n  }),\n  accountType: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Account Type is required\"),\n  }),\n  confirmAccountType: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .required(\"Confirm Account Type is required\")\n      .oneOf([Yup.ref(\"accountType\"), null], \"Account Types must match\"),\n  }),\n});\n\nconst BankDetails = ({ open, id, data, handleFetchData }) => {\n  const [isBankDetailsLoading, setIsBankDetailsLoading] = useState(false);\n\n  const initialValues = {\n    bankingType: data[\"bankingType\"],\n    bankName: data[\"bankName\"],\n    accountHolderName: data[\"accountHolderName\"],\n    ownership: data[\"ownership\"],\n    routingNumber: data[\"routingNumber\"],\n    confirmRoutingNumber: data[\"confirmRoutingNumber\"],\n    accountNumber: data[\"accountNumber\"],\n    confirmAccountNumber: data[\"confirmAccountNumber\"],\n    accountType: data[\"accountType\"],\n    confirmAccountType: data[\"confirmAccountType\"],\n  };\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Container maxWidth=\"lg\">\n        {isBankDetailsLoading ? (\n          <CircularProgress />\n        ) : (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              setIsBankDetailsLoading(true);\n              setSubmitting(true);\n              let payload = { ...values, id: id };\n              privateApiPOST(Api.bankDetails, payload)\n                .then((response) => {\n                  const { status, data } = response;\n                  if (status === 200) {\n                    console.log(\"data\", data);\n                    setIsBankDetailsLoading(false);\n                    handleFetchData();\n                    setSubmitting(false);\n                  }\n                })\n                .catch((error) => {\n                  console.log(\"Error\", error);\n                  setIsBankDetailsLoading(false);\n                  setSubmitting(false);\n                });\n            }}\n          >\n            {({ values, handleChange, errors, touched, handleBlur }) => (\n              <Form>\n                <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\n                  <Box\n                    width=\"98%\"\n                    align=\"left\"\n                    sx={{\n                      border: \"1px solid #000000\",\n                      padding: \"20px\",\n                      marginBottom: \"20px\",\n                      backgroundColor: \"#f7f7f7\",\n                    }}\n                  >\n                    <fieldset>\n                      <legend>Bank Details</legend>\n                      <br />\n                      <Typography\n                        color=\"brown\"\n                        variant=\"h4\"\n                        sx={{ marginTop: \"10px\" }}\n                      >\n                        <b>Important Note</b>\n                      </Typography>\n                      <Typography\n                        align=\"justify\"\n                        sx={{ marginTop: \"5px\", wordSpacing: \"3px\" }}\n                      >\n                        The IRS and certain State Revenue Departments facilitate\n                        DIRECT DEPOSIT / WITHDRAWAL of Tax Refund or Tax Dues on\n                        the Tax Returns. If you are interested in availing this\n                        option, we request you to kindly input the following\n                        details. You may also provide multiple bank accounts for\n                        IRS to direct deposit your Tax Refund in different\n                        accounts.\n                      </Typography>\n                      <br />\n                      <br />\n                    </fieldset>\n                  </Box>\n                  <Grid\n                    container\n                    sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}\n                  >\n                    <Grid\n                      item\n                      xs={10}\n                      sm={4}\n                      style={{ display: \"flex\", alignItems: \"center\" }}\n                    >\n                      <Typography variant=\"body1\">\n                        I prefer to receive my tax refunds by way of\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={2} sm={4}>\n                      <select\n                        id=\"bankingType\"\n                        name=\"bankingType\"\n                        value={values.bankingType}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        style={{ width: \"100%\" }}\n                      >\n                        <option value=\"\">Select Option</option>\n                        <option value=\"DIRECT DEPOSIT INTO MY BANK ACCOUNT\">\n                          Direct deposit into my bank account\n                        </option>\n                        <option value=\"PAPER CHECK\">Paper Check</option>\n                      </select>\n                      {touched.bankingType && errors.bankingType && (\n                        <div className=\"error\">{errors.bankingType}</div>\n                      )}\n                    </Grid>\n                    <Grid>\n                      {\" \"}\n                      <Typography\n                        variant=\"h5\"\n                        sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}\n                      >\n                        Bank Account Information\n                      </Typography>\n                      <Typography\n                        sx={{\n                          marginTop: \"30px\",\n                          marginLeft: \"15px\",\n                          color: \"#11a63d\",\n                        }}\n                      >\n                        Note: Please understand that there is no risk by\n                        entering Bank Account and Routing Numbers\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                {/* Additional Fields for Direct Deposit */}\n\n                <Grid>\n                  <Grid\n                    container\n                    spacing={2}\n                    sx={{\n                      border: \"1px solid #000000\",\n                      padding: \"20px\",\n                      marginBottom: \"20px\",\n                      backgroundColor: \"#C7DFF0\",\n                    }}\n                  >\n                    <Grid item lg={6} sm={6} xs={12}>\n                      <CustomInputTextField\n                        attribute=\"Bank Name\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"bankName\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.bankName}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(touched.bankName && errors.bankName)}\n                        helperText={touched.bankName && errors.bankName}\n                      />\n                      <CustomInputTextField\n                        attribute=\"Account Number\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"accountNumber\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.accountNumber}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.accountNumber && errors.accountNumber\n                        )}\n                        helperText={\n                          touched.accountNumber && errors.accountNumber\n                        }\n                      />\n\n                      <CustomInputTextField\n                        attribute=\"Routing Number\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"routingNumber\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.routingNumber}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.routingNumber && errors.routingNumber\n                        )}\n                        helperText={\n                          touched.routingNumber && errors.routingNumber\n                        }\n                      />\n                      <CustomInputTextField\n                        attribute=\"Account Type\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"accountType\"\n                        select\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.accountType}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.accountType && errors.accountType\n                        )}\n                        helperText={touched.accountType && errors.accountType}\n                      >\n                        <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                        <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                      </CustomInputTextField>\n                      <CustomInputTextField\n                        attribute=\"Ownership\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"ownership\"\n                        select\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.ownership}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(touched.ownership && errors.ownership)}\n                        helperText={touched.ownership && errors.ownership}\n                      >\n                        <MenuItem value=\"TAXPAYER/SPOUSE\">\n                          Tax Payer / Spouse\n                        </MenuItem>\n                        <MenuItem value=\"JOINT\">Joint</MenuItem>\n                      </CustomInputTextField>\n                    </Grid>\n                    <Grid item lg={6} sm={6} xs={12}>\n                      <CustomInputTextField\n                        attribute=\"Account Holder Name\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"accountHolderName\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.accountHolderName}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.accountHolderName && errors.accountHolderName\n                        )}\n                        helperText={\n                          touched.accountHolderName && errors.accountHolderName\n                        }\n                      />\n\n                      <CustomInputTextField\n                        attribute=\"Confirm Account Number\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"confirmAccountNumber\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.confirmAccountNumber}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.confirmAccountNumber &&\n                            errors.confirmAccountNumber\n                        )}\n                        helperText={\n                          touched.confirmAccountNumber &&\n                          errors.confirmAccountNumber\n                        }\n                      />\n                      <CustomInputTextField\n                        attribute=\"Confirm Routing Number\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"confirmRoutingNumber\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.confirmRoutingNumber}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.confirmRoutingNumber &&\n                            errors.confirmRoutingNumber\n                        )}\n                        helperText={\n                          touched.confirmRoutingNumber &&\n                          errors.confirmRoutingNumber\n                        }\n                      />\n                      <CustomInputTextField\n                        attribute=\"Confirm Account Type\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"confirmAccountType\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        select\n                        fullWidth\n                        value={values.confirmAccountType}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.confirmAccountType &&\n                            errors.confirmAccountType\n                        )}\n                        helperText={\n                          touched.confirmAccountType &&\n                          errors.confirmAccountType\n                        }\n                      >\n                        <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                        <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                      </CustomInputTextField>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    paddingBottom: { xs: \"20px\" },\n                    marginTop: { xs: \"20px\" },\n                  }}\n                >\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Save\n                  </Button>\n                </Box>\n              </Form>\n            )}\n          </Formik>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default BankDetails;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Box,\n  Link,\n  Avatar,\n  Typography,\n  Button,\n  Container,\n  Card,\n  CardContent,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  TextField,\n  Radio,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n  FormControl,\n  CircularProgress,\n} from \"@mui/material\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport { GetApp, CloudUpload, FilterAltOffSharp } from \"@mui/icons-material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport Api from \"../../../components/Api\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport CustomAlert from \"../../../components/CustomAlert\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: 600,\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: 400,\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  headerText: {\n    fontSize: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"32px\",\n    marginBottom: \"16px\",\n    color: \"#2069DB\",\n  },\n  confirmButton: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    lineHeight: \"19px\",\n    color: \"#FFFFFF\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n}));\n\nconst TaxReturns = ({ open }) => {\n  const customStyles = customTextStyles();\n  const params = useParams();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n  const role = useSelector((state) => state.app.role);\n  const [isLoading, setIsLoading] = useState(false);\n  const [state, setState] = useState({\n    isImport: false,\n    isImpoFormSubmitting: false,\n    selectedFile: {},\n    remarks: \"\",\n    isMyTaxDocsLoading: false,\n    myTaxDocs: [],\n  });\n\n  const handleDownloadFile = (file) => {\n    setIsLoading(true);\n\n    let payload = {\n      file_name: file,\n      id: params.id,\n      type: \"returns\",\n    };\n\n    privateApiPOST(Api.downloadTaxDocsFile, payload, { responseType: \"blob\" })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setIsLoading(false);\n          const url = window.URL.createObjectURL(new Blob([data]));\n          const anchor = document.createElement(\"a\");\n          anchor.href = url;\n          anchor.setAttribute(\"download\", file);\n          document.body.appendChild(anchor);\n          anchor.click();\n        } else {\n          setIsLoading(false);\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDownloadFile--->\", err);\n        setIsLoading(false);\n      });\n  };\n\n  const handleDeleteFile = (id, file) => {\n    setIsLoading(true);\n\n    let payload = {\n      file_id: id,\n      file_name: file,\n      id: params.id,\n      type: \"returns\",\n    };\n\n    privateApiPOST(Api.deleteTaxDocsFile, payload)\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setShowAlert({\n            isAlert: true,\n            severity: \"success\",\n            alertText: data?.[\"message\"],\n          });\n          setIsLoading(false);\n          handleFetchMyTaxDocs();\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDeleteFile--->\", err);\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n        setIsLoading(false);\n      });\n  };\n\n  //CLICK - Upload input file\n  const handleUploadClick = (e) => {\n    let file = e.target.files[0];\n    if (file) {\n      setState((prev) => ({\n        ...prev,\n        selectedFile: file,\n      }));\n    }\n  };\n\n  //SUBMIT - Import form\n  const handleUploadTaxDocs = () => {\n    if (!state.selectedFile.name) {\n      setShowAlert({\n        isAlert: true,\n        severity: \"warning\",\n        alertText: \"Please choose file to import\",\n      });\n      return;\n    }\n\n    setState((prev) => ({\n      ...prev,\n      isImpoFormSubmitting: true,\n    }));\n\n    const formData = new FormData();\n    formData.append(\"upload\", state.selectedFile);\n    formData.append(\"id\", params.id);\n    formData.append(\"type\", \"returns\");\n    formData.append(\"remarks\", state.remarks);\n\n    const token = sessionStorage.getItem(\"token\");\n    axios\n      .post(Api.uploadTaxDocs, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: `Token ${token}`,\n        },\n      })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setShowAlert({\n            isAlert: true,\n            severity: \"success\",\n            alertText: data?.[\"message\"],\n          });\n          setState((prev) => ({\n            ...prev,\n            selectedFile: {},\n            isImpoFormSubmitting: false,\n            isImport: false,\n            remarks: \"\",\n          }));\n          handleFetchMyTaxDocs();\n        }\n      })\n      .catch((error) => {\n        console.log(\"handleUploadTaxDocs--->\", error);\n        const { data } = error.response;\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n\n        setState((prev) => ({\n          ...prev,\n          selectedFile: {},\n          isImpoFormSubmitting: false,\n          isImport: false,\n          remarks: \"\",\n        }));\n      });\n  };\n\n  const handleFetchMyTaxDocs = () => {\n    setState((prev) => ({ ...prev, isMyTaxDocsLoading: true }));\n    let payload = { id: params.id, type: \"returns\" };\n    privateApiPOST(Api.uploadTaxDocs, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setState((prev) => ({\n            ...prev,\n            isMyTaxDocsLoading: false,\n            myTaxDocs: data?.data,\n          }));\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setState((prev) => ({ ...prev, isMyTaxDocsLoading: false }));\n      });\n  };\n\n  useEffect(() => {\n    if (open) {\n      handleFetchMyTaxDocs();\n    }\n  }, []);\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n      }}\n    >\n      {showAlert.isAlert && (\n        <CustomAlert\n          open={showAlert.isAlert}\n          severity={showAlert.severity}\n          alertTitle={showAlert.alertTitle}\n          alertText={showAlert.alertText}\n          onClose={() =>\n            setShowAlert({\n              isAlert: false,\n              alertTitle: \"\",\n              alertText: \"\",\n              severity: \"\",\n            })\n          }\n        />\n      )}\n      <Container maxWidth=\"lg\">\n        {role === \"ADMIN\" ? (\n          <Box\n            sx={{\n              // padding: \"20px 0 5px\",\n              // border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n              minHeight: { xs: \"auto\", sm: \"400px\" },\n            }}\n          >\n            <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\n              Attach Client Tax Returns:\n            </Typography>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                margin: \"20px 0\",\n              }}\n            >\n              <Typography sx={{ marginRight: \"24px\" }}>Upload File</Typography>\n              <Box sx={{ marginRight: \"20px\" }}>\n                <input\n                  required\n                  id=\"import-file-button\"\n                  type=\"file\"\n                  onChange={handleUploadClick}\n                  accept=\".xlsx\"\n                  style={{ opacity: 0, visibility: \"hidden\", width: \"1px\" }}\n                />\n                <label htmlFor=\"import-file-button\">\n                  <Button\n                    startIcon={<CloudUploadIcon />}\n                    component=\"span\"\n                    variant=\"contained\"\n                  >\n                    Choose File\n                  </Button>\n                </label>\n                <Typography sx={{ marginTop: \"8px\", fontStyle: \"italic\" }}>\n                  {state.selectedFile.name}\n                </Typography>\n              </Box>\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                margin: \"20px 0\",\n              }}\n            >\n              <Typography sx={{ marginRight: \"24px\" }}>Remarks</Typography>\n              <TextField\n                size=\"large\"\n                name=\"remarks\"\n                value={state.remarks}\n                onChange={(e) =>\n                  setState((prev) => ({ ...prev, remarks: e.target.value }))\n                }\n              />\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                margin: \"20px 0\",\n              }}\n            >\n              <Button\n                onClick={handleUploadTaxDocs}\n                sx={{ marginBottom: \"10px\" }}\n              >\n                Upload Tax Returns\n              </Button>\n            </Box>\n          </Box>\n        ) : null}\n        <Box\n          sx={{\n            minHeight: { xs: \"auto\", sm: role === \"ADMIN\" ? \"400px\" : \"800px\" },\n          }}\n        >\n          <TableContainer sx={{ marginTop: \"32px\" }}>\n            <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\n              Tax Return Document List:\n            </Typography>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n                marginTop: \"30px\",\n              }}\n              aria-label=\"Place Order Series Table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={customStyles.tableHeader}>ID</TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Document Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    uploaded on\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Remarks\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Actions\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {state.myTaxDocs.length > 0 &&\n                  state.myTaxDocs.map((row, index) => (\n                    <TableRow key={index}>\n                      <TableCell className={customStyles.tableData}>\n                        {row.id}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.upload_time}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.remarks}\n                      </TableCell>\n                      <TableCell className={customStyles.buttons}>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            justifyContent: \"space-between\",\n                          }}\n                        >\n                          <Button\n                            disabled={isLoading}\n                            startIcon={<GetApp />}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleDownloadFile(row.file_name);\n                            }}\n                          >\n                            Download{\" \"}\n                          </Button>\n                          <Button\n                            disabled={isLoading}\n                            startIcon={<DeleteIcon />}\n                            size=\"small\"\n                            onClick={() => {\n                              handleDeleteFile(row.id, row.file_name);\n                            }}\n                            sx={{\n                              display: role === \"ADMIN\" ? \"flex\" : \"none\",\n                            }}\n                          >\n                            Delete{\" \"}\n                          </Button>\n                        </Box>\n                      </TableCell>\n\n                      <TableCell className={customStyles.mobileView}>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            marginTop: \"16px\",\n                          }}\n                        >\n                          <Box sx={{ marginTop: \"3px\" }}>\n                            <Typography\n                              className={customStyles.mobileViewTableCellHeader}\n                            >\n                              File Name\n                            </Typography>\n\n                            <Typography\n                              className={customStyles.mobileViewTableCellValue}\n                            >\n                              {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\n                            </Typography>\n                          </Box>\n                          <Box sx={{ marginTop: \"3px\" }}>\n                            <Typography\n                              className={customStyles.mobileViewTableCellHeader}\n                            >\n                              Upload Time\n                            </Typography>\n\n                            <Typography\n                              className={customStyles.mobileViewTableCellValue}\n                            >\n                              {row.upload_time}\n                            </Typography>\n                          </Box>\n\n                          <Box sx={{ marginTop: \"3px\" }}>\n                            <Typography\n                              className={customStyles.mobileViewTableCellHeader}\n                            >\n                              Remarks\n                            </Typography>\n\n                            <Typography\n                              className={customStyles.mobileViewTableCellValue}\n                            >\n                              {row.remarks}\n                            </Typography>\n                          </Box>\n\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Button\n                              disabled={isLoading}\n                              startIcon={<GetApp />}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              onClick={() => {\n                                handleDownloadFile(row.file_name);\n                              }}\n                            >\n                              Download{\" \"}\n                              {isLoading && (\n                                <CircularProgress sx={{ ml: 1 }} size={14} />\n                              )}\n                            </Button>\n                            <Button\n                              disabled={isLoading}\n                              startIcon={<DeleteIcon />}\n                              size=\"small\"\n                              onClick={() => {\n                                handleDeleteFile(row.file_name);\n                              }}\n                              sx={{\n                                display: role === \"ADMIN\" ? \"flex\" : \"none\",\n                              }}\n                            >\n                              Delete{\" \"}\n                              {isLoading && (\n                                <CircularProgress sx={{ ml: 1 }} size={14} />\n                              )}\n                            </Button>\n                          </Box>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n            {state.myTaxDocs.length === 0 && (\n              <Typography\n                variant=\"h5\"\n                sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n              >\n                No TaxReturns Found\n              </Typography>\n            )}\n          </TableContainer>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default TaxReturns;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Box,\n  Button,\n  TextField,\n  Grid,\n  Typography,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  CircularProgress,\n  Container,\n  Paper,\n} from \"@mui/material\";\nimport { Card, CardContent, Link } from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport { GetApp, CloudUpload, FilterAltOffSharp } from \"@mui/icons-material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport Api from \"../../../components/Api\";\nimport CustomAlert from \"../../../components/CustomAlert\";\nimport axios from \"axios\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: 600,\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: 400,\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  headerText: {\n    fontSize: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"32px\",\n    marginBottom: \"16px\",\n    color: \"#2069DB\",\n  },\n  confirmButton: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    lineHeight: \"19px\",\n    color: \"#FFFFFF\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  alertCard: {\n    border: \"1px solid #000000\",\n    marginBottom: theme.spacing(2),\n  },\n  alertIcon: {\n    color: \"#EB3414\",\n    marginRight: theme.spacing(1),\n  },\n  root: {\n    color: \"#11a63d\",\n    fontSize: \"1.0rem\",\n    marginLeft: \"10px\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    color: \"primary\",\n  },\n  info: {\n    color: \"green\",\n    fontSize: \"1.5rem\",\n    border: \"1px solid #000000\",\n    marginTop: \"10px\",\n  },\n}));\n\nconst UploadTaxDocs = ({ open, id }) => {\n  const customStyles = customTextStyles();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [state, setState] = useState({\n    isImport: false,\n    isImpoFormSubmitting: false,\n    selectedFile: {},\n    isMyTaxDocsLoading: false,\n    myTaxDocs: [],\n  });\n\n  const handleDownloadFile = (file) => {\n    setIsLoading(true);\n\n    let payload = {\n      file_name: file,\n      id: id,\n      type: \"docs\",\n    };\n\n    privateApiPOST(Api.downloadTaxDocsFile, payload, { responseType: \"blob\" })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setIsLoading(false);\n          const url = window.URL.createObjectURL(new Blob([data]));\n          const anchor = document.createElement(\"a\");\n          anchor.href = url;\n          anchor.setAttribute(\"download\", file);\n          document.body.appendChild(anchor);\n          anchor.click();\n        } else {\n          setIsLoading(false);\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDownloadFile--->\", err);\n        setIsLoading(false);\n      });\n  };\n\n  const handleDeleteFile = (file) => {\n    setIsLoading(true);\n\n    let payload = {\n      file_name: file,\n      id: id,\n      type: \"docs\",\n    };\n\n    privateApiPOST(Api.deleteTaxDocsFile, payload)\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setShowAlert({\n            isAlert: true,\n            severity: \"success\",\n            alertText: data?.[\"message\"],\n          });\n          setIsLoading(false);\n          handleFetchMyTaxDocs();\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDeleteFile--->\", err);\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n        setIsLoading(false);\n      });\n  };\n\n  //CLICK - Upload input file\n  const handleUploadClick = (e) => {\n    let file = e.target.files[0];\n    if (file) {\n      setState((prev) => ({\n        ...prev,\n        selectedFile: file,\n      }));\n    }\n  };\n\n  //SUBMIT - Import form\n  const handleUploadTaxDocs = () => {\n    if (!state.selectedFile.name) {\n      setShowAlert({\n        isAlert: true,\n        severity: \"warning\",\n        alertText: \"Please choose file to import\",\n      });\n      return;\n    }\n\n    setState((prev) => ({\n      ...prev,\n      isImpoFormSubmitting: true,\n    }));\n\n    const formData = new FormData();\n    formData.append(\"upload\", state.selectedFile);\n    formData.append(\"id\", id);\n    formData.append(\"type\", \"docs\");\n\n    const token = sessionStorage.getItem(\"token\");\n    axios\n      .post(Api.uploadTaxDocs, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: `Token ${token}`,\n        },\n      })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setShowAlert({\n            isAlert: true,\n            severity: \"success\",\n            alertText: data?.[\"message\"],\n          });\n          setState((prev) => ({\n            ...prev,\n            selectedFile: {},\n            isImpoFormSubmitting: false,\n            isImport: false,\n          }));\n          handleFetchMyTaxDocs();\n        }\n      })\n      .catch((error) => {\n        console.log(\"handleUploadTaxDocs--->\", error);\n        const { data } = error.response;\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n\n        setState((prev) => ({\n          ...prev,\n          selectedFile: {},\n          isImpoFormSubmitting: false,\n          isImport: false,\n        }));\n      });\n  };\n\n  const handleFetchMyTaxDocs = () => {\n    setState((prev) => ({ ...prev, isMyTaxDocsLoading: true }));\n    let payload = { id: id, type: \"docs\" };\n    privateApiPOST(Api.uploadTaxDocs, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setState((prev) => ({\n            ...prev,\n            isMyTaxDocsLoading: false,\n            myTaxDocs: data?.data,\n          }));\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setState((prev) => ({ ...prev, isMyTaxDocsLoading: false }));\n      });\n  };\n\n  useEffect(() => {\n    if (open) {\n      handleFetchMyTaxDocs();\n    }\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Container maxWidth=\"lg\">\n        {showAlert.isAlert && (\n          <CustomAlert\n            open={showAlert.isAlert}\n            severity={showAlert.severity}\n            alertTitle={showAlert.alertTitle}\n            alertText={showAlert.alertText}\n            onClose={() =>\n              setShowAlert({\n                isAlert: false,\n                alertTitle: \"\",\n                alertText: \"\",\n                severity: \"\",\n              })\n            }\n          />\n        )}\n        <Card className={customStyles.alertCard}>\n          <CardContent>\n            <Typography sx={{ marginBottom: \"10px\", color: \"#11a63d\" }}>\n              Alerts\n            </Typography>\n            <Typography variant=\"body2\">\n              <span className={customStyles.alertIcon}>!&nbsp;</span>\n              Information / Documents submitted here will be secured.\n            </Typography>\n            <br />\n            <Typography variant=\"body2\">\n              <span className={customStyles.alertIcon}>!&nbsp;</span>\n              Please contact our Team if any issues in uploading documents\n            </Typography>\n          </CardContent>\n        </Card>\n\n        <Typography className={customStyles.root}>\n          If needed, use the following links to download the required documents:\n          <br />\n          <Link\n            href=\"/static/img/1099_NEC_Expenses_Tax_Information.xlsx\"\n            className={customStyles.link}\n          >\n            1099 NEC Expenses Tax Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/City_Tax_Return_Information.xlsx\"\n            className={customStyles.link}\n          >\n            City Tax Return Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/Crypto_Information.xls\"\n            className={customStyles.link}\n          >\n            Crypto Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/FBAR_Information_2022.xls\"\n            className={customStyles.link}\n          >\n            FBAR Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/ITIN_Information.xls\"\n            className={customStyles.link}\n          >\n            ITN Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/Rental_Property_Details.xls\"\n            className={customStyles.link}\n          >\n            Rental Property Details\n          </Link>\n          <br />\n          After downloading, please fill/complete these documents and upload\n          them in the attachment section.\n        </Typography>\n        <Paper elevation={3} className={customStyles.info}>\n          <Table width=\"100%\">\n            <TableBody>\n              <TableRow valign=\"top\">\n                <TableCell align=\"left\" width=\"20%\">\n                  Addition Information\n                </TableCell>\n                <TableCell width=\"5%\"> - </TableCell>\n                <TableCell align=\"left\" width=\"75%\">\n                  If you want to provide any additional information to your Tax\n                  Consultant, please discuss during the Tax Interview.\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Paper>\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          sx={{ marginTop: { xs: \"20px\" } }}\n        >\n          <Box sx={{ marginRight: \"20px\" }}>\n            <input\n              required\n              id=\"import-file-button\"\n              type=\"file\"\n              onChange={handleUploadClick}\n              accept=\".xlsx\"\n              style={{ opacity: 0, visibility: \"hidden\", width: \"1px\" }}\n            />\n            <label htmlFor=\"import-file-button\">\n              <Button\n                startIcon={<CloudUploadIcon />}\n                component=\"span\"\n                variant=\"contained\"\n              >\n                Choose File\n              </Button>\n            </label>\n            <Typography sx={{ marginTop: \"8px\", fontStyle: \"italic\" }}>\n              {state.selectedFile.name}\n            </Typography>\n          </Box>\n          <Button onClick={handleUploadTaxDocs} sx={{ marginBottom: \"10px\" }}>\n            Upload\n          </Button>\n        </Box>\n        <Box>\n          {state.isMyTaxDocsLoading ? (\n            <CircularProgress />\n          ) : (\n            <TableContainer sx={{ marginTop: \"32px\" }}>\n              <Table\n                sx={{\n                  borderCollapse: \"collapse\",\n                }}\n                aria-label=\"Place Order Series Table\"\n              >\n                <TableHead>\n                  <TableRow>\n                    <TableCell className={customStyles.tableHeader}>\n                      File Name\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      Upload Time\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      File Size\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      Actions\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {state.myTaxDocs.length > 0 &&\n                    state.myTaxDocs.map((row, index) => (\n                      <TableRow key={index}>\n                        <TableCell className={customStyles.tableData}>\n                          {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          {row.upload_time}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          {row.file_size}\n                        </TableCell>\n                        <TableCell className={customStyles.buttons}>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"nowrap\",\n                              justifyContent: \"space-between\",\n                            }}\n                          >\n                            <Button\n                              disabled={isLoading}\n                              startIcon={<GetApp />}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              onClick={() => {\n                                handleDownloadFile(row.file_name);\n                              }}\n                            >\n                              Download{\" \"}\n                              {isLoading && (\n                                <CircularProgress sx={{ ml: 1 }} size={14} />\n                              )}\n                            </Button>\n                            <Button\n                              disabled={isLoading}\n                              startIcon={<DeleteIcon />}\n                              size=\"small\"\n                              onClick={() => {\n                                handleDeleteFile(row.file_name);\n                              }}\n                            >\n                              Delete{\" \"}\n                              {isLoading && (\n                                <CircularProgress sx={{ ml: 1 }} size={14} />\n                              )}\n                            </Button>\n                          </Box>\n                        </TableCell>\n\n                        <TableCell className={customStyles.mobileView}>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                File Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Upload Time\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.upload_time}\n                              </Typography>\n                            </Box>\n\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                File Size\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.file_size}\n                              </Typography>\n                            </Box>\n\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                                justifyContent: \"space-between\",\n                                marginTop: \"16px\",\n                              }}\n                            >\n                              <Button\n                                disabled={isLoading}\n                                startIcon={<GetApp />}\n                                size=\"small\"\n                                variant=\"outlined\"\n                                onClick={() => {\n                                  handleDownloadFile(row.file_name);\n                                }}\n                              >\n                                Download{\" \"}\n                                {isLoading && (\n                                  <CircularProgress sx={{ ml: 1 }} size={14} />\n                                )}\n                              </Button>\n                              <Button\n                                disabled={isLoading}\n                                startIcon={<DeleteIcon />}\n                                size=\"small\"\n                                onClick={() => {\n                                  handleDeleteFile(row.file_name);\n                                }}\n                              >\n                                Delete{\" \"}\n                                {isLoading && (\n                                  <CircularProgress sx={{ ml: 1 }} size={14} />\n                                )}\n                              </Button>\n                            </Box>\n                          </Box>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n              {state.myTaxDocs.length === 0 && (\n                <Typography\n                  variant=\"h5\"\n                  sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n                >\n                  No TaxDocs Found\n                </Typography>\n              )}\n            </TableContainer>\n          )}\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default UploadTaxDocs;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport config from \"../../config\";\n// Material UI\nimport { Grid, Box, Avatar, Typography, Tabs, Tab } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport FilerDeatils from \"./Forms/filerDeatils\";\nimport IncomeDetails from \"./Forms/incomeDetails\";\nimport BankDetails from \"./Forms/bankDetails\";\nimport TaxReturns from \"./Forms/taxReturns\";\nimport UploadTaxDocs from \"./Forms/TaxDocs\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst TabsDesktop = ({ data, handleFetchData, handleDownloadTemplate }) => {\n  const params = useParams();\n  const customTextClasses = customTextStyles();\n  const [value, setValue] = useState(parseInt(params.action));\n\n  console.log(params.action);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function CustomTabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box>{children}</Box>}\n      </div>\n    );\n  }\n\n  CustomTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        marginBottom: \"64px\",\n      }}\n    >\n      <Box\n        sx={{\n          borderBottom: 1,\n          borderColor: \"divider\",\n          margin: \"8px\",\n        }}\n      >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"basic tabs example\"\n        >\n          <Tab\n            label=\"Filer Details\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(0)}\n          />\n          <Tab\n            label=\"Income Details\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(1)}\n          />\n          <Tab\n            label=\"Bank Details\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(2)}\n          />\n          <Tab\n            label=\"Upload Tax Docs\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(3)}\n          />\n          <Tab\n            label=\"Tax Returns\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(3)}\n          />\n        </Tabs>\n      </Box>\n\n      <CustomTabPanel value={value} index={0}>\n        <FilerDeatils\n          open={value === 0}\n          id={data[\"id\"]}\n          personalDetails={data[\"personalDetails\"]}\n          contactDetails={data[\"contactDetails\"]}\n          spouseDetails={data[\"spouseDetails\"]}\n          incomeDetails={data[\"incomeDetails\"]}\n          providedLivingSupport={data[\"providedLivingSupport\"]}\n          handleFetchData={handleFetchData}\n          handleDownloadTemplate={handleDownloadTemplate}\n        />\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={1}>\n        <IncomeDetails\n          open={value === 1}\n          id={data[\"id\"]}\n          data={data[\"incomeDetails\"]}\n          handleFetchData={handleFetchData}\n          handleDownloadTemplate={handleDownloadTemplate}\n        />\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={2}>\n        <BankDetails\n          open={value === 2}\n          id={data[\"id\"]}\n          data={data[\"bankDetails\"]}\n          handleFetchData={handleFetchData}\n        />\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={3}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Box>\n              <UploadTaxDocs open={value === 3} id={data[\"id\"]} />\n            </Box>\n          </Grid>\n        </Grid>\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={4}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Box>\n              <TaxReturns open={value === 4} id={data[\"id\"]} />\n            </Box>\n          </Grid>\n        </Grid>\n      </CustomTabPanel>\n    </Box>\n  );\n};\nexport default TabsDesktop;\n","import React, { useEffect, useState } from \"react\";\nimport Page from \"../../../components/Page\";\nimport {\n  Grid,\n  Container,\n  Box,\n  CircularProgress,\n  Typography,\n} from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport TabsDesktop from \"../TabsDesktop\";\nimport { makeStyles } from \"@mui/styles\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tabButton: {\n    display: \"block\",\n    width: \"100%\",\n    paddingLeft: \"15px\",\n    textAlign: \"left\",\n    fontWeight: \"500\",\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n  },\n}));\n\nconst AdminTaxFillingPage = () => {\n  const params = useParams();\n  const customStyles = customTextStyles();\n  const [data, setData] = useState({});\n  const [isLoadingSpin, setIsLoadingSpin] = useState(true);\n\n  const handleFetchTaxFilingDetails = () => {\n    setIsLoadingSpin(true);\n    let payload = { id: params.id };\n    privateApiPOST(Api.taxFiling, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setData(data?.data);\n          setIsLoadingSpin(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsLoadingSpin(false);\n      });\n  };\n\n  const handleDownloadTemplate = (file) => {\n    let payload = {\n      file_name: file,\n    };\n\n    privateApiPOST(Api.templateDownload, payload, { responseType: \"blob\" })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          const url = window.URL.createObjectURL(new Blob([data]));\n          const anchor = document.createElement(\"a\");\n          anchor.href = url;\n          anchor.setAttribute(\"download\", file);\n          document.body.appendChild(anchor);\n          anchor.click();\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDownloadFile--->\", err);\n      });\n  };\n\n  useEffect(() => {\n    handleFetchTaxFilingDetails();\n  }, []);\n\n  return (\n    <Page title={\"Tax Filing\"}>\n      <Box>\n        <Container maxWidth=\"lg\">\n          <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n            {isLoadingSpin ? (\n              <Box\n                display=\"flex\"\n                height=\"100%\"\n                width=\"100%\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                sx={{\n                  position: \"absolute\",\n                  zIndex: \"10\",\n                  left: 0,\n                  top: \"60%\",\n                }}\n              >\n                <CircularProgress size={30} />\n              </Box>\n            ) : data ? (\n              <Box\n                sx={{\n                  backgroundColor: \"rgba(255,255,255,1)\",\n                  boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\",\n                  borderRadius: \"4px\",\n                  padding: \"20px 10px\",\n                  height: \"800px\", // Adjust the height as needed\n                  overflow: \"auto\", // Add overflow to enable scrolling\n                  maxHeight: \"800px\", // Add a maximum height to prevent content from overflowing\n                }}\n              >\n                <PerfectScrollbar>\n                  <Typography\n                    variant=\"h3\"\n                    sx={{\n                      marginLeft: \"20px\",\n                    }}\n                  >\n                    Tax-Filing For Year - {params.year}\n                  </Typography>\n\n                  <TabsDesktop\n                    data={data}\n                    handleFetchData={handleFetchTaxFilingDetails}\n                    handleDownloadTemplate={handleDownloadTemplate}\n                  />\n                </PerfectScrollbar>\n              </Box>\n            ) : null}\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default AdminTaxFillingPage;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  Box,\n  Grid,\n  TextField,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  MenuItem,\n  CircularProgress,\n  Chip,\n  IconButton,\n  Avatar,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport CustomAlert from \"../../../components/CustomAlert\";\n\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport { makeStyles } from \"@mui/styles\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\nimport { thousands_separators } from \"../../../utils/index\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: 600,\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: 400,\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    marginBottom: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst PickAppointment = ({ open, id }) => {\n  const customStyles = customTextStyles();\n  const [isPickAppointmentDetailsLoading, setIsPickAppointmentDetailsLoading] =\n    useState(false);\n  const state = useSelector((state) => state.app);\n\n  const [appointmentData, setAppointmentData] = useState({\n    date: \"\",\n    time: \"23:00\",\n    timezone: \"America/Chicago\",\n  });\n  const [appointmentDetails, setAppointmentDetails] = useState([]);\n\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  const handleDateChange = (event) => {\n    setAppointmentData({\n      ...appointmentData,\n      date: event.target.value,\n    });\n  };\n\n  const handleTimeChange = (event) => {\n    setAppointmentData({\n      ...appointmentData,\n      time: event.target.value,\n    });\n  };\n\n  const handleTimezoneChange = (event) => {\n    setAppointmentData({\n      ...appointmentData,\n      timezone: event.target.value,\n    });\n  };\n\n  const handleCancelAppointment = (appointmentId) => {\n    setIsPickAppointmentDetailsLoading(true);\n    let payload = { id: id, appointmentId: appointmentId };\n    privateApiPOST(Api.deleteAppointment, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setShowAlert({\n            isAlert: true,\n            alertText: \"Appointment Cancelled Successfully\",\n            severity: \"success\",\n          });\n        }\n        setIsPickAppointmentDetailsLoading(false);\n        handleFetchAppointmentDetails();\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n        setIsPickAppointmentDetailsLoading(false);\n      });\n  };\n\n  const handleFetchAppointmentDetails = () => {\n    setIsPickAppointmentDetailsLoading(true);\n    let payload = { id: id };\n    privateApiPOST(Api.appointmentDetails, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setIsPickAppointmentDetailsLoading(false);\n          setAppointmentDetails(data?.data);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        if (error.response.status === 400 || error.response.status === 401) {\n          setShowAlert({\n            isAlert: true,\n            alertText: error.response.data?.message,\n            severity: \"error\",\n            alertTitle: \"Error\",\n          });\n        } else {\n          setShowAlert({\n            isAlert: true,\n            alertText: \"Something went wrong\",\n            severity: \"error\",\n            alertTitle: \"Error\",\n          });\n        }\n        setIsPickAppointmentDetailsLoading(false);\n      });\n  };\n  const handleFetchAppointmentChange = (payload) => {\n    setIsPickAppointmentDetailsLoading(true);\n\n    privateApiPOST(Api.bookAppointment, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          if (status === 200) {\n            console.log(\"data\", data?.data);\n            setShowAlert({\n              isAlert: true,\n              alertText: data?.message,\n              severity: \"success\",\n            });\n          }\n          setAppointmentData({\n            date: \"\",\n            time: \"23:00\",\n            timezone: \"America/Chicago\",\n          });\n          handleFetchAppointmentDetails();\n        }\n        setIsPickAppointmentDetailsLoading(false);\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        if (error.response.status === 400 || error.response.status === 401) {\n          setShowAlert({\n            isAlert: true,\n            alertText: error.response.data?.message,\n            severity: \"error\",\n            alertTitle: \"Error\",\n          });\n        } else {\n          setShowAlert({\n            isAlert: true,\n            alertText: \"Something went wrong\",\n            severity: \"error\",\n            alertTitle: \"Error\",\n          });\n        }\n        setIsPickAppointmentDetailsLoading(false);\n      });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let payload = { ...appointmentData, id: id };\n    handleFetchAppointmentChange(payload);\n  };\n\n  const showMsg = () => {\n    // Add your showMsg function logic here\n  };\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\") && open) {\n      handleFetchAppointmentDetails();\n    }\n  }, []);\n\n  const generateTimeOptions = () => {\n    const timeOptions = [];\n    for (let hours = 11; hours <= 23; hours++) {\n      for (let minutes = 0; minutes < 60; minutes += 30) {\n        const hourStr = String(hours).padStart(2, \"0\");\n        const minuteStr = String(minutes).padStart(2, \"0\");\n        const timeOption = `${hourStr}:${minuteStr}`;\n        timeOptions.push(timeOption);\n      }\n    }\n    return timeOptions;\n  };\n\n  const timeOptions = generateTimeOptions();\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {showAlert.isAlert ? (\n        <CustomAlert\n          open={showAlert.isAlert}\n          severity={showAlert.severity}\n          alertTitle={showAlert.alertTitle}\n          alertText={showAlert.alertText}\n          onClose={() =>\n            setShowAlert({\n              isAlert: false,\n              alertTitle: \"\",\n              alertText: \"\",\n              severity: \"\",\n            })\n          }\n        />\n      ) : null}\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h5\">\n          Tax Notes Interview - Schedule your date:\n        </Typography>\n        <Box\n          sx={{\n            display: { xs: \"block\", sm: \"flex\" },\n            flexWrap: \"wrap\",\n            justifyContent: \"space-around\",\n            marginTop: \"30px\",\n          }}\n        >\n          <Box sx={{ width: { xs: \"100%\", sm: \"35%\" } }}>\n            <CustomInputTextField\n              attributeMarginTop=\"12px\"\n              attribute=\"Client Name\"\n              is_required={false}\n              fullWidth\n              // label=\"Name\"\n              name=\"name\"\n              value={`${state.first_name} ${state.last_name}`}\n              variant=\"outlined\"\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Box>\n\n          <Box sx={{ width: { xs: \"100%\", sm: \"35%\" } }}>\n            <CustomInputTextField\n              attributeMarginTop=\"12px\"\n              attribute={\"Phone Number\"}\n              is_required={false}\n              fullWidth\n              // label=\"Phone Number\"\n              name=\"phone_no\"\n              value={state ? state.phone_no : \"\"}\n              variant=\"outlined\"\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Box>\n        </Box>\n        <Typography variant=\"body1\" color=\"#11a63d\" sx={{ marginTop: \"30px\" }}>\n          Become a confirmed client by making an advance fee payment. Same day\n          tax filing available for Confirmed Clients.\n        </Typography>\n        <br />\n        <Typography variant=\"body1\" color=\"green\" sx={{ marginTop: \"10px\" }}>\n          How to become a Confirmed Client?&nbsp;&nbsp;&nbsp;\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={showMsg}\n            sx={{ marginTop: { xs: \"10px\" } }}\n          >\n            CLICK HERE\n          </Button>\n        </Typography>\n\n        <Typography variant=\"body1\" color=\"#11a63d\" sx={{ marginTop: \"30px\" }}>\n          {`We will call you anytime between 11.00 AM CST to 11.30 PM CST on your appointment date.`}\n        </Typography>\n        <Typography variant=\"body1\" color=\"#11a63d\" sx={{ marginLeft: \"10px\" }}>\n          {`- We try to match your preferred time. Unfortunately, it is not a guaranteed time.`}\n        </Typography>\n        <Typography variant=\"body1\" color=\"#11a63d\" sx={{ marginLeft: \"10px\" }}>\n          {`- We try to match your preferred time. Unfortunately, it is not a guaranteed time.`}\n        </Typography>\n        <Typography variant=\"body1\" color=\"#11a63d\" sx={{ marginTop: \"30px\" }}>\n          Please pick your availability between{\" \"}\n          <Typography variant=\"body1\" color=\"primary\" component=\"span\">\n            01/11/2023 to 04/18/2023\n          </Typography>\n        </Typography>\n        <form autoComplete=\"off\" onSubmit={handleSubmit}>\n          <Box\n            sx={{\n              display: { xs: \"block\", sm: \"flex\" },\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n              marginTop: \"30px\",\n            }}\n          >\n            <Box sx={{ width: { xs: \"100%\", sm: \"30%\" } }}>\n              <CustomInputTextField\n                attributeMarginTop=\"12px\"\n                attribute=\"Date\"\n                is_required={false}\n                type=\"date\"\n                value={appointmentData.date}\n                onChange={handleDateChange}\n                fullWidth\n                required\n              />\n            </Box>\n            <Box sx={{ width: { xs: \"100%\", sm: \"40%\" } }}>\n              <CustomInputTextField\n                attributeMarginTop=\"12px\"\n                attribute=\"Preferrable Time\"\n                is_required={false}\n                select\n                // label=\"Time\"\n                value={appointmentData.time}\n                onChange={handleTimeChange}\n                variant=\"outlined\"\n                fullWidth\n                required\n              >\n                {timeOptions.map((option) => (\n                  <MenuItem key={option} value={option}>\n                    {option}\n                  </MenuItem>\n                ))}\n              </CustomInputTextField>\n            </Box>\n            <Box sx={{ width: { xs: \"100%\", sm: \"30%\" } }}>\n              <CustomInputTextField\n                attributeMarginTop=\"12px\"\n                attribute=\"Time Zone\"\n                is_required={false}\n                select\n                value={appointmentData.timezone}\n                onChange={handleTimezoneChange}\n                fullWidth\n                required\n              >\n                <MenuItem value=\"America/Chicago\">CST</MenuItem>\n                <MenuItem value=\"EST\">EST</MenuItem>\n                {/* Add more time zones as needed */}\n              </CustomInputTextField>\n            </Box>\n          </Box>\n          <Typography\n            variant=\"body1\"\n            color=\"#11a63d\"\n            sx={{ marginTop: \"30px\" }}\n          >\n            Maximum number of appointments you can have is \"ONE\". If you already\n            have an appointment delete it before scheduling new appointment\n          </Typography>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={showMsg}\n            sx={{ display: \"block\", margin: \"0 auto\", marginTop: \"20px\" }}\n          >\n            SUBMIT\n          </Button>\n        </form>\n        <Box>\n          {isPickAppointmentDetailsLoading ? (\n            <CircularProgress />\n          ) : (\n            <TableContainer\n              sx={{\n                marginTop: \"32px\",\n                paddingBottom: { xs: \"10px\", sm: \"0px\" },\n              }}\n            >\n              <Table\n                sx={{\n                  borderCollapse: \"collapse\",\n                }}\n                aria-label=\"Place Order Series Table\"\n              >\n                <TableHead>\n                  <TableRow>\n                    <TableCell className={customStyles.tableHeader}>\n                      Date\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      Start Time\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      End Time\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      Status\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {appointmentDetails.length > 0 &&\n                    appointmentDetails.map((row, index) => (\n                      <TableRow key={index}>\n                        <TableCell className={customStyles.tableData}>\n                          {row.date}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          {row.start_time}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          {row.end_time}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              marginTop: \"8px\",\n                              alignItems: \"center\",\n                              marginBottom: {\n                                xs: row.status !== \"BOOKED\" ? \"14px\" : 0,\n                                sm: 0,\n                              },\n                            }}\n                          >\n                            <Chip\n                              label={row[\"status\"]}\n                              size=\"small\"\n                              color={\n                                row.status === \"BOOKED\"\n                                  ? \"info\"\n                                  : row.status === \"CANCELLED\"\n                                  ? \"error\"\n                                  : \"success\"\n                              }\n                            />\n\n                            <IconButton\n                              disabled={isPickAppointmentDetailsLoading}\n                              sx={{\n                                height: \"40px\",\n                                width: \"40px\",\n                                visibility:\n                                  row.status === \"BOOKED\"\n                                    ? \"visible\"\n                                    : \"hidden\",\n                                onCursor: \"pointer\",\n                                display: { xs: \"none\", sm: \"flex\" },\n                              }}\n                              onClick={() => handleCancelAppointment(row.id)}\n                            >\n                              <Avatar\n                                alt=\"delete\"\n                                src=\"/static/img/deleteIcon.svg\"\n                                sx={{ height: \"24px\", width: \"24px\" }}\n                              />\n                            </IconButton>\n                          </Box>\n                        </TableCell>\n\n                        <TableCell className={customStyles.mobileView}>\n                          <Box>\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                                justifyContent: \"space-between\",\n                                marginTop: \"16px\",\n                              }}\n                            >\n                              <Box sx={{ marginTop: \"3px\" }}>\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellHeader\n                                  }\n                                >\n                                  Date\n                                </Typography>\n\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellValue\n                                  }\n                                >\n                                  {row.date}\n                                </Typography>\n                              </Box>\n                              <Box sx={{ marginTop: \"3px\" }}>\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellHeader\n                                  }\n                                >\n                                  Status\n                                </Typography>\n\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellValue\n                                  }\n                                >\n                                  {row.status}\n                                </Typography>\n                              </Box>\n                              <Box sx={{ marginTop: \"3px\" }}>\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellHeader\n                                  }\n                                >\n                                  Start Time\n                                </Typography>\n\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellValue\n                                  }\n                                >\n                                  {row.start_time}\n                                </Typography>\n                              </Box>\n                            </Box>\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                                justifyContent: \"space-between\",\n                                marginTop: \"16px\",\n                              }}\n                            >\n                              <Box sx={{ marginTop: \"3px\" }}>\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellHeader\n                                  }\n                                >\n                                  End Time\n                                </Typography>\n\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellValue\n                                  }\n                                >\n                                  {row.end_time}\n                                </Typography>\n                              </Box>\n                              <Box\n                              // sx={{\n                              //   display: \"flex\",\n                              //   justifyContent: \"center\", // Center the button horizontally\n                              //   alignItems: \"center\",\n                              // }}\n                              >\n                                <Button\n                                  disabled={isPickAppointmentDetailsLoading}\n                                  startIcon={<DeleteIcon />}\n                                  size=\"small\"\n                                  onClick={() => {\n                                    handleCancelAppointment(row.id);\n                                  }}\n                                  sx={{\n                                    visibility:\n                                      row.status === \"BOOKED\"\n                                        ? \"visible\"\n                                        : \"hidden\",\n                                  }}\n                                >\n                                  Delete{\" \"}\n                                  {isPickAppointmentDetailsLoading && (\n                                    <CircularProgress\n                                      sx={{ ml: 1 }}\n                                      size={14}\n                                    />\n                                  )}\n                                </Button>\n                              </Box>\n                            </Box>\n                          </Box>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n              {appointmentDetails.length === 0 && (\n                <Typography\n                  variant=\"h5\"\n                  sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n                >\n                  No Appointments Found\n                </Typography>\n              )}\n            </TableContainer>\n          )}\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default PickAppointment;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  Container,\n} from \"@mui/material\";\n\nconst PayPalPayment = () => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid spacing={2} container justifyContent=\"center\" alignItems=\"center\">\n        <Grid item xs={12} sm={7}>\n          <Box\n            id=\"ppdiv\"\n            name=\"ppdiv\"\n            sx={{\n              fontSize: 12,\n              fontFamily: \"Verdana\",\n              display: \"block\",\n              p: \"20px\", // Padding\n              border: \"1px solid grey\", // Border style\n            }}\n          >\n            <Typography\n              variant=\"body1\"\n              color=\"#11a63d\"\n              sx={{ marginBottom: \"20px\" }}\n            >\n              P.S: If you choose this Payment option (PayPal), your tax filing\n              fee includes a 3% service charge.\n            </Typography>\n            <Typography variant=\"body1\" sx={{ marginBottom: \"20px\" }}>\n              <span id=\"scsppt\">\n                Your Service Fee amount (including 3% service charge)\n              </span>\n            </Typography>\n            <Typography variant=\"body1\" sx={{ marginBottom: \"20px\" }}>\n              If your payment is successful, you'll receive an automatic email\n              confirmation from \"PayPal.\"\n            </Typography>\n            <form\n              autoComplete=\"off\"\n              onSubmit={handleSubmit}\n              // action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\"\n            >\n              <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n              <input type=\"hidden\" name=\"business\" value=\"4KKFRTPBL3E8E\" />\n              <input type=\"hidden\" name=\"lc\" value=\"US\" />\n              <input\n                type=\"hidden\"\n                name=\"item_name\"\n                value=\"Tax Consultation Fee\"\n              />\n              <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n              <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n              <input type=\"hidden\" name=\"no_note\" value=\"0\" />\n              <input\n                type=\"hidden\"\n                name=\"cn\"\n                value=\"Add special instructions to the seller:\"\n              />\n              <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n              <input type=\"hidden\" name=\"rm\" value=\"1\" />\n              <input\n                type=\"hidden\"\n                name=\"return\"\n                value=\"https://www.taxcooler.com/payment_sucess\"\n              />\n              <input\n                type=\"hidden\"\n                name=\"bn\"\n                value=\"PP-BuyNowBF:btn_paynowCC_LG.gif:NonHosted\"\n              />\n              <TextField\n                label=\"Enter amount Here\"\n                type=\"text\"\n                id=\"pp_amount\"\n                name=\"amount\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{\n                  mt: \"20px\",\n                  width: \"50%\",\n                  display: \"block\",\n                  ml: { xs: \"20px\", sm: \"0px\" },\n                }} // Adjust the margin-top as needed\n              />\n              <Button type=\"submit\">\n                <img\n                  src=\"https://www.paypalobjects.com/en_US/i/btn/btn_paynowCC_LG.gif\"\n                  border=\"0\"\n                  name=\"submit\"\n                  alt=\"PayPal - The safer, easier way to pay online!\"\n                />\n              </Button>\n              <img\n                alt=\"\"\n                border=\"0\"\n                src=\"https://www.paypalobjects.com/en_US/i/scr/pixel.gif\"\n                width=\"1\"\n                height=\"1\"\n              />\n            </form>\n            <Typography color=\"#11a63d\">\n              We will send your tax filing copies with instructions with in 2\n              business days.\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default PayPalPayment;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  MenuItem,\n  Button,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  CircularProgress,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { statesNames, countryCode } from \"../../../constants\";\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\nimport { CustomLabel } from \"./filerDeatils\";\n\nconst useStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    marginBottom: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst ConfirmDetails = ({\n  open,\n  id,\n  personalDetails,\n  contactDetails,\n  spouseDetails,\n  incomeDetails,\n  providedLivingSupport,\n  bankDetails,\n  handlePickAppointment,\n  dependantDetails,\n}) => {\n  const customStyles = useStyles();\n  const stateOptions = statesNames;\n  const countryCodes = countryCode;\n\n  const transform = (input) => {\n    if (input === undefined || input === null) {\n      return \"\";\n    }\n\n    if (input.includes(\"-\")) {\n      return input;\n    }\n\n    const rawSsn = input.replace(/-/g, \"\"); // Remove hyphens\n    const formattedSsn = rawSsn\n      .replace(/\\D/g, \"\") // Remove non-digits\n      .replace(/(\\d{3})(\\d{3})(\\d{3})/, \"$1-$2-$3\"); // Format as 123-45-6789\n    return formattedSsn;\n  };\n\n  const [formData, setFormData] = useState({\n    // Personal Details\n\n    firstName: personalDetails[\"firstName\"],\n    middleName: personalDetails[\"middleName\"],\n    lastName: personalDetails[\"lastName\"],\n    ssn: personalDetails[\"ssn\"],\n    dateOfBirth: personalDetails[\"dateOfBirth\"],\n    gender: personalDetails[\"gender\"],\n    occupation: personalDetails[\"occupation\"],\n    residentialStatus: personalDetails[\"residentialStatus\"],\n    email: personalDetails[\"email\"],\n\n    // Contact Details\n    street: contactDetails[\"street\"],\n    apartment: contactDetails[\"apartment\"],\n    city: contactDetails[\"city\"],\n    state: contactDetails[\"state\"],\n    zipCode: contactDetails[\"zipCode\"],\n    country: contactDetails[\"country\"],\n    primaryCountryCode: contactDetails[\"primaryCountryCode\"],\n    primaryPhoneNumber: contactDetails[\"primaryPhoneNumber\"],\n    secondaryCountryCode: contactDetails[\"secondaryCountryCode\"],\n    secondaryPhoneNumber: contactDetails[\"secondaryPhoneNumber\"],\n    contactEmail: contactDetails[\"contactEmail\"],\n\n    taxFiledLastYear: incomeDetails[\"taxFiledLastYear\"], // Set an initial value for taxFiledLastYear\n\n    // additional Spouse Details (Initially hidden)\n    taxPayerStatus: personalDetails[\"taxPayerStatus\"], // Default to \"No\" (Single)\n    spouseFirstName: spouseDetails[\"spouseFirstName\"],\n    spouseMiddleInitial: spouseDetails[\"spouseMiddleInitial\"],\n    spouseLastName: spouseDetails[\"spouseLastName\"],\n    spouseSsnOrItin: spouseDetails[\"spouseSsnOrItin\"],\n    spouseApplyForItin: spouseDetails[\"spouseApplyForItin\"], // Default to \"No\"\n    spouseDateOfBirth: spouseDetails[\"spouseDateOfBirth\"],\n    spouseGender: spouseDetails[\"spouseGender\"],\n    spouseOccupation: spouseDetails[\"spouseOccupation\"],\n    spouseResidentialStatus: spouseDetails[\"spouseResidentialStatus\"],\n    spouseEmail: spouseDetails[\"spouseEmail\"],\n\n    providedLivingSupport: providedLivingSupport,\n\n    //Income Details\n    interestIncome: incomeDetails[\"interestIncome\"],\n    dividendIncome: incomeDetails[\"dividendIncome\"],\n    soldStocks: incomeDetails[\"soldStocks\"],\n    soldCrypto: incomeDetails[\"soldCrypto\"],\n    foreignIncome: incomeDetails[\"foreignIncome\"],\n    retirementAccounts: incomeDetails[\"retirementAccounts\"],\n    stateTaxRefund: incomeDetails[\"stateTaxRefund\"],\n    foreignBankAccount: incomeDetails[\"foreignBankAccount\"],\n    foreignAssets: incomeDetails[\"foreignAssets\"],\n    rentalIncome: incomeDetails[\"rentalIncome\"],\n    income1099: incomeDetails[\"income1099\"],\n    incomeDescription: incomeDetails[\"incomeDescription\"],\n    incomeAmount: incomeDetails[\"incomeAmount\"],\n    addAdditionalInformation: false,\n\n    //Bank Details\n    bankingType: bankDetails[\"bankingType\"],\n    bankName: bankDetails[\"bankName\"],\n    accountHolderName: bankDetails[\"accountHolderName\"],\n    ownership: bankDetails[\"ownership\"],\n    routingNumber: bankDetails[\"routingNumber\"],\n    confirmRoutingNumber: bankDetails[\"confirmRoutingNumber\"],\n    accountNumber: bankDetails[\"accountNumber\"],\n    confirmAccountNumber: bankDetails[\"confirmAccountNumber\"],\n    accountType: bankDetails[\"accountType\"],\n    confirmAccountType: bankDetails[\"confirmAccountType\"],\n  });\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={2}>\n          <Grid item lg={6} sm={6} xs={12}>\n            <Box className={customStyles.leftSide}>\n              <Typography variant=\"h4\" sx={{ marginBottom: \"36px\" }}>\n                Personal Details\n              </Typography>\n\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                  maxWidth: \"96%\",\n                }}\n              >\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"textSecondary\"\n                  sx={{ marginTop: \"20px\", maxWidth: \"25%\" }}\n                >\n                  Taxpayer Name\n                  <font color=\"#11a63d\" size=\"2\">\n                    (As Per SSN):\n                  </font>\n                </Typography>\n\n                <Box>\n                  <CustomInputTextField\n                    disabled\n                    attribute=\"First Name\"\n                    attributeTextAlign=\"right\"\n                    is_required={true}\n                    fullWidth\n                    margin=\"normal\"\n                    name=\"firstName\"\n                    value={formData.firstName}\n                    variant=\"outlined\"\n                  />\n\n                  <CustomInputTextField\n                    disabled\n                    attribute=\"Middle Initial\"\n                    attributeTextAlign=\"right\"\n                    is_required={false}\n                    fullWidth\n                    margin=\"normal\"\n                    name=\"middleName\"\n                    value={formData.middleName}\n                    variant=\"outlined\"\n                  />\n                  <CustomInputTextField\n                    disabled\n                    attribute=\"Last Name\"\n                    attributeTextAlign=\"right\"\n                    is_required={true}\n                    fullWidth\n                    margin=\"normal\"\n                    name=\"lastName\"\n                    value={formData.lastName}\n                    variant=\"outlined\"\n                  />\n                </Box>\n              </Box>\n\n              <CustomInputTextField\n                disabled\n                attribute=\"SSN\"\n                attributeTextAlign=\"right\"\n                is_required={true}\n                fullWidth\n                margin=\"normal\"\n                name=\"ssn\"\n                value={transform(formData.ssn)}\n                variant=\"outlined\"\n              />\n              <CustomInputTextField\n                disabled\n                attribute=\"Date of Birth\"\n                attributeTextAlign=\"right\"\n                is_required={true}\n                fullWidth\n                margin=\"normal\"\n                name=\"dateOfBirth\"\n                type=\"date\"\n                value={formData.dateOfBirth}\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                InputProps={{\n                  style: {\n                    color: \"black\",\n                  },\n                }}\n                inputProps={{\n                  placeholder: \"\",\n                }}\n              />\n              <CustomInputTextField\n                disabled\n                attribute=\"Gender\"\n                attributeTextAlign=\"right\"\n                is_required={true}\n                select\n                fullWidth\n                margin=\"normal\"\n                name=\"gender\"\n                value={formData.gender}\n                variant=\"outlined\"\n              >\n                <MenuItem value=\"MALE\">Male</MenuItem>\n                <MenuItem value=\"FEMALE\">Female</MenuItem>\n                <MenuItem value=\"Other\">Other</MenuItem>\n              </CustomInputTextField>\n              <CustomInputTextField\n                disabled\n                attribute=\"Occupation / Job Title\"\n                attributeTextAlign=\"right\"\n                is_required={true}\n                fullWidth\n                margin=\"normal\"\n                name=\"occupation\"\n                value={formData.occupation}\n                variant=\"outlined\"\n              />\n              <CustomInputTextField\n                disabled\n                attribute=\"Residential Status\"\n                attributeTextAlign=\"right\"\n                is_required={true}\n                fullWidth\n                margin=\"normal\"\n                name=\"residentialStatus\"\n                value={formData.residentialStatus}\n                variant=\"outlined\"\n              />\n            </Box>\n          </Grid>\n\n          {/* Right Side - Contact Details */}\n          <Grid item lg={6} sm={6} xs={12}>\n            <Box className={customStyles.rightSide}>\n              <Typography variant=\"h4\" sx={{ marginBottom: \"16px\" }}>\n                Contact Details\n              </Typography>\n              <Typography\n                color={\"#11a63d\"}\n                sx={{ marginLeft: \"10px\" }}\n                variant=\"h5\"\n              >\n                (Provide U.S current communication Address)\n              </Typography>\n              <CustomInputTextField\n                attribute=\"Street\"\n                is_required={true}\n                fullWidth\n                name=\"street\"\n                value={formData.street}\n                variant=\"outlined\"\n                disabled\n              />\n              <CustomInputTextField\n                attribute=\"Apartment\"\n                is_required={true}\n                fullWidth\n                name=\"apartment\"\n                value={formData.apartment}\n                variant=\"outlined\"\n                disabled\n              />\n              <CustomInputTextField\n                attribute=\"City\"\n                is_required={true}\n                fullWidth\n                name=\"city\"\n                value={formData.city}\n                variant=\"outlined\"\n                disabled\n              />\n              <CustomInputTextField\n                attribute=\"State\"\n                is_required={true}\n                select\n                fullWidth\n                name=\"state\"\n                value={formData.state}\n                variant=\"outlined\"\n                disabled\n              >\n                {stateOptions.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </CustomInputTextField>\n              <CustomInputTextField\n                attribute=\"Zip Code\"\n                is_required={true}\n                fullWidth\n                name=\"zipCode\"\n                value={formData.zipCode}\n                variant=\"outlined\"\n                disabled\n              />\n              <CustomInputTextField\n                attribute=\"Country\"\n                is_required={true}\n                select\n                fullWidth\n                name=\"country\"\n                value={formData.country}\n                variant=\"outlined\"\n                disabled\n              >\n                <MenuItem value=\"USA\">USA</MenuItem>\n                <MenuItem value=\"Other\">Other</MenuItem>\n              </CustomInputTextField>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  width: \"93%\",\n                  margin: \"10px 0\",\n                  maxHeight: \"60px\",\n                }}\n              >\n                <Typography\n                  variant=\"body1\"\n                  sx={{\n                    width: { xs: \"30%\", sm: \"120px\" },\n                  }}\n                >\n                  <span>Primary Phone</span>\n                  <span\n                    style={{\n                      color: \"red\",\n                      fontSize: \"0.875rem\",\n                      marginLeft: \"3px\",\n                    }}\n                  >\n                    *\n                  </span>\n                  &nbsp;:\n                </Typography>\n                <TextField\n                  attribute=\"Primary Phone\"\n                  select\n                  name=\"primaryCountryCode\"\n                  value={formData.primaryCountryCode}\n                  variant=\"outlined\"\n                  disabled\n                  sx={{\n                    width: \"18%\",\n                    \"& .MuiOutlinedInput-root\": {\n                      \"& fieldset\": {\n                        borderRadius: \"2px\",\n                      },\n                    },\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                      {\n                        border: \"0.1px solid #bdbdbd\",\n                      },\n                    \"& .MuiOutlinedInput-input\": {\n                      padding: \"10px\",\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                    },\n                  }}\n                >\n                  {countryCodes.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  name=\"primaryPhoneNumber\"\n                  value={formData.primaryPhoneNumber}\n                  variant=\"outlined\"\n                  disabled\n                  sx={{\n                    width: { xs: \"50%\", sm: \"165px\" },\n                    \"& .MuiOutlinedInput-root\": {\n                      \"& fieldset\": {\n                        borderRadius: \"2px\",\n                      },\n                    },\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                      {\n                        border: \"0.1px solid #bdbdbd\",\n                      },\n                    \"& .MuiOutlinedInput-input\": {\n                      padding: \"10px\",\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                    },\n                  }}\n                />\n              </Box>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  width: \"93%\",\n                  margin: \"10px 0\",\n                  maxHeight: \"60px\",\n                }}\n              >\n                <Typography\n                  variant=\"body1\"\n                  sx={{\n                    width: { xs: \"30%\", sm: \"120px\" },\n                  }}\n                >\n                  <span>Secondary Phone</span>\n                  &nbsp;:\n                </Typography>\n                <TextField\n                  name=\"secondaryCountryCode\"\n                  value={formData.secondaryCountryCode}\n                  variant=\"outlined\"\n                  disabled\n                  sx={{\n                    width: \"18%\",\n                    \"& .MuiOutlinedInput-root\": {\n                      \"& fieldset\": {\n                        borderRadius: \"2px\",\n                      },\n                    },\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                      {\n                        border: \"0.1px solid #bdbdbd\",\n                      },\n                    \"& .MuiOutlinedInput-input\": {\n                      padding: \"10px\",\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                    },\n                  }}\n                >\n                  {countryCodes.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  attribute=\"Secondary Phone\"\n                  name=\"secondaryPhoneNumber\"\n                  value={formData.secondaryPhoneNumber}\n                  variant=\"outlined\"\n                  disabled\n                  sx={{\n                    width: { xs: \"50%\", sm: \"165px\" },\n                    \"& .MuiOutlinedInput-root\": {\n                      \"& fieldset\": {\n                        borderRadius: \"2px\",\n                      },\n                    },\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                      {\n                        border: \"0.1px solid #bdbdbd\",\n                      },\n                    \"& .MuiOutlinedInput-input\": {\n                      padding: \"10px\",\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                    },\n                  }}\n                />\n              </Box>\n              <CustomInputTextField\n                attribute=\"Email Id\"\n                is_required={true}\n                fullWidth\n                name=\"contactEmail\"\n                value={formData.contactEmail}\n                variant=\"outlined\"\n                disabled\n              />\n            </Box>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Box sx={{ margin: \"16px 0\" }}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={10}\n                sm={5}\n                style={{ display: \"flex\", alignItems: \"center\" }}\n              >\n                <Typography variant=\"body1\">\n                  <CustomLabel\n                    label=\"Have you filed your taxes with Taxcooler in the last year?\"\n                    required={true}\n                  />\n                </Typography>\n              </Grid>\n              <Grid item xs={2} sm={1}>\n                <select\n                  id=\"taxFiledLastYear\"\n                  name=\"taxFiledLastYear\"\n                  value={formData.taxFiledLastYear}\n                  style={{ width: \"100%\" }}\n                  disabled\n                >\n                  <option value=\"\">Select</option>\n                  {/* Add an empty option */}\n                  <option value={true}>Yes</option>\n                  <option value={false}>No</option>\n                </select>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box sx={{ margin: \"16px 0\" }}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={8}\n                sm={5}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography variant=\"body1\">\n                  <CustomLabel label=\"Taxpayer Status\" required={true} />\n                </Typography>\n              </Grid>\n              <Grid item xs={4} sm={1}>\n                <select\n                  id=\"taxPayerStatus\"\n                  name=\"taxPayerStatus\"\n                  value={formData.taxPayerStatus}\n                  style={{ width: \"100%\" }}\n                  disabled\n                >\n                  <option value=\"\">Select Status</option>{\" \"}\n                  {/* Add an empty option */}\n                  <option value=\"SINGLE\">Single</option>\n                  <option value=\"MARRIED\">Married</option>\n                </select>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        {formData.taxPayerStatus === \"MARRIED\" && (\n          <Grid container spacing={2}>\n            {/* Left Side - Spouse Details */}\n            <Grid item lg={6} sm={6} xs={12}>\n              <Typography variant=\"h4\" mb={2}>\n                Spouse Details\n              </Typography>\n              <Grid container spacing={2}>\n                <CustomInputTextField\n                  attribute=\"First Name\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseFirstName\"\n                  value={formData.spouseFirstName}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Middle Initial\"\n                  is_required={false}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseMiddleInitial\"\n                  value={formData.spouseMiddleInitial}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Last Name\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseLastName\"\n                  value={formData.spouseLastName}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"SSN/ITIN\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseSsnOrItin\"\n                  value={transform(formData.spouseSsnOrItin)}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Do you want to apply for ITIN?\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  select\n                  fullWidth\n                  name=\"spouseApplyForItin\"\n                  value={formData.spouseApplyForItin}\n                  variant=\"outlined\"\n                  disabled\n                >\n                  <MenuItem value={false}>No</MenuItem>\n                  <MenuItem value={true}>Yes</MenuItem>\n                </CustomInputTextField>\n              </Grid>\n            </Grid>\n\n            {/* Right Side - Spouse Contact */}\n            <Grid item lg={6} sm={6} xs={12}>\n              <Typography variant=\"h4\" mb={2}>\n                Spouse Contact\n              </Typography>\n              <Grid container spacing={2}>\n                <CustomInputTextField\n                  attribute=\"Date of Birth\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseDateOfBirth\"\n                  type=\"date\"\n                  value={formData.spouseDateOfBirth}\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  InputProps={{\n                    style: {\n                      color: \"black\",\n                    },\n                  }}\n                  inputProps={{\n                    placeholder: \"\",\n                  }}\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Gender\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  select\n                  fullWidth\n                  name=\"spouseGender\"\n                  value={formData.spouseGender}\n                  variant=\"outlined\"\n                  disabled\n                >\n                  <MenuItem value=\"MALE\">Male</MenuItem>\n                  <MenuItem value=\"FEMALE\">Female</MenuItem>\n                  <MenuItem value=\"Other\">Other</MenuItem>\n                </CustomInputTextField>\n\n                <CustomInputTextField\n                  attribute=\"Occupation / Job Title\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseOccupation\"\n                  value={formData.spouseOccupation}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Residential Status\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseResidentialStatus\"\n                  value={formData.spouseResidentialStatus}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Email Id\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseEmail\"\n                  value={formData.spouseEmail}\n                  variant=\"outlined\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n        <Grid container>\n          <Grid\n            container\n            sx={{\n              marginTop: \"36px\",\n              marginBottom: \"24px\",\n            }}\n          >\n            <Grid\n              item\n              xs={10}\n              sm={9}\n              sx={{ display: \"flex\", alignItems: \"center\" }}\n            >\n              <Typography variant=\"body1\">\n                <CustomLabel\n                  label=\" Have you (or your spouse, if married) provided living\n                        support to your kids and/or dependents during the tax\n                        year?\"\n                />\n              </Typography>\n            </Grid>\n            <Grid item xs={2}>\n              <CustomInputTextField\n                attribute=\"\"\n                is_required={true}\n                // label={<CustomLabel label=\"\" />}\n                select\n                margin=\"normal\"\n                name=\"providedLivingSupport\"\n                value={formData.providedLivingSupport}\n                variant=\"outlined\"\n                disabled\n              >\n                <MenuItem value={true}>Yes</MenuItem>\n                <MenuItem value={false}>No</MenuItem>\n              </CustomInputTextField>\n            </Grid>\n          </Grid>\n          <Grid>\n            <Typography\n              variant=\"body1\"\n              style={{ color: \"blue\", wordSpacing: \"2px\" }}\n            >\n              NOTE: Make sure the kids or dependants reported in your (Taxpayer)\n              2023 Tax Return are not claimed as dependants in any other 2023\n              Individual Tax Returns.\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12}>\n          <TableContainer\n            sx={{\n              marginTop: \"32px\",\n              marginBottom: \"16px\",\n              paddingBottom: { xs: \"10px\", sm: \"0px\" },\n            }}\n          >\n            <Typography variant=\"h4\">Dependant Details</Typography>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={customStyles.tableHeader}>\n                    Name\n                  </TableCell>\n\n                  <TableCell className={customStyles.tableHeader}>\n                    Relationship\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    SSN/ITIN\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Apply ?\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    DOB\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Visa Type\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    C.S\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Months\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {dependantDetails.length > 0 &&\n                  dependantDetails.map((row, index) => (\n                    <TableRow key={index}>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalFirstName} {row.additionalLastName}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalRelationship}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {transform(row.additionalSsnOrItin)}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalApplyForItin ? \"YES\" : \"NO\"}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalDateOfBirth}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalVisaType}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        USA\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalStayCount}\n                      </TableCell>\n\n                      <TableCell className={customStyles.mobileView}>\n                        <Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                First Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalFirstName}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Last Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalLastName}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                RelationShip\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalRelationship}\n                              </Typography>\n                            </Box>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Visa Type\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalVisaType}\n                              </Typography>\n                            </Box>\n\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                SSN/ITIN\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {transform(row.additionalSsnOrItin)}\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n            {dependantDetails.length === 0 && (\n              <Typography\n                variant=\"h5\"\n                sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n              >\n                No Dependants Found\n              </Typography>\n            )}\n          </TableContainer>\n        </Grid>\n        <Grid container spacing={2}>\n          {/* Interest Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have any Interest Income?\n              </FormLabel>\n              <RadioGroup\n                name=\"interestIncome\"\n                value={formData.interestIncome}\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Dividend Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have any Dividend Income?\n              </FormLabel>\n              <RadioGroup\n                name=\"dividendIncome\"\n                value={formData.dividendIncome}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Sold Stocks */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Did you sell any stocks in 2022?\n              </FormLabel>\n              <RadioGroup\n                name=\"soldStocks\"\n                value={formData.soldStocks}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Sold Crypto */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Did you sell any Crypto Currency in 2022?\n              </FormLabel>\n              <RadioGroup\n                name=\"soldCrypto\"\n                value={formData.soldCrypto}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n          {/* Foreign Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have any foreign country income in 2022?\n              </FormLabel>\n              <RadioGroup\n                name=\"foreignIncome\"\n                value={formData.foreignIncome}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Contributions/Distributions */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have contributions/distributions to/from retirement\n                accounts in year 2022?\n              </FormLabel>\n              <RadioGroup\n                name=\"retirementAccounts\"\n                value={formData.retirementAccounts}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* State Tax Refund */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Did you get State tax refund(s) in 2022?\n              </FormLabel>\n              <RadioGroup\n                name=\"stateTaxRefund\"\n                value={formData.stateTaxRefund}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Foreign Bank Account */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have Account Balance in Foreign banks exceeding more than\n                $10,000?\n              </FormLabel>\n              <RadioGroup\n                name=\"foreignBankAccount\"\n                value={formData.foreignBankAccount}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Foreign Assets */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have Foreign Assets value more than $50,000 at any time\n                during the tax year?\n              </FormLabel>\n              <RadioGroup\n                name=\"foreignAssets\"\n                value={formData.foreignAssets}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Rental Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have Rental Income in Foreign Country/USA?\n              </FormLabel>\n              <RadioGroup\n                name=\"rentalIncome\"\n                value={formData.rentalIncome}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* 1099-Misc/1099-NEC Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have 1099-Misc/1099-NEC Income in year 2022?\n              </FormLabel>\n              <RadioGroup\n                name=\"income1099\"\n                value={formData.income1099}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          <Grid\n            container\n            spacing={2}\n            sx={{\n              marginTop: \"30px\",\n              marginBottom: \"30px\",\n              marginLeft: \"0px\",\n            }}\n          >\n            <Grid item xs={12} className=\"leftSide\">\n              <Typography variant=\"h5\">Add other Income Information</Typography>\n\n              <CustomInputTextField\n                disabled\n                fullWidth\n                attribute=\"Income Description\"\n                margin=\"normal\"\n                name=\"incomeDescription\"\n                value={formData.incomeDescription}\n                variant=\"outlined\"\n              />\n\n              <CustomInputTextField\n                disabled\n                fullWidth\n                attribute=\"Income Amount\"\n                margin=\"normal\"\n                name=\"incomeAmount\"\n                value={formData.incomeAmount}\n                variant=\"outlined\"\n                type=\"number\"\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\n            <Typography variant=\"h4\" sx={{ marginTop: \"30px\" }}>\n              Important Note\n            </Typography>\n            <Typography\n              sx={{\n                marginTop: \"30px\",\n                wordSpacing: \"2px\",\n              }}\n            >\n              The IRS and certain State Revenue Departments facilitate DIRECT\n              DEPOSIT / WITHDRAWAL of Tax Refund or Tax Dues on the Tax Returns.\n              If you are interested in availing this option, we request you to\n              kindly input the following details.\n            </Typography>\n\n            <Grid container sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}>\n              <Grid\n                item\n                xs={10}\n                sm={4}\n                style={{ display: \"flex\", alignItems: \"center\" }}\n              >\n                <Typography variant=\"body1\">\n                  I prefer to receive my tax refunds by way of\n                </Typography>\n              </Grid>\n              <Grid item xs={2} sm={4}>\n                <select\n                  id=\"bankingType\"\n                  name=\"bankingType\"\n                  value={formData.bankingType}\n                  style={{ width: \"100%\" }}\n                  disabled\n                >\n                  <option value=\"\">Select Option</option>\n                  <option value=\"DIRECT DEPOSIT INTO MY BANK ACCOUNT\">\n                    Direct deposit into my bank account\n                  </option>\n                  <option value=\"PAPER CHECK\">Paper Check</option>\n                </select>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          {formData.bankingType === \"DIRECT DEPOSIT INTO MY BANK ACCOUNT\" && (\n            <Grid>\n              {/* Additional Fields for Direct Deposit */}\n              <Typography\n                variant=\"h5\"\n                sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}\n              >\n                Direct Deposit Information\n              </Typography>\n              <Typography sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}>\n                Note : Please understand that there is no risk by entering Bank\n                Account and Routing Numbers\n              </Typography>\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  border: \"1px solid #000000\",\n                  padding: \"20px\",\n                  marginBottom: \"20px\",\n                  backgroundColor: \"#C7DFF0\",\n                }}\n              >\n                <Grid item lg={6} sm={6} xs={12}>\n                  <CustomInputTextField\n                    attribute=\"Bank Name\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"bankName\"\n                    fullWidth\n                    value={formData.bankName}\n                    variant=\"outlined\"\n                    disabled={formData.bankingType === \"PAPER CHECK\"}\n                  />\n                  <CustomInputTextField\n                    attribute=\"Account Number\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"accountNumber\"\n                    fullWidth\n                    value={formData.accountNumber}\n                    variant=\"outlined\"\n                    disabled={formData.bankingType === \"PAPER CHECK\"}\n                  />\n                  <CustomInputTextField\n                    attribute=\"Routing Number\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"routingNumber\"\n                    fullWidth\n                    value={formData.routingNumber}\n                    variant=\"outlined\"\n                    disabled={formData.bankingType === \"PAPER CHECK\"}\n                  />\n                  <CustomInputTextField\n                    attribute=\"Account Type\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"accountType\"\n                    select\n                    fullWidth\n                    value={formData.accountType}\n                    variant=\"outlined\"\n                    disabled={formData.bankingType === \"PAPER CHECK\"}\n                  >\n                    <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                    <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                  </CustomInputTextField>\n                  <CustomInputTextField\n                    attribute=\"Ownership\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"ownership\"\n                    select\n                    fullWidth\n                    value={formData.ownership}\n                    variant=\"outlined\"\n                    disabled={formData.bankingType === \"PAPER CHECK\"}\n                  >\n                    <MenuItem value=\"TAXPAYER/SPOUSE\">\n                      Tax Payer / Spouse\n                    </MenuItem>\n                    <MenuItem value=\"JOINT\">Joint</MenuItem>\n                  </CustomInputTextField>\n                </Grid>\n                <Grid item lg={6} sm={6} xs={12}>\n                  <CustomInputTextField\n                    attribute=\"Account Holder Name\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"accountHolderName\"\n                    fullWidth\n                    value={formData.accountHolderName}\n                    variant=\"outlined\"\n                    disabled={formData.bankingType === \"PAPER CHECK\"}\n                  />\n                  <CustomInputTextField\n                    attribute=\"Confirm Account Number\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"confirmAccountNumber\"\n                    fullWidth\n                    value={formData.confirmAccountNumber}\n                    variant=\"outlined\"\n                    disabled={formData.bankingType === \"PAPER CHECK\"}\n                  />\n                  <CustomInputTextField\n                    attribute=\"Confirm Routing Number\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"confirmRoutingNumber\"\n                    fullWidth\n                    value={formData.confirmRoutingNumber}\n                    variant=\"outlined\"\n                    disabled={formData.bankingType === \"PAPER CHECK\"}\n                  />\n                  <CustomInputTextField\n                    attribute=\"Confirm Account Type\"\n                    is_required={false}\n                    margin=\"normal\"\n                    name=\"confirmAccountType\"\n                    select\n                    fullWidth\n                    value={formData.confirmAccountType}\n                    variant=\"outlined\"\n                    disabled={formData.bankingType === \"PAPER CHECK\"}\n                  >\n                    <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                    <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                  </CustomInputTextField>\n                </Grid>\n              </Grid>\n            </Grid>\n          )}\n        </Grid>\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handlePickAppointment(\"Pick Appointment\")}\n            sx={{ display: { xs: \"none\", sm: \"block\", margin: \"20px 0\" } }}\n          >\n            Confirm Personal Details To Pick An Appointment\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handlePickAppointment(\"panel6\")}\n            sx={{ display: { xs: \"block\", sm: \"none\" } }}\n          >\n            Confirm Personal Details To Pick An Appointment\n          </Button>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default ConfirmDetails;\n","import { Container, Typography, Box, Paper, Grid } from \"@mui/material\";\nimport React from \"react\";\n\nconst RefundQuote = ({ open }) => {\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Container maxWidth=\"lg\">\n        <Paper elevation={3} style={{ padding: \"16px\" }}>\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\n            <Grid item>\n              <Typography variant=\"h5\" color=\"error\" align=\"center\">\n                Refund Quote will be available after a telephone call with Tax\n                Consultant.\n              </Typography>\n              <Box mt={2}>\n                <Typography variant=\"h5\" color=\"error\" align=\"center\">\n                  You will be receiving an email as soon as the Refund quote is\n                  ready.\n                </Typography>\n              </Box>\n              <Box mt={2}>\n                <Typography variant=\"h5\" color=\"error\" align=\"center\">\n                  Please visit the Refund Quote section later.\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Container>\n    </Box>\n  );\n};\n\nexport default RefundQuote;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport { Grid, Box, Avatar, Typography } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { makeStyles } from \"@mui/styles\";\nimport BankDetails from \"./Forms/bankDetails\";\nimport FilerDetails from \"./Forms/filerDeatils\";\nimport IncomeDetails from \"./Forms/incomeDetails\";\nimport PickAppointment from \"./Forms/pickAppointment\";\nimport UploadTaxDocs from \"./Forms/TaxDocs\";\nimport TaxReturns from \"./Forms/taxReturns\";\nimport PayPalPayment from \"../Home/payPalPayment\";\nimport ConfirmDetails from \"./Forms/confirmDetails\";\nimport RefundQuote from \"./Forms/refundQuote\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst BasicAccordion = ({ data, handleFetchData, handleDownloadTemplate }) => {\n  const customTextClasses = customTextStyles();\n  const params = useParams();\n  const [expanded, setExpanded] =\n    parseInt(params.action) === 7 ? useState(\"panel7\") : useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    console.log(panel);\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handlePickAppointment = () => {\n    setExpanded(\"panel6\");\n  };\n\n  return (\n    <Box>\n      <Accordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel1\" ? \"600\" : \"400\" }}\n          >\n            Filer Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <FilerDetails\n            open={expanded === \"panel1\"}\n            id={data[\"id\"]}\n            personalDetails={data[\"personalDetails\"]}\n            contactDetails={data[\"contactDetails\"]}\n            spouseDetails={data[\"spouseDetails\"]}\n            incomeDetails={data[\"incomeDetails\"]}\n            providedLivingSupport={data[\"providedLivingSupport\"]}\n            handleFetchData={handleFetchData}\n            handleDownloadTemplate={handleDownloadTemplate}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel2\"}\n        onChange={handleChange(\"panel2\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel2\" ? \"600\" : \"400\" }}\n          >\n            Income Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <IncomeDetails\n            open={expanded === \"panel2\"}\n            id={data[\"id\"]}\n            data={data[\"incomeDetails\"]}\n            handleFetchData={handleFetchData}\n            handleDownloadTemplate={handleDownloadTemplate}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel3\"}\n        onChange={handleChange(\"panel3\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3a-content\"\n          id=\"panel3a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\n          >\n            Bank Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\", paddingLeft: \"0px\" }}>\n          <BankDetails\n            open={expanded === \"panel3\"}\n            id={data[\"id\"]}\n            data={data[\"bankDetails\"]}\n            handleFetchData={handleFetchData}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel4\"}\n        onChange={handleChange(\"panel4\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel4a-content\"\n          id=\"panel4a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          Upload Tax Docs\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <UploadTaxDocs open={expanded === \"panel4\"} id={data[\"id\"]} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel5\"}\n        onChange={handleChange(\"panel5\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel5a-content\"\n          id=\"panel5a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel5\" ? \"600\" : \"400\" }}\n          >\n            Confirm Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <ConfirmDetails\n            open={expanded === \"panel5\"}\n            id={data[\"id\"]}\n            personalDetails={data[\"personalDetails\"]}\n            contactDetails={data[\"contactDetails\"]}\n            spouseDetails={data[\"spouseDetails\"]}\n            providedLivingSupport={data[\"providedLivingSupport\"]}\n            incomeDetails={data[\"incomeDetails\"]}\n            bankDetails={data[\"bankDetails\"]}\n            handlePickAppointment={handlePickAppointment}\n            dependantDetails={data[\"dependantDetails\"]}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel6\"}\n        onChange={handleChange(\"panel6\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel6a-content\"\n          id=\"panel6a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel6\" ? \"600\" : \"400\" }}\n          >\n            Pick Appointment\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <PickAppointment open={expanded === \"panel6\"} id={data[\"id\"]} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel7\"}\n        onChange={handleChange(\"panel7\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel7a-content\"\n          id=\"panel7a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel7\" ? \"600\" : \"400\" }}\n          >\n            Pay Now\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <PayPalPayment open={expanded === \"panel7\"} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel8\"}\n        onChange={handleChange(\"panel8\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel8a-content\"\n          id=\"panel8a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel8\" ? \"600\" : \"400\" }}\n          >\n            Tax Return\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <TaxReturns open={expanded === \"panel8\"} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel9\"}\n        onChange={handleChange(\"panel9\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel9a-content\"\n          id=\"panel9a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel9\" ? \"600\" : \"400\" }}\n          >\n            Refund Quote\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <RefundQuote open={expanded === \"panel9\"} />\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n};\n\nexport default BasicAccordion;\n","import React, { useEffect, useState } from \"react\";\nimport Page from \"../../../components/Page\";\nimport {\n  Grid,\n  Container,\n  Box,\n  CircularProgress,\n  Typography,\n  Card,\n  Button,\n  Avatar,\n} from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport TabsDesktop from \"../TabsDesktop\";\nimport BasicAccordion from \"../AccordionMobile\";\nimport { makeStyles } from \"@mui/styles\";\nimport ConfirmDetails from \"../Forms/confirmDetails\";\nimport PickAppointment from \"../Forms/pickAppointment\";\nimport PayPalPayment from \"../../Home/payPalPayment\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport RefundQuote from \"../Forms/refundQuote\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tabButton: {\n    display: \"block\",\n    width: \"100%\",\n    paddingLeft: \"15px\",\n    textAlign: \"left\",\n    fontWeight: \"500\",\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n  },\n}));\n\nconst ClientTaxFillingPage = () => {\n  const params = useParams();\n  const customStyles = customTextStyles();\n  const [data, setData] = useState({});\n  const [isLoadingSpin, setIsLoadingSpin] = useState(true);\n  const [isActiveTab, setIsActiveTab] =\n    parseInt(params.action) === 7\n      ? useState(\"Pay Now\")\n      : useState(\"My Details\");\n\n  const handleActiveTabChange = (tabName) => {\n    setIsActiveTab(tabName);\n  };\n\n  const handleFetchTaxFilingDetails = () => {\n    setIsLoadingSpin(true);\n    let payload = { id: params.id };\n    privateApiPOST(Api.taxFiling, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setData(data?.data);\n          setIsLoadingSpin(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsLoadingSpin(false);\n      });\n  };\n\n  const handleDownloadTemplate = (file) => {\n    let payload = {\n      file_name: file,\n    };\n\n    privateApiPOST(Api.templateDownload, payload, { responseType: \"blob\" })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          const url = window.URL.createObjectURL(new Blob([data]));\n          const anchor = document.createElement(\"a\");\n          anchor.href = url;\n          anchor.setAttribute(\"download\", file);\n          document.body.appendChild(anchor);\n          anchor.click();\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDownloadFile--->\", err);\n      });\n  };\n\n  useEffect(() => {\n    handleFetchTaxFilingDetails();\n  }, []);\n\n  return (\n    <Page title={\"Tax Filing\"}>\n      <Box>\n        <Container maxWidth=\"lg\">\n          <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n            <Grid container>\n              <Grid item xs={2}>\n                <Card\n                  sx={{\n                    minHeight: \"240px\",\n                    borderRadius: \"2px\",\n                  }}\n                >\n                  {[\n                    \"My Details\",\n                    \"Confirm Details\",\n                    \"Pick Appointment\",\n                    \"Refund Quote\",\n                    \"Pay Now\",\n                  ].map((each, index) =>\n                    each === \"Pay Now\" ? (\n                      // Conditional rendering for \"Pay Now\" button\n                      <Button\n                        key={index}\n                        onClick={() => handleActiveTabChange(each)}\n                      >\n                        <img\n                          src=\"/static/img/pay_now.jpg\"\n                          alt=\"Pay Now\"\n                          style={{\n                            minWidth: \"100px\",\n                            width: \"190px\",\n                            height: \"50px\",\n                          }}\n                        />\n                      </Button>\n                    ) : (\n                      // Conditional rendering for other tabs\n                      <Button\n                        key={index}\n                        onClick={() => handleActiveTabChange(each)}\n                        variant={isActiveTab === each ? \"contained\" : \"text\"}\n                        className={customStyles.tabButton}\n                        sx={{\n                          color: isActiveTab === each ? \"#fff\" : \"#474747\",\n                        }}\n                      >\n                        {each}\n                      </Button>\n                    )\n                  )}\n                </Card>\n              </Grid>\n              <Grid item xs={10}>\n                {isLoadingSpin ? (\n                  <Box\n                    display=\"flex\"\n                    height=\"100%\"\n                    width=\"100%\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    sx={{\n                      position: \"absolute\",\n                      zIndex: \"10\",\n                      left: 0,\n                      top: \"30%\",\n                    }}\n                  >\n                    <CircularProgress size={30} />\n                  </Box>\n                ) : data ? (\n                  <Box\n                    sx={{\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                      boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\",\n                      borderRadius: \"4px\",\n                      padding: \"20px 10px\",\n                      height: \"800px\", // Adjust the height as needed\n                      overflow: \"auto\", // Add overflow to enable scrolling\n                      maxHeight: \"800px\", // Add a maximum height to prevent content from overflowing\n                      marginLeft: \"20px\",\n                    }}\n                  >\n                    <PerfectScrollbar>\n                      <Typography\n                        variant=\"h3\"\n                        sx={{\n                          marginLeft: \"20px\",\n                          marginBottom:\n                            isActiveTab === \"My Details\" ? 0 : \"30px\",\n                        }}\n                      >\n                        Tax-Filing For Year - {params.year}\n                      </Typography>\n\n                      {isActiveTab === \"My Details\" && (\n                        <Box>\n                          <Typography\n                            color={\"primary\"}\n                            sx={{\n                              marginTop: \"10px\",\n                              marginLeft: \"auto\",\n                              marginRight: \"auto\",\n                              textAlign: \"center\",\n                            }}\n                          >\n                            NOTE : ON FILLING ALL INFORMATION PLEASE MENTION\n                            YOUR AVAILABILITY IN Pick an Appointment PAGE\n                          </Typography>\n                          <Typography\n                            color={\"#11a63d\"}\n                            sx={{\n                              marginLeft: \"24px\",\n                              wordSpacing: \"3px\",\n                              marginTop: \"4px\",\n                            }}\n                          >\n                            Taxpayer and spouse's SSN and Date of Birth fields\n                            are set to default values. Please don't change them.\n                            We will collect these details via phone call at the\n                            time of tax filing\n                          </Typography>\n\n                          <TabsDesktop\n                            data={data}\n                            handleFetchData={handleFetchTaxFilingDetails}\n                            handleDownloadTemplate={handleDownloadTemplate}\n                          />\n                        </Box>\n                      )}\n                      {isActiveTab === \"Confirm Details\" && (\n                        <ConfirmDetails\n                          open={isActiveTab === \"Confirm Details\"}\n                          id={data[\"id\"]}\n                          personalDetails={data[\"personalDetails\"]}\n                          contactDetails={data[\"contactDetails\"]}\n                          spouseDetails={data[\"spouseDetails\"]}\n                          providedLivingSupport={data[\"providedLivingSupport\"]}\n                          incomeDetails={data[\"incomeDetails\"]}\n                          bankDetails={data[\"bankDetails\"]}\n                          handlePickAppointment={handleActiveTabChange}\n                          dependantDetails={data[\"dependantDetails\"]}\n                        />\n                      )}\n                      {isActiveTab === \"Pick Appointment\" && (\n                        <PickAppointment\n                          open={isActiveTab === \"Pick Appointment\"}\n                          id={data[\"id\"]}\n                        />\n                      )}\n                      {isActiveTab === \"Refund Quote\" && (\n                        <RefundQuote open={isActiveTab === \"Refund Quote\"} />\n                      )}\n                      {isActiveTab === \"Pay Now\" && (\n                        <PayPalPayment open={isActiveTab === \"Pay Now\"} />\n                      )}\n                    </PerfectScrollbar>\n                  </Box>\n                ) : null}\n              </Grid>\n            </Grid>\n          </Box>\n          <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\n            {isLoadingSpin ? (\n              <Box\n                display=\"flex\"\n                height=\"100%\"\n                width=\"100%\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                sx={{\n                  position: \"absolute\",\n                  zIndex: \"10\",\n                  left: 0,\n                  top: \"70%\",\n                }}\n              >\n                <CircularProgress size={30} />\n              </Box>\n            ) : data ? (\n              <BasicAccordion\n                data={data}\n                handleFetchData={handleFetchTaxFilingDetails}\n                handleDownloadTemplate={handleDownloadTemplate}\n              />\n            ) : null}\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default ClientTaxFillingPage;\n","import React, { useEffect, useState } from \"react\";\nimport Page from \"../../components/Page\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport AdminTaxFillingPage from \"./AdminTaxFilingpage\";\nimport ClientTaxFillingPage from \"./ClientTaxFilingPage\";\n\nconst HomePage = () => {\n  const state = useSelector((state) => state.app);\n\n  return (\n    <Page title={\"Home\"}>\n      {state.role === \"ADMIN\" ? (\n        <AdminTaxFillingPage />\n      ) : state.role === \"CLIENT\" ? (\n        <ClientTaxFillingPage />\n      ) : null}\n    </Page>\n  );\n};\n\nexport default HomePage;\n","import React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Box, Button, Typography } from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CustomAlert from \"../../components/CustomAlert\";\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport Api from \"../../components/Api\";\nimport Page from \"../../components/Page\";\nimport { setTaxYear } from \"../../redux/app/appSlice\";\n\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst useStyles = makeStyles((theme) => ({\n  // root: {\n  //   backgroundColor: theme.palette.background.dark,\n  //   height: \"100%\",\n  //   paddingBottom: \"0px\",\n  //   paddingTop: \"0px\",\n  //   position: \"relative\",\n  // },\n\n  // logo: {\n  //   width: 150,\n  //   padding: 10,\n  //   [theme.breakpoints.down(\"sm\")]: {\n  //     width: 110,\n  //   },\n  // },\n  submitProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  mainBlock: {\n    // width: \"50vw\",\n    // height: \"100vh\",\n    // display: \"flex\",\n    // flexDirection: \"row\",\n    minWidth: \"400px\",\n    margin: \"0\",\n    padding: \"0\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // flexDirection: \"column\",\n      minWidth: \"300px\",\n    },\n  },\n  // leftSide: {\n  //   width: \"70%\",\n  //   height: \"100vh\",\n  //   position: \"relative\",\n  //   backgroundColor: \"#2069D8\",\n  //   [theme.breakpoints.down(\"sm\")]: {\n  //     width: \"100%\",\n  //     height: \"40vh\",\n  //     margin: \"0\",\n  //   },\n  // },\n\n  avatarLogo: {\n    width: 200,\n    height: 72,\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"33%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      left: \"20%\",\n      top: \"30%\",\n    },\n  },\n  title: {\n    fontFamily: \"Montserrat\",\n    fontWeight: \"700\",\n    fontSize: \"72px\",\n    textAlign: \"center\",\n    lineHeight: \"87.7px\",\n    color: \"#FFFFFF\",\n    margin: \"auto\",\n    marginTop: \"50vh\",\n    marginBottom: \"auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"10vh\",\n    },\n  },\n\n  rightSide: {\n    width: \"100%\",\n    height: \"100vh\",\n    backgroundColor: \"#F5F5F5\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\", // Center vertically\n    alignItems: \"center\", // Center horizontally\n    margin: \"0\",\n    paddingRight: \"200px\",\n    padding: \"0\", // Reset padding\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: \"244px\", // Adjust padding for medium and larger screens\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\", // Set width to 100%\n      paddingLeft: \"0\", // Reset padding\n      justifyContent: \"center\", // Center vertically\n      alignItems: \"center\", // Center horizontally\n      paddingRight: \"0px\",\n      marginTop: \"-100px\",\n    },\n  },\n}));\n\nconst LoginView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  return (\n    <>\n      <Box className={classes.mainBlock}>\n        {showAlert.isAlert ? (\n          <CustomAlert\n            open={showAlert.isAlert}\n            severity={showAlert.severity}\n            alertTitle={showAlert.alertTitle}\n            alertText={showAlert.alertText}\n            onClose={() =>\n              setShowAlert({\n                isAlert: false,\n                alertTitle: \"\",\n                alertText: \"\",\n                severity: \"\",\n              })\n            }\n          />\n        ) : null}\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          height=\"100%\"\n          justifyContent=\"center\"\n        >\n          {/* <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              marginBottom={2}\n            >\n              \n            </Box> */}\n          <Formik\n            initialValues={{\n              email: \"\",\n              password: \"\",\n              // taxYear: \"\",\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email(\"Must be a valid email\")\n                .max(255)\n                .required(\"Email is required\"),\n              password: Yup.string().max(255).required(\"Password is required\"),\n              // taxYear: Yup.string()\n              //   .max(255)\n              //   .required(\"Tax Year is required\"),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              const url = Api.login;\n\n              const config = {\n                headers: {\n                  \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                },\n              };\n\n              axios\n                .post(url, values, config)\n                .then((res) => {\n                  if (res.status === 200) {\n                    window.sessionStorage.setItem(\n                      \"token\",\n                      res.data?.data?.token\n                    );\n                    setSubmitting(false);\n                    dispatch(setTaxYear(values.taxYear));\n                    navigate(\"/\");\n                  }\n                })\n                .catch((error) => {\n                  if (error.response.status === 400) {\n                    setShowAlert({\n                      isAlert: true,\n                      alertText: \"Invalid credentials\",\n                      severity: \"error\",\n                      alertTitle: \"Error\",\n                    });\n                    setSubmitting(false);\n                  } else {\n                    setShowAlert({\n                      isAlert: true,\n                      alertText: \"Something went wrong\",\n                      severity: \"error\",\n                      alertTitle: \"Error\",\n                    });\n                    resetForm();\n                    setSubmitting(false);\n                  }\n                });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values,\n            }) => (\n              <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography color=\"textPrimary\" variant=\"h4\">\n                    SIGN IN TO YOUR ACCOUNT\n                  </Typography>\n                </Box>\n\n                <CustomInputTextField\n                  attribute=\"Email Address\"\n                  is_required={true}\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <CustomInputTextField\n                  attribute=\"Password\"\n                  is_required={true}\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                {/* <TextField\n                        select\n                        error={Boolean(touched.taxYear && errors.taxYear)}\n                        helperText={touched.taxYear && errors.taxYear}\n                        fullWidth\n                        label=\"Tax Year\"\n                        margin=\"normal\"\n                        name=\"taxYear\" // Change \"taxyear\" to \"taxYear\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.taxYear}\n                        variant=\"outlined\"\n                      >\n                        <MenuItem value=\"currentYear\">Current Year</MenuItem>\n                        <MenuItem value=\"AllYears\">All Years</MenuItem>\n                      </TextField> */}\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default LoginView;\n","import React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Box, Button, Typography, CircularProgress } from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CustomAlert from \"../../components/CustomAlert\";\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport Api from \"../../components/Api\";\nimport Page from \"../../components/Page\";\nimport { setTaxYear } from \"../../redux/app/appSlice\";\n\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst useStyles = makeStyles((theme) => ({\n  submitProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  mainBlock: {\n    // width: \"50vw\",\n    // height: \"100vh\",\n    // display: \"flex\",\n    // flexDirection: \"row\",\n    minWidth: \"400px\",\n    margin: \"0\",\n    padding: \"0\",\n    [theme.breakpoints.down(\"sm\")]: {\n      //   flexDirection: \"column\",\n      minWidth: \"300px\",\n    },\n  },\n}));\n\nconst ForgotPasswordView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\n  const [forgotPasswordState, setForgetPasswordState] = useState({ email: \"\" });\n  const [isResetPasswordSubmitting, setIsRestPasswordSubmitting] =\n    useState(false);\n\n  const handleForgotPassword = () => {\n    const url = Api.forgotPassword;\n    setIsRestPasswordSubmitting(true);\n    const config = {\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n    };\n\n    axios\n      .post(url, forgotPasswordState, config)\n      .then((res) => {\n        setShowAlert({\n          isAlert: true,\n          alertText: res.data[\"message\"],\n          severity: \"success\",\n        });\n        setIsForgotPassword(false);\n        setIsRestPasswordSubmitting(false);\n        setForgetPasswordState({ email: \"\" });\n      })\n      .catch((error) => {\n        console.log(error.response);\n        setShowAlert({\n          isAlert: true,\n          alertText: error.response.data[\"message\"],\n          severity: \"error\",\n          alertTitle: \"Error\",\n        });\n        setIsForgotPassword(false);\n        setIsRestPasswordSubmitting(false);\n        setForgetPasswordState({ email: \"\" });\n      });\n  };\n\n  return (\n    <Box className={classes.mainBlock}>\n      {showAlert.isAlert ? (\n        <CustomAlert\n          open={showAlert.isAlert}\n          severity={showAlert.severity}\n          alertTitle={showAlert.alertTitle}\n          alertText={showAlert.alertText}\n          onClose={() =>\n            setShowAlert({\n              isAlert: false,\n              alertTitle: \"\",\n              alertText: \"\",\n              severity: \"\",\n            })\n          }\n        />\n      ) : null}\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        {/* <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              marginBottom={2}\n            >\n              \n            </Box> */}\n\n        <Box mb={3}>\n          <Typography color=\"textPrimary\" variant=\"h4\">\n            FORGOT PASSWORD?\n          </Typography>\n        </Box>\n\n        <CustomInputTextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          attribute=\"Email ID (User ID)\"\n          is_required={true}\n          type=\"email\"\n          fullWidth\n          autoComplete=\"off\"\n          value={forgotPasswordState.email}\n          onChange={(e) => setForgetPasswordState({ email: e.target.value })}\n        />\n\n        <Box my={2}>\n          <Button\n            onClick={handleForgotPassword}\n            color=\"primary\"\n            disabled={isResetPasswordSubmitting}\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Reset Password\n            {isResetPasswordSubmitting && (\n              <CircularProgress size={24} className={classes.submitProgress} />\n            )}\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ForgotPasswordView;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Avatar, Typography, Box, Grid, Container } from \"@mui/material\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport PaidIcon from \"@mui/icons-material/Paid\";\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\n\n// Your remaining components and code here\nimport Page from \"../../components/Page\";\nimport LoginView from \"./LoginView\";\nimport ForgotPasswordView from \"./ForgotPassword\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    border: \"1px solid #000000\",\n    padding: \"20px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#f7f7f7\",\n    // maxHeight: \"50vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"300px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      minHeight: \"280px\",\n      padding: \"20px 10px\",\n    },\n  },\n  logoAvatar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      //   marginLeft: \"200px\",\n      marginRight: \"auto\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"150px\",\n    },\n  },\n}));\n\nexport const AppBar = () => {\n  const customStyles = useStyles();\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#fafafa\",\n        padding: \"5px 20px\",\n      }}\n    >\n      <Box\n        sx={{\n          display: { xs: \"none\", sm: \"block\" },\n        }}\n      >\n        <Box sx={{ display: \"flex\" }}>\n          <Avatar\n            variant=\"square\"\n            src=\"/static/img/onecall-logo.png\"\n            sx={{\n              height: 50,\n              width: 140,\n              marginBottom: \"10px\",\n            }}\n            className={customStyles.logoAvatar}\n          />\n          <Typography\n            variant=\"h6\"\n            sx={{\n              fontSize: \"16px\",\n              marginTop: \"12px\",\n              marginLeft: \"20px\",\n            }}\n          >\n            WE MAKE TAX SIMPLE\n          </Typography>\n        </Box>\n        <Typography variant=\"body2\" sx={{ fontSize: \"16px\" }}>\n          <strong>Phone:</strong> (248) 971-3300\n        </Typography>\n        <Typography variant=\"body2\" sx={{ fontSize: \"16px\" }}>\n          <strong>E-mail:</strong> Onecalltaxservices.digital@gmail.com\n        </Typography>\n      </Box>\n      <Avatar\n        variant=\"square\"\n        src=\"/static/img/irs_image.jpg\"\n        sx={{\n          width: \"81px\",\n          height: \"83px\",\n          display: { xs: \"none\", sm: \"flex\" },\n        }}\n      />\n\n      <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\n        <Avatar\n          variant=\"square\"\n          src=\"/static/img/onecall-logo.png\"\n          sx={{\n            height: 50,\n            width: 140,\n            marginTop: \"12px\",\n            marginBottom: \"10px\",\n          }}\n          className={customStyles.logoAvatar}\n        />\n        <Typography\n          variant=\"h6\"\n          sx={{\n            fontSize: \"16px\",\n          }}\n        >\n          WE MAKE TAX SIMPLE\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst Authentication = () => {\n  const customStyles = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Page title=\"Login\">\n      <Box sx={{ backgroundColor: \"#183360\", height: \"100vh\" }}>\n        <Container maxWidth=\"lg\">\n          <Box sx={{ backgroundColor: \"#fafafa\", padding: \"5px 5px 30px\" }}>\n            <AppBar />\n            <Box sx={{ padding: { xs: 0, sm: \"20px 30px\" } }}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <Box className={customStyles.box}>\n                    <LoginView />\n                  </Box>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Box className={customStyles.box}>\n                    <ForgotPasswordView />\n                  </Box>\n                </Grid>\n              </Grid>\n\n              <Box\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography variant=\"h5\">New Client? Please</Typography>\n\n                <Avatar\n                  onClick={() => navigate(\"/register\")}\n                  variant=\"square\"\n                  src=\"/static/img/register.png\"\n                  sx={{ height: 33, width: 99, marginLeft: \"10px\" }}\n                />\n              </Box>\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default Authentication;\n","import React from \"react\";\nimport { Box, TextField, Grid, Typography } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst NO_WRAP_ATTRIBUTES = [\n  \"Middle Initial\",\n  \"Email Address\",\n  \"Password\",\n  \"Email ID (User ID)\",\n  \"Confirm Password\",\n  \"Referral ID (Optional)\",\n];\n\nconst CustomInputTextField = ({\n  attribute,\n  is_required,\n  attributeTextAlign,\n  attributeMarginTop,\n  ...others\n}) => {\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        maxHeight: \"60px\",\n      }}\n    >\n      <Grid container>\n        <Grid\n          item\n          xs={4}\n          sx={{ marginTop: attributeMarginTop ? attributeMarginTop : \"24px\" }}\n        >\n          {/* <Typography\n            sx={{\n              margin: \"20px 10px\",\n              fontSize: \"16px\",\n              lineHeight: \"24px\",\n              fontWeight: 400,\n            }}\n          >\n            {is_required ? (\n              <>\n                {attribute}\n                <span\n                  style={{\n                    color: \"red\", // Set color to red\n                    fontSize: \"16px\",\n                    marginLeft: \"3px\",\n                  }}\n                >\n                  {\" \"}\n                  *\n                </span>\n              </>\n            ) : (\n              attribute\n            )}\n          </Typography> */}\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              marginRight: { xs: 0, sm: attributeTextAlign ? \"5px\" : 0 },\n              justifyContent: {\n                xs: \"flex-start\",\n                sm: attributeTextAlign ? \"flex-end\" : \"flex-start\",\n              },\n            }}\n          >\n            <Typography\n              variant=\"body1\"\n              sx={{\n                whiteSpace: NO_WRAP_ATTRIBUTES.includes(attribute)\n                  ? \"nowrap\"\n                  : \"pre-wrap\",\n              }}\n            >\n              {attribute}\n            </Typography>\n            {is_required && (\n              <Typography\n                sx={{\n                  color: \"red\",\n                  fontSize: \"0.875rem\",\n                  marginLeft: \"3px\",\n                }}\n              >\n                *\n              </Typography>\n            )}\n            &nbsp;:\n          </Box>\n        </Grid>\n        <Grid item xs={attribute === \"Income Amount\" ? 4 : 8}>\n          <TextField\n            {...others}\n            sx={{\n              \"& .MuiOutlinedInput-root\": {\n                \"& fieldset\": {\n                  borderRadius: \"2px\",\n                },\n              },\n              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n                border: \"0.1px solid #bdbdbd\",\n              },\n              \"& .MuiOutlinedInput-input\": {\n                padding: \"10px\",\n                backgroundColor: \"rgba(255,255,255,1)\",\n              },\n              width: \"90%\",\n            }}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nCustomInputTextField.prototype = {\n  is_required: PropTypes.bool,\n  attribute: PropTypes.string, //['success','warning', 'error']\n  attributeTextAlign: PropTypes.string, //['success','warning', 'error']\n  attributeMarginTop: PropTypes.string,\n};\n\nexport default CustomInputTextField;\n","export const statesNames = [\n  { value: \"SELECT\", label: \"SELECT\" },\n  { value: \"Alabama\", label: \"Alabama\" },\n  { value: \"Alaska\", label: \"Alaska\" },\n  { value: \"Arizona\", label: \"Arizona\" },\n  { value: \"Arkansas\", label: \"Arkansas\" },\n  { value: \"California\", label: \"California\" },\n  { value: \"Colorado\", label: \"Colorado\" },\n  { value: \"Connecticut\", label: \"Connecticut\" },\n  { value: \"Delaware\", label: \"Delaware\" },\n  { value: \"Florida\", label: \"Florida\" },\n  { value: \"Georgia\", label: \"Georgia\" },\n  { value: \"Hawaii\", label: \"Hawaii\" },\n  { value: \"Idaho\", label: \"Idaho\" },\n  { value: \"Illinois\", label: \"Illinois\" },\n  { value: \"Indiana\", label: \"Indiana\" },\n  { value: \"Iowa\", label: \"Iowa\" },\n  { value: \"Kansas\", label: \"Kansas\" },\n  { value: \"Kentucky\", label: \"Kentucky\" },\n  { value: \"Louisiana\", label: \"Louisiana\" },\n  { value: \"Maine\", label: \"Maine\" },\n  { value: \"Maryland\", label: \"Maryland\" },\n  { value: \"Massachusetts\", label: \"Massachusetts\" },\n  { value: \"Michigan\", label: \"Michigan\" },\n  { value: \"Minnesota\", label: \"Minnesota\" },\n  { value: \"Mississippi\", label: \"Mississippi\" },\n  { value: \"Missouri\", label: \"Missouri\" },\n  { value: \"Montana\", label: \"Montana\" },\n  { value: \"Nebraska\", label: \"Nebraska\" },\n  { value: \"Nevada\", label: \"Nevada\" },\n  { value: \"New Hampshire\", label: \"New Hampshire\" },\n  { value: \"New Jersey\", label: \"New Jersey\" },\n  { value: \"New Mexico\", label: \"New Mexico\" },\n  { value: \"New York\", label: \"New York\" },\n  { value: \"North Carolina\", label: \"North Carolina\" },\n  { value: \"North Dakota\", label: \"North Dakota\" },\n  { value: \"Ohio\", label: \"Ohio\" },\n  { value: \"Oklahoma\", label: \"Oklahoma\" },\n  { value: \"Oregon\", label: \"Oregon\" },\n  { value: \"Pennsylvania\", label: \"Pennsylvania\" },\n  { value: \"Rhode Island\", label: \"Rhode Island\" },\n  { value: \"South Carolina\", label: \"South Carolina\" },\n  { value: \"South Dakota\", label: \"South Dakota\" },\n  { value: \"Tennessee\", label: \"Tennessee\" },\n  { value: \"Texas\", label: \"Texas\" },\n  { value: \"Utah\", label: \"Utah\" },\n  { value: \"Vermont\", label: \"Vermont\" },\n  { value: \"Virginia\", label: \"Virginia\" },\n  { value: \"Washington\", label: \"Washington\" },\n  { value: \"West Virginia\", label: \"West Virginia\" },\n  { value: \"Wisconsin\", label: \"Wisconsin\" },\n  { value: \"Wyoming\", label: \"Wyoming\" },\n  { value: \"Foreign\", label: \"Foreign\" },\n  { value: \"District of Columbia\", label: \"District of Columbia\" },\n];\n\nexport const countryCode = [\n  { value: \"Select\", label: \"Select\" },\n  { value: \"+91 (India)\", label: \"+91 (India)\" },\n  { value: \"+1 (USA / Canada)\", label: \"+1 (USA / Canada)\" },\n  { value: \"+44 (U.K)\", label: \"+44 (U.K)\" },\n  { value: \"+49 (Germany)\", label: \"+49 (Germany)\" },\n  { value: \"+60 (Malaysia)\", label: \"+60 (Malaysia)\" },\n  { value: \"+61 (Australia)\", label: \"+61 (Australia)\" },\n  { value: \"+65 (Singapore)\", label: \"+65 (Singapore)\" },\n  { value: \"+81 (Japan)\", label: \"+81 (Japan)\" },\n  { value: \"+86 (China)\", label: \"+86 (China)\" },\n  { value: \"Others\", label: \"Others\" },\n];\nexport const refundTypes = [\n  \"FEDERAL REFUND\",\n  \"FEDERAL AMENDMENT\",\n  \"STATE AMENDMENT\",\n  \"FBAR TAX PAYER\",\n  \"FBAR SPOUSE\",\n  \"FBAR COMBINED\",\n  \"CITY FILING 1\",\n  \"CITY FILING 2\",\n  \"CITY FILING 3\",\n  \"CITY FILING 4\",\n  \"EXTENSION FILING\",\n  \"OTHER\",\n  \"ADVANCE PAYMENT\",\n  \"REFERRAL DISCOUNT\",\n];\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Snackbar } from \"@mui/material\";\nimport { Alert, AlertTitle } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(10),\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\n  },\n  alertContainer: {\n    minWidth: 350,\n  },\n}));\n\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\n  let vertical = \"top\",\n    horizontal = \"right\";\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={onClose}\n      className={classes.root}\n    >\n      <Alert\n        severity={severity}\n        onClose={onClose}\n        className={classes.alertContainer}\n      >\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\n        {alertText}!\n      </Alert>\n    </Snackbar>\n  );\n};\n\nCustomAlert.prototype = {\n  open: PropTypes.bool,\n  severity: PropTypes.string, //['success','warning', 'error']\n  alertText: PropTypes.string,\n  alertTitle: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default CustomAlert;\n"],"sourceRoot":""}