{"version":3,"sources":["webpack:///./src/views/Refer/referFriend.js","webpack:///./src/views/Refer/referralDiscount.js","webpack:///./src/views/Refer/myReferrer.js","webpack:///./src/views/Refer/myReferrals.js","webpack:///./src/views/Refer/tabsDesktop.js","webpack:///./src/views/Refer/accordinMobile.js","webpack:///./src/views/Refer/index.js","webpack:///./src/utils/index.js","webpack:///./src/views/TaxFilling/Forms/DependantDetails.js","webpack:///./src/views/TaxFilling/Forms/FilerDetails.js","webpack:///./src/views/TaxFilling/Forms/IncomeDetails.js","webpack:///./src/views/TaxFilling/Forms/BankDetails.js","webpack:///./src/views/TaxFilling/Forms/TaxReturns.js","webpack:///./src/views/TaxFilling/Forms/TaxDocs.js","webpack:///./src/views/TaxFilling/TabsDesktop.js","webpack:///./src/views/TaxFilling/AdminTaxFilingpage/index.js","webpack:///./src/views/TaxFilling/ConfirmClientDialogBox/index.js","webpack:///./src/views/TaxFilling/Forms/PickAppointment.js","webpack:///./src/views/Home/payPalPayment.js","webpack:///./src/views/TaxFilling/Forms/ConfirmDetails.js","webpack:///./src/views/TaxFilling/Forms/RefundQuote.js","webpack:///./src/views/TaxFilling/AccordionMobile.js","webpack:///./src/views/TaxFilling/ClientTaxFilingPage/index.js","webpack:///./src/views/TaxFilling/index.js","webpack:///./src/views/Auth/LoginView.js","webpack:///./src/views/Auth/ForgotPassword.js","webpack:///./src/views/Auth/index.js","webpack:///./src/components/CustomInputField.js","webpack:///./src/constants/index.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["initialValues","firstName","lastName","email","contact","validationSchema","Yup","shape","required","ReferFriend","_ref","_useState2","_slicedToArray","useState","setIsReferalDetailsLoading","React","createElement","Box","sx","marginTop","backgroundColor","padding","sm","xs","paddingTop","paddingBottom","bgcolor","transition","borderRadius","boxShadow","overflow","_defineProperty","Container","maxWidth","Typography","variant","Formik","onSubmit","values","_ref2","setSubmitting","resetForm","payload","_objectSpread","privateApiPOST","Api","makeReferal","then","response","status","data","console","log","error","_ref3","handleChange","errors","touched","handleBlur","Form","Grid","container","spacing","marginLeft","marginBottom","item","marginRight","CustomInputTextField","attribute","margin","name","onBlur","onChange","fullWidth","value","Boolean","helperText","justifyContent","alignItems","textAlign","Button","type","color","ReferralDiscount","List","ListItem","size","MyReferrer","setIsReferralDetailsLoading","_useState4","referralEmail","referralID","referralDetails","setReferralDetails","useEffect","sessionStorage","getItem","privateApiGET","profile","disabled","customTextStyles","makeStyles","theme","tableHeader","fontSize","fontWeight","lineHeight","breakpoints","down","display","tableData","headerText","confirmButton","mobileViewTableCellValue","mobileView","cursor","border","up","mobileViewTableCellHeader","MyReferrals","customStyles","joined","not_joined","referalDetails","setReferalDetails","TableContainer","Table","borderCollapse","TableHead","TableRow","TableCell","className","TableBody","length","map","row","id","key","first_name","last_name","phone_no","flexDirection","contact_no","accordion","accordionHeader","opacity","paddingLeft","maxHeight","accordionHeaderText","accordionColumn","accordionColumnHeaderText","accordionColumnText","footerText","collpaseIcon","TabsDesktop","handleFetchData","customTextClasses","setValue","CustomTabPanel","props","children","index","other","_objectWithoutProperties","_excluded","_extends","role","hidden","concat","a11yProps","propTypes","PropTypes","node","number","isRequired","width","borderBottom","borderColor","Tabs","event","newValue","Tab","label","tabHeaderText","BasicAccordion","expanded","setExpanded","panel","isExpanded","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","ReferPage","Page","title","capitalizeString","str","charAt","toUpperCase","slice","toLowerCase","buttons","CustomLabel","style","DependantDetails","open","providedLivingSupport","dependantDetails","handleFetchDependantDetails","handleDeleteDependant","isDependantDetailsLoading","setIsDependantDetailsLoading","transform","input","includes","replace","isNewDependant","additionalFirstName","additionalMiddleInitial","additionalLastName","additionalSsnOrItin","additionalApplyForItin","additionalDateOfBirth","additionalGender","additionalOccupation","additionalVisaType","additionalEmail","additionalStayCount","additionalRelationship","formData","max","addDependant","_ref4","handleSubmit","isSubmitting","setFieldValue","autoComplete","is_required","select","MenuItem","wordSpacing","startIcon","RemoveIcon","AddIcon","onClick","lg","ButtonBase","handleDownloadTemplate","textDecoration","disableTouchRipple","dependantRelationships","each","InputLabelProps","shrink","InputProps","inputProps","placeholder","whiteSpace","residentialStatus","CircularProgress","DeleteIcon","ml","flexWrap","FilerDetails","personalDetails","contactDetails","spouseDetails","incomeDetails","isFilerDetailsLoading","setIsFilerDetailsLoading","_useState6","setDependantDetails","formatPhoneNumber","phoneNumber","_useState8","middleName","ssn","dateOfBirth","gender","occupation","street","apartment","city","state","zipCode","country","primaryCountryCode","primaryPhoneNumber","secondaryCountryCode","secondaryPhoneNumber","contactEmail","taxFiledLastYear","taxPayerStatus","spouseFirstName","spouseMiddleInitial","spouseLastName","spouseSsnOrItin","spouseApplyForItin","spouseDateOfBirth","spouseGender","spouseOccupation","spouseResidentialStatus","spouseEmail","stateOptions","statesNames","countryCodes","countryCode","minHeight","position","matches","Date","when","is","otherwise","personalContactDetails","leftSide","attributeTextAlign","rightSide","option","TextField","bottom","left","endIcon","ArrowForwardIosIcon","dependantId","taxFilingId","deleteDependant","IncomeDetails","isIncomeDetailsLoading","setIsIncomeDetailsLoading","interestIncome","dividendIncome","soldStocks","soldCrypto","foreignIncome","retirementAccounts","stateTaxRefund","foreignBankAccount","foreignAssets","rentalIncome","income1099","incomeDescription","incomeAmount","addAdditionalInformation","FormControl","component","FormLabel","RadioGroup","FormControlLabel","control","Radio","Tooltip","placement","ArrowBackIosIcon","bankingType","bankName","accountHolderName","ownership","routingNumber","confirmRoutingNumber","oneOf","accountNumber","confirmAccountNumber","accountType","confirmAccountType","BankDetails","isBankDetailsLoading","setIsBankDetailsLoading","bankDetails","align","TaxReturns","params","useParams","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","useSelector","app","isLoading","setIsLoading","isImport","isImpoFormSubmitting","selectedFile","remarks","isMyTaxDocsLoading","myTaxDocs","setState","handleDownloadFile","file","file_name","downloadTaxDocsFile","responseType","res","url","window","URL","createObjectURL","Blob","anchor","document","href","setAttribute","body","appendChild","click","err","handleDeleteFile","file_id","deleteTaxDocsFile","handleFetchMyTaxDocs","_data","prev","uploadTaxDocs","CustomAlert","onClose","e","target","files","accept","visibility","htmlFor","CloudUploadIcon","fontStyle","FormData","append","token","axios","post","headers","Authorization","upload_time","GetApp","alertCard","alertIcon","root","link","info","UploadTaxDocs","handleActiveTabChange","Card","CardContent","Link","Paper","elevation","valign","file_size","FilerDeatils","tabButton","AdminTaxFillingPage","setData","isLoadingSpin","setIsLoadingSpin","parseInt","action","tabsDesktopValue","setTabsDesktopValue","handleFetchTaxFilingDetails","taxFiling","height","zIndex","top","PerfectScrollbar","year","templateDownload","_customizedButton","dialogBox","boldText","normalText","mainText","paper","overflowY","customizedButton","palette","secondary","light","ConfirmedClientConfirmationDialogBox","handleClose","Dialog","scroll","classes","DialogTitle","DialogContent","dividers","IconButton","CloseIcon","DialogActions","PickAppointment","isPickAppointmentDetailsLoading","setIsPickAppointmentDetailsLoading","isConfirmedClientConfirmationDialogBoxOpen","setIsConfirmedClientConfirmationDialogBoxOpen","date","time","timezone","appointmentData","setAppointmentData","appointmentDetails","setAppointmentDetails","_useState10","handleCancelAppointment","appointmentId","deleteAppointment","handleFetchAppointmentDetails","_error$response$data","message","timeOptions","hours","minutes","hourStr","String","padStart","minuteStr","timeOption","push","generateTimeOptions","attributeMarginTop","readOnly","preventDefault","bookAppointment","_error$response$data2","handleFetchAppointmentChange","start_time","end_time","Chip","onCursor","Avatar","alt","src","PayPalPayment","fontFamily","p","mt","useStyles","ConfirmDetails","handlePickAppointment","mb","RefundQuote","ClientTaxFillingPage","isActiveTab","setIsActiveTab","tabName","minWidth","HomePage","_rightSide","submitProgress","mainBlock","avatarLogo","paddingRight","LoginView","navigate","useNavigate","dispatch","useDispatch","Fragment","password","login","config","Cookies","get","_res$data","setItem","setTaxYear","taxYear","my","ForgotPasswordView","setIsForgotPassword","forgotPasswordState","setForgetPasswordState","isResetPasswordSubmitting","setIsRestPasswordSubmitting","autoFocus","forgotPassword","_logoAvatar","box","logoAvatar","AppBar","Authentication","backgroundImage","backgroundRepeat","backgroundSize","NO_WRAP_ATTRIBUTES","others","prototype","bool","string","refundTypes","forwardRef","ref","_ref$title","rest","Helmet","alertContainer","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { useState } from \"react\";\nimport Page from \"../../components/Page\";\nimport { Grid, Box, Typography, Button, Container } from \"@mui/material\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Api from \"../../components/Api\";\nimport { privateApiPOST } from \"../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  contact: \"\",\n};\n\nconst validationSchema = Yup.object().shape({\n  firstName: Yup.string().required(\"First Name is required\"),\n  lastName: Yup.string().required(\"Last Name is required\"),\n  email: Yup.string()\n    .email(\"Invalid email format\")\n    .required(\"Email is required\"),\n  contact: Yup.string().required(\"Contact number is required\"),\n});\n\nconst ReferFriend = () => {\n  const [isReferalDetailsLoading, setIsReferalDetailsLoading] = useState(false);\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h4\">Referal Details:</Typography>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            setIsReferalDetailsLoading(true);\n            setSubmitting(true);\n            let payload = { ...values };\n            privateApiPOST(Api.makeReferal, payload)\n              .then((response) => {\n                const { status, data } = response;\n                if (status === 200) {\n                  console.log(\"data\", data);\n                  setIsReferalDetailsLoading(false);\n                  resetForm();\n                  setSubmitting(false);\n                }\n              })\n              .catch((error) => {\n                console.log(\"Error\", error);\n                setIsReferalDetailsLoading(false);\n                setSubmitting(false);\n              });\n          }}\n        >\n          {({ values, handleChange, errors, touched, handleBlur }) => (\n            <Form>\n              <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\n                <Grid\n                  container\n                  sx={{\n                    marginBottom: \"30px\",\n                    marginTop: \"30px\",\n                  }}\n                >\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                    <CustomInputTextField\n                      attribute=\"First Name\"\n                      margin=\"normal\"\n                      name=\"firstName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.firstName}\n                      variant=\"outlined\"\n                      error={Boolean(touched.firstName && errors.firstName)}\n                      helperText={touched.firstName && errors.firstName}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                    <CustomInputTextField\n                      attribute=\"Last Name\"\n                      margin=\"normal\"\n                      name=\"lastName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.lastName}\n                      variant=\"outlined\"\n                      error={Boolean(touched.lastName && errors.lastName)}\n                      helperText={touched.lastName && errors.lastName}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                    <CustomInputTextField\n                      attribute=\"Email\"\n                      margin=\"normal\"\n                      name=\"email\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.email}\n                      variant=\"outlined\"\n                      error={Boolean(touched.email && errors.email)}\n                      helperText={touched.email && errors.email}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                    <CustomInputTextField\n                      attribute=\"Contact\"\n                      margin=\"normal\"\n                      name=\"contact\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.contact}\n                      variant=\"outlined\"\n                      error={Boolean(touched.contact && errors.contact)}\n                      helperText={touched.contact && errors.contact}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid\n                  container\n                  justifyContent=\"center\" // Center horizontally\n                  alignItems=\"center\" // Center vertically\n                >\n                  <Box\n                    sx={{\n                      textAlign: \"center\",\n                      paddingBottom: { xs: \"20px\" },\n                    }}\n                  >\n                    <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      sx={{\n                        marginRight: { xs: \"0px\", sm: \"130px\" },\n                      }}\n                    >\n                      Submit\n                    </Button>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n    </Box>\n  );\n};\n\nexport default ReferFriend;\n","import { Typography, Box, Container, List, ListItem } from \"@mui/material\";\nimport React from \"react\";\n\nconst ReferralDiscount = () => {\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Box>\n          <Typography variant=\"h3\">Referral Discount Details :</Typography>\n          <Typography sx={{ marginTop: \"10px\" }}>\n            1 - 4 New Clients Referred : $10 for each client who completes their\n            tax filing with us\n          </Typography>\n          <Typography sx={{ marginTop: \"10px\" }}>\n            5 - 9 New Clients Referred : $20 for each client who completes their\n            tax filing with us\n          </Typography>\n          <Typography sx={{ marginTop: \"10px\" }}>\n            10 or more New Clients Referred : $30 for each client who completes\n            their tax filing with us\n          </Typography>\n          <List>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> All Referral Discounts will be applied only\n                if newly referred clients complete their tax filing with us\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> Referral discount will be used towards your\n                tax filing fee\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> If you have more referral discount than your\n                tax filing fee, it will be carried forward and used towards your\n                future service fee with Onecall Tax Services Inc\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> Referral discount cannot be transferred from\n                one client to another\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> You can earn as much referral discount as\n                possible by referring more new clients to us every year\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> New Client means who did not file with\n                Onecall Tax Services Inc in any of the previous years\n              </Typography>\n            </ListItem>\n            <ListItem>\n              <Box variant=\"body1\">\n                <font color=\"green\" size=\"2\">\n                  Example:\n                  <ul>\n                    <li>You referred 5 new clients in this year</li>\n                    <li>\n                      3 of them filed with us and 2 of them did not complete\n                      their tax return with us. You get referral discount for 3\n                      new clients who completed their filing with us\n                    </li>\n                    <li>\n                      Referral discount would be $10 per client. So you have\n                      earned $30 referral discount\n                    </li>\n                    <li>\n                      This discount will be applied on your filing fee when you\n                      are filing your tax return. If you filed your tax return\n                      already, the discount will be carried forward to your\n                      future filing fee (or any other service fee with Onecall\n                      Tax Services Inc)\n                    </li>\n                  </ul>\n                </font>\n              </Box>\n            </ListItem>\n            <ListItem>\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n                <strong>*</strong> All amounts indicated here are in legal US\n                Dollars\n              </Typography>\n            </ListItem>\n          </List>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default ReferralDiscount;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Container, Typography, Box, Grid, TextField } from \"@mui/material\";\nimport Api from \"../../components/Api\";\nimport { privateApiGET } from \"../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst MyReferrer = () => {\n  const [isReferralDetailsLoading, setIsReferralDetailsLoading] =\n    useState(false);\n  const [referralDetails, setReferralDetails] = useState({\n    referralEmail: \"\",\n    referralID: \"\",\n  });\n\n  const handleFetchProfileDetails = () => {\n    setIsReferralDetailsLoading(true);\n    privateApiGET(Api.profile)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setReferralDetails({\n            ...referralDetails,\n            referralEmail: data?.data[\"referred_by\"],\n            referralID: data?.data[\"referral_id\"],\n          });\n          setIsReferralDetailsLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsReferralDetailsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\")) {\n      handleFetchProfileDetails();\n    }\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h4\">Referal Details:</Typography>\n\n        <Grid container>\n          <Grid item sm={5} xs={12} sx={{ marginRight: \"20px\" }}>\n            <CustomInputTextField\n              fullWidth\n              attribute=\"Referral ID\"\n              margin=\"normal\"\n              name=\"referralID\" // Updated name\n              disabled\n              value={referralDetails.referralID} // Updated value\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item sm={5} xs={12} sx={{ marginRight: \"20px\" }}>\n            <CustomInputTextField\n              fullWidth\n              attribute=\"Referral Email\"\n              margin=\"normal\"\n              name=\"referralEmail\" // Updated name\n              value={referralDetails.referralEmail} // Updated value\n              variant=\"outlined\"\n              disabled\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default MyReferrer;\n","import React, { useState, useEffect, Component } from \"react\";\nimport {\n  Grid,\n  Box,\n  Link,\n  Avatar,\n  Typography,\n  Button,\n  Container,\n  Card,\n  CardContent,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  TextField,\n  Radio,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n  FormControl,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport Api from \"../../components/Api\";\nimport { privateApiGET } from \"../../components/PrivateRoute\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: \"700\",\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  headerText: {\n    fontSize: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"32px\",\n    marginBottom: \"16px\",\n    color: \"#2069DB\",\n  },\n  confirmButton: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    lineHeight: \"19px\",\n    color: \"#FFFFFF\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n}));\n\nconst MyReferrals = () => {\n  const customStyles = customTextStyles();\n  const [isReferalDetailsLoading, setIsReferalDetailsLoading] = useState(false);\n  const [referalDetails, setReferalDetails] = useState({\n    joined: [],\n    not_joined: [],\n  });\n\n  const handleFetchReferalDetails = () => {\n    privateApiGET(Api.referalDetails)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setReferalDetails({\n            joined: data?.data[\"joined\"],\n            not_joined: data?.data[\"not_joined\"],\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n      });\n  };\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\")) {\n      handleFetchReferalDetails();\n    }\n  }, []);\n  console.log(referalDetails);\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Box>\n          <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\n            Registerd Till Now:\n          </Typography>\n          <TableContainer sx={{ marginTop: \"32px\" }}>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n              aria-label=\"Place Order Series Table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={customStyles.tableHeader}>\n                    First Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Last Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Email Id\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Phone Number\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {referalDetails[\"joined\"].length > 0 &&\n                  referalDetails[\"joined\"].map((row, id) => (\n                    <TableRow key={id}>\n                      <TableCell className={customStyles.tableData}>\n                        {row.first_name}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.last_name}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.email}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.phone_no}\n                      </TableCell>\n                      <TableCell className={customStyles.mobileView}>\n                        <Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                First Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.first_name}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Last Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.last_name}\n                              </Typography>\n                            </Box>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Email Id\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.email}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Phone Number\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.phone_no}\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n        <Box sx={{ marginTop: { xs: \"16px\", sm: \"24px\" } }}>\n          <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\n            Referred Till Now:\n          </Typography>\n          <TableContainer sx={{ marginTop: \"32px\" }}>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n              aria-label=\"Place Order Series Table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={customStyles.tableHeader}>\n                    First Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Last Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Email Id\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Phone Number\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {referalDetails[\"not_joined\"].length > 0 &&\n                  referalDetails[\"not_joined\"].map((row, id) => (\n                    <TableRow key={id}>\n                      <TableCell className={customStyles.tableData}>\n                        {row.first_name}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.last_name}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.email}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.contact_no}\n                      </TableCell>\n                      <TableCell className={customStyles.mobileView}>\n                        <Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\", marginRight: \"10px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                First Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.first_name}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\", marginRight: \"10px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Last Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.last_name}\n                              </Typography>\n                            </Box>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Email Id\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.email}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Phone Number\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.contact_no}\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default MyReferrals;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport config from \"../../config\";\n// Material UI\nimport { Grid, Box, Avatar, Typography, Tabs, Tab } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport PropTypes from \"prop-types\";\nimport PercentIcon from \"@mui/icons-material/Percent\";\nimport Groups from \"@mui/icons-material/Groups\";\nimport ListAlt from \"@mui/icons-material/ListAlt\";\nimport AspectRatioOutlined from \"@mui/icons-material/AspectRatioOutlined\";\nimport UnfoldLess from \"@mui/icons-material/UnfoldLess\";\nimport UnfoldMore from \"@mui/icons-material/UnfoldMore\";\nimport DiscountOutlined from \"@mui/icons-material/DiscountOutlined\";\nimport MonetizationOnOutlined from \"@mui/icons-material/MonetizationOnOutlined\";\nimport InsertPageBreakOutlined from \"@mui/icons-material/InsertPageBreakOutlined\";\nimport DescriptionOutlined from \"@mui/icons-material/DescriptionOutlined\";\nimport StackedBarChartOutlined from \"@mui/icons-material/StackedBarChartOutlined\";\nimport PriceCheckOutlined from \"@mui/icons-material/PriceCheckOutlined\";\nimport SavingsOutlinedIcon from \"@mui/icons-material/SavingsOutlined\";\nimport AccountBalanceWalletOutlinedIcon from \"@mui/icons-material/AccountBalanceWalletOutlined\";\nimport ReferFriend from \"./referFriend\";\nimport ReferralDiscount from \"./referralDiscount\";\nimport MyReferrer from \"./myReferrer\";\nimport MyReferrals from \"./myReferrals\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst TabsDesktop = ({ data, handleFetchData }) => {\n  const customTextClasses = customTextStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function CustomTabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box>{children}</Box>}\n      </div>\n    );\n  }\n\n  CustomTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Box\n        sx={{\n          width: \"100%\",\n          marginBottom: \"64px\",\n        }}\n      >\n        <Box\n          sx={{\n            borderBottom: 1,\n            borderColor: \"divider\",\n            margin: \"8px 32px 32px 10px\",\n          }}\n        >\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"basic tabs example\"\n          >\n            <Tab\n              label=\"Referral Discount\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(0)}\n            />\n            <Tab\n              label=\"My Referrals\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(1)}\n            />\n            <Tab\n              label=\"Refer a Friend\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(2)}\n            />\n            <Tab\n              label=\"My Referrer\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(2)}\n            />\n          </Tabs>\n        </Box>\n\n        <CustomTabPanel value={value} index={0}>\n          <ReferralDiscount />\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={1}>\n          <MyReferrals />\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={2}>\n          <Grid container>\n            <Grid item xs={12}>\n              <Box>\n                <ReferFriend />\n              </Box>\n            </Grid>\n          </Grid>\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={3}>\n          <MyReferrer />\n        </CustomTabPanel>\n      </Box>\n    </Grid>\n  );\n};\nexport default TabsDesktop;\n","import React, { useState } from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport PercentIcon from \"@mui/icons-material/Percent\";\nimport Groups from \"@mui/icons-material/Groups\";\nimport ListAlt from \"@mui/icons-material/ListAlt\";\nimport AspectRatioOutlined from \"@mui/icons-material/AspectRatioOutlined\";\nimport UnfoldLess from \"@mui/icons-material/UnfoldLess\";\nimport UnfoldMore from \"@mui/icons-material/UnfoldMore\";\nimport DiscountOutlined from \"@mui/icons-material/DiscountOutlined\";\nimport MonetizationOnOutlined from \"@mui/icons-material/MonetizationOnOutlined\";\nimport InsertPageBreakOutlined from \"@mui/icons-material/InsertPageBreakOutlined\";\nimport DescriptionOutlined from \"@mui/icons-material/DescriptionOutlined\";\nimport StackedBarChartOutlined from \"@mui/icons-material/StackedBarChartOutlined\";\nimport PriceCheckOutlined from \"@mui/icons-material/PriceCheckOutlined\";\nimport { Grid, Box, Avatar, Typography } from \"@mui/material\";\nimport SavingsOutlinedIcon from \"@mui/icons-material/SavingsOutlined\";\nimport AccountBalanceWalletOutlinedIcon from \"@mui/icons-material/AccountBalanceWalletOutlined\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport config from \"../../config\";\nimport { makeStyles } from \"@mui/styles\";\nimport ReferFriend from \"./referFriend\";\nimport ReferralDiscount from \"./referralDiscount\";\nimport MyReferrer from \"./myReferrer\";\nimport MyReferrals from \"./myReferrals\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst BasicAccordion = ({ data, handleFetchData }) => {\n  const customTextClasses = customTextStyles();\n  const [expanded, setExpanded] = useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <Box>\n      <Accordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel1\" ? \"600\" : \"400\" }}\n          >\n            Referral Discount\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails\n          sx={{\n            bgcolor: \"#FAFAFA\",\n          }}\n        >\n          <ReferralDiscount />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel2\"}\n        onChange={handleChange(\"panel2\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel2\" ? \"600\" : \"400\" }}\n          >\n            My Referrals\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <MyReferrals />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel3\"}\n        onChange={handleChange(\"panel3\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3a-content\"\n          id=\"panel3a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\n          >\n            Refer a Friend\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <ReferFriend />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel4\"}\n        onChange={handleChange(\"panel4\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel4a-content\"\n          id=\"panel4a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\n          >\n            My Referral\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <MyReferrer />\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n};\n\nexport default BasicAccordion;\n","import React, { useEffect, useState } from \"react\";\nimport Page from \"../../components/Page\";\nimport { Grid, Container, Box, CircularProgress } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\n\nimport TabsDesktop from \"./tabsDesktop\";\nimport BasicAccordion from \"./accordinMobile\";\n\nimport Api from \"../../components/Api\";\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\nimport DrawerAppBar from \"../../Layout/MainLayout/appBarMaterialUI\";\n\nconst ReferPage = () => {\n  return (\n    <Page title={\"Refer\"}>\n      <Container maxWidth=\"lg\">\n        <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n          <TabsDesktop />\n        </Box>\n        <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\n          <BasicAccordion />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ReferPage;\n","// Convert number to thousand separated string\n// eg: 100000 -> 100,000\nexport function thousands_separators(num) {\n  if (num) {\n    var num_parts = num.toString().split(\".\");\n    num_parts[0] = num_parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return num_parts.join(\".\");\n  }\n  return num;\n}\n\nexport function formattedPrice(price) {\n  return price.toLocaleString(\"en-IN\", {\n    style: \"currency\",\n    currency: \"INR\",\n  });\n}\n\nexport const capitalizeString = (str) => {\n  if (str) return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n  else return \"\";\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  MenuItem,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  CircularProgress,\n  ButtonBase,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport { makeStyles } from \"@mui/styles\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { residentialStatus, dependantRelationships } from \"../../../constants\";\nimport Api from \"../../../components/Api\";\nimport { privateApiPOST } from \"../../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: 600,\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: 400,\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    marginBottom: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nexport function CustomLabel({ label, required }) {\n  return (\n    <label style={{ display: \"flex\", alignItems: \"center\" }}>\n      {label}\n      {required && (\n        <span\n          style={{\n            color: \"red\",\n            fontSize: \"16px\",\n            marginLeft: \"3px\",\n          }}\n        >\n          *\n        </span>\n      )}\n    </label>\n  );\n}\n\nconst DependantDetails = ({\n  open,\n  id,\n  providedLivingSupport,\n  dependantDetails,\n  handleFetchDependantDetails,\n  handleDeleteDependant,\n}) => {\n  const customStyles = customTextStyles();\n  const [isDependantDetailsLoading, setIsDependantDetailsLoading] =\n    useState(false);\n\n  const transform = (input) => {\n    if (input === undefined || input === null) {\n      return \"\";\n    }\n\n    if (input.includes(\"-\")) {\n      return input;\n    }\n\n    const rawSsn = input.replace(/-/g, \"\"); // Remove hyphens\n    const formattedSsn = rawSsn\n      .replace(/\\D/g, \"\") // Remove non-digits\n      .replace(/(\\d{3})(\\d{2})(\\d{4})/, \"$1-$2-$3\"); // Format as 123-45-6789\n    return formattedSsn;\n  };\n\n  const [formData, setFormData] = useState({\n    // Personal Details\n\n    providedLivingSupport: providedLivingSupport,\n    isNewDependant: false,\n    additionalFirstName: \"\",\n    additionalMiddleInitial: \"\",\n    additionalLastName: \"\",\n    additionalSsnOrItin: \"\",\n    additionalApplyForItin: false, // Default to \"No\"\n    additionalDateOfBirth: \"\",\n    additionalGender: \"\",\n    additionalOccupation: \"\",\n    additionalVisaType: \"\",\n    additionalEmail: \"\",\n    additionalStayCount: \"\",\n    additionalRelationship: \"\",\n  });\n\n  return (\n    <Box sx={{ marginBottom: \"100px\" }}>\n      {!isDependantDetailsLoading && (\n        <Box>\n          <Formik\n            initialValues={formData}\n            validationSchema={Yup.object().shape({\n              //  additional Details (Add validation rules as needed)\n\n              providedLivingSupport: Yup.boolean().required(\n                \"Please select an option\"\n              ),\n\n              isNewDependant: Yup.boolean().required(\"Please select an option\"),\n\n              additionalFirstName: Yup.string(),\n              additionalMiddleInitial: Yup.string(),\n              additionalLastName: Yup.string(),\n              additionalSsnOrItin: Yup.string(),\n              additionalApplyForItin: Yup.string(),\n              additionalDateOfBirth: Yup.date(),\n              additionalGender: Yup.string(),\n              additionalOccupation: Yup.string(),\n              additionalVisaType: Yup.string(),\n              additionalEmail: Yup.string()\n                .email(\"Must be a valid email\")\n                .max(255),\n              additionalRelationship: Yup.string(),\n              additionalStayCount: Yup.number(),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              setIsDependantDetailsLoading(true);\n              setSubmitting(true);\n              let payload = { ...values, id: id };\n              privateApiPOST(Api.addDependant, payload)\n                .then((response) => {\n                  const { status, data } = response;\n                  if (status === 200) {\n                    console.log(\"data\", data);\n                    setIsDependantDetailsLoading(false);\n                    handleFetchDependantDetails();\n                    setSubmitting(false);\n                    resetForm();\n                  }\n                })\n                .catch((error) => {\n                  console.log(\"Error\", error);\n                  setIsDependantDetailsLoading(false);\n                  setSubmitting(false);\n                });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values,\n              setFieldValue,\n            }) => (\n              <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <Grid container>\n                  <Grid\n                    container\n                    sx={{\n                      marginTop: \"36px\",\n                      marginBottom: \"24px\",\n                    }}\n                  >\n                    <Grid\n                      item\n                      xs={10}\n                      sm={9}\n                      sx={{ display: \"flex\", alignItems: \"center\" }}\n                    >\n                      <Typography variant=\"body1\">\n                        <CustomLabel\n                          label=\" Have you (or your spouse, if married) provided living\n                        support to your kids and/or dependents during the tax\n                        year?\"\n                        />\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={2}>\n                      <CustomInputTextField\n                        attribute=\"\"\n                        is_required={true}\n                        // label={<CustomLabel label=\"\" />}\n                        select\n                        margin=\"normal\"\n                        name=\"providedLivingSupport\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.providedLivingSupport}\n                        variant=\"outlined\"\n                        error={Boolean(\n                          touched.providedLivingSupport &&\n                            errors.providedLivingSupport\n                        )}\n                        helperText={\n                          touched.providedLivingSupport &&\n                          errors.providedLivingSupport\n                        }\n                      >\n                        <MenuItem value={true}>Yes</MenuItem>\n                        <MenuItem value={false}>No</MenuItem>\n                      </CustomInputTextField>\n                    </Grid>\n                  </Grid>\n                  <Grid>\n                    <Typography\n                      variant=\"body1\"\n                      style={{ color: \"blue\", wordSpacing: \"2px\" }}\n                    >\n                      NOTE: Make sure the kids or dependants reported in your\n                      (Taxpayer) 2023 Tax Return are not claimed as dependants\n                      in any other 2023 Individual Tax Returns.\n                    </Typography>\n                  </Grid>\n\n                  {values.providedLivingSupport === true ? (\n                    <Grid item xs={12}>\n                      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                        <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          startIcon={\n                            values.isNewDependant ? <RemoveIcon /> : <AddIcon />\n                          }\n                          onClick={() => {\n                            // Toggle between true and false\n                            setFieldValue(\n                              \"isNewDependant\",\n                              !values.isNewDependant\n                            );\n                          }}\n                          sx={{\n                            margin: \"10px\",\n                          }}\n                        >\n                          {values.isNewDependant\n                            ? \"Remove Dependant\"\n                            : \"Add Dependant\"}\n                        </Button>\n                      </Box>\n                    </Grid>\n                  ) : null}\n\n                  {values.isNewDependant && (\n                    <Grid container spacing={2}>\n                      {/* Left Side - additional Details */}\n                      <Grid item lg={6} sm={6} xs={12}>\n                        <Typography variant=\"h4\">Additional Details</Typography>\n                        <Grid container spacing={2}>\n                          <CustomInputTextField\n                            attribute=\"First Name\"\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"First Name\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalFirstName`}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.additionalFirstName}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalFirstName &&\n                              errors.additionalFirstName\n                            }\n                            helperText={\n                              touched.additionalFirstName &&\n                              errors.additionalFirstName\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Middle Initial\"\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Middle Initial\"\n                            //     required={false}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalMiddleInitial`}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.additionalMiddleInitial}\n                            variant=\"outlined\"\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Last Name\"\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Last Name\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalLastName`}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.additionalLastName}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalLastName &&\n                              errors.additionalLastName\n                            }\n                            helperText={\n                              touched.additionalLastName &&\n                              errors.additionalLastName\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"SSN/ITIN\"\n                            // label={\n                            //   <CustomLabel label=\"SSN/ITIN\" required={true} />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalSsnOrItin`}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={transform(values.additionalSsnOrItin)}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalSsnOrItin &&\n                              errors.additionalSsnOrItin\n                            }\n                            helperText={\n                              touched.additionalSsnOrItin &&\n                              errors.additionalSsnOrItin\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Do you want to apply for ITIN?\"\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Do you want to apply for ITIN?\"\n                            //     required={true}\n                            //   />\n                            // }\n                            select\n                            margin=\"normal\"\n                            name={`additionalApplyForItin`}\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.additionalApplyForItin}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalApplyForItin &&\n                              errors.additionalApplyForItin\n                            }\n                            helperText={\n                              touched.additionalApplyForItin &&\n                              errors.additionalApplyForItin\n                            }\n                          >\n                            <MenuItem value={false}>No</MenuItem>\n                            <MenuItem value={true}>Yes</MenuItem>\n                          </CustomInputTextField>\n                          {values.additionalApplyForItin === true && (\n                            <ButtonBase\n                              onClick={() =>\n                                handleDownloadTemplate(\"ITIN_Information.xls\")\n                              }\n                              sx={{\n                                marginTop: \"20px\",\n                                textDecoration: \"underline\",\n                              }}\n                              disableTouchRipple\n                            >\n                              Download ITIN Information Excel\n                            </ButtonBase>\n                          )}\n\n                          <CustomInputTextField\n                            attribute=\"Relationship\"\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Relationship\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalRelationship`}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            select\n                            value={values.additionalRelationship}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalRelationship &&\n                              errors.additionalRelationship\n                            }\n                            helperText={\n                              touched.additionalRelationship &&\n                              errors.additionalRelationship\n                            }\n                          >\n                            {dependantRelationships.map((each, id) => (\n                              <MenuItem value={each} key={id}>\n                                {each}\n                              </MenuItem>\n                            ))}\n                          </CustomInputTextField>\n                        </Grid>\n                      </Grid>\n\n                      {/* Right Side - additional Contact */}\n                      <Grid item lg={6} sm={6} xs={12}>\n                        <Typography variant=\"h4\">Additional Contact</Typography>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <Grid container>\n                              <Grid item xs={10}>\n                                <CustomInputTextField\n                                  attribute=\"Dependent DOB\"\n                                  // label={\n                                  //   <CustomLabel\n                                  //     label=\"Date of Birth\"\n                                  //     required={true}\n                                  //   />\n                                  // }\n                                  margin=\"normal\"\n                                  name={`additionalDateOfBirth`}\n                                  onBlur={handleBlur}\n                                  fullWidth\n                                  onChange={handleChange}\n                                  value={values.additionalDateOfBirth}\n                                  variant=\"outlined\"\n                                  error={\n                                    touched.additionalDateOfBirth &&\n                                    errors.additionalDateOfBirth\n                                  }\n                                  helperText={\n                                    touched.additionalDateOfBirth &&\n                                    errors.additionalDateOfBirth\n                                  }\n                                  InputLabelProps={{\n                                    shrink: true, // This is important for the label to behave correctly\n                                  }}\n                                  InputProps={{\n                                    style: {\n                                      color: \"black\", // Customize the label color\n                                    },\n                                  }}\n                                  inputProps={{\n                                    // To disable the default placeholder\n                                    placeholder: \"\",\n                                    // Other attributes you might need\n                                  }}\n                                />\n                              </Grid>\n                              <Grid item xs={2} sx={{ margin: \"auto 0\" }}>\n                                <Typography\n                                  variant=\"h6\"\n                                  sx={{\n                                    color: \"#11a63d\",\n                                    whiteSpace: \"nowrap\",\n                                    marginLeft: \"-20px\",\n                                  }}\n                                >\n                                  [MM/DD/YYYY]\n                                </Typography>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n\n                          <CustomInputTextField\n                            attribute=\"Gender\"\n                            // label={\n                            //   <CustomLabel label=\"Gender\" required={true} />\n                            // }\n                            select\n                            margin=\"normal\"\n                            name={`additionalGender`}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.additionalGender}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalGender &&\n                              errors.additionalGender\n                            }\n                            helperText={\n                              touched.additionalGender &&\n                              errors.additionalGender\n                            }\n                          >\n                            <MenuItem value=\"MALE\">Male</MenuItem>\n                            <MenuItem value=\"FEMALE\">Female</MenuItem>\n                            <MenuItem value=\"Other\">Other</MenuItem>\n                          </CustomInputTextField>\n\n                          <CustomInputTextField\n                            attribute=\"Occupation / Job Title\"\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Occupation / Job Title\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalOccupation`}\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.additionalOccupation}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalOccupation &&\n                              errors.additionalOccupation\n                            }\n                            helperText={\n                              touched.additionalOccupation &&\n                              errors.additionalOccupation\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Visa Type\"\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Visa Type\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalVisaType`}\n                            onBlur={handleBlur}\n                            select\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.additionalVisaType}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalVisaType &&\n                              errors.additionalVisaType\n                            }\n                            helperText={\n                              touched.additionalVisaType &&\n                              errors.additionalVisaType\n                            }\n                          >\n                            {residentialStatus.map((each, id) => (\n                              <MenuItem value={each} key={id}>\n                                {each}\n                              </MenuItem>\n                            ))}\n                          </CustomInputTextField>\n\n                          <CustomInputTextField\n                            attribute=\"Email Id\"\n                            // label={\n                            //   <CustomLabel label=\"Email Id\" required={true} />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalEmail`}\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.additionalEmail}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalEmail && errors.additionalEmail\n                            }\n                            helperText={\n                              touched.additionalEmail && errors.additionalEmail\n                            }\n                          />\n                          <CustomInputTextField\n                            attribute=\"No. of months dependent has stayed with you in U.S\"\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"No. of months dependent has stayed with you in U.S\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalStayCount`}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"number\"\n                            fullWidth\n                            value={values.additionalStayCount}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalStayCount &&\n                              errors.additionalStayCount\n                            }\n                            helperText={\n                              touched.additionalStayCount &&\n                              errors.additionalStayCount\n                            }\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  )}\n\n                  {values.isNewDependant && (\n                    <Grid item xs={12}>\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          margin: { xs: \"8px 0\", sm: \"60px 0 20px\" },\n                        }}\n                      >\n                        <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          sx={{ margin: \"0 10px\" }}\n                        >\n                          Save Dependant Details\n                        </Button>\n                      </Box>\n                    </Grid>\n                  )}\n                </Grid>\n              </form>\n            )}\n          </Formik>\n        </Box>\n      )}\n      <Grid item xs={12}>\n        {isDependantDetailsLoading ? (\n          <CircularProgress />\n        ) : (\n          <TableContainer\n            sx={{\n              paddingBottom: { xs: \"10px\", sm: \"0px\" },\n            }}\n          >\n            <Typography\n              variant=\"h5\"\n              sx={{ textAlign: \"center\", marginTop: \"20px\" }}\n            >\n              Existing Dependant Details\n            </Typography>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n              aria-label=\"Place Order Series Table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={customStyles.tableHeader}>\n                    Name\n                  </TableCell>\n\n                  <TableCell className={customStyles.tableHeader}>\n                    Relationship\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    SSN/ITIN\n                  </TableCell>\n                  <TableCell\n                    className={customStyles.tableHeader}\n                    sx={{ whiteSpace: \"nowrap\" }}\n                  >\n                    Apply ?\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    DOB\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Visa Type\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    C.S\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Months\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Action\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {dependantDetails.length > 0 &&\n                  dependantDetails.map((row, index) => (\n                    <TableRow key={index}>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalFirstName} {row.additionalLastName}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalRelationship}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {transform(row.additionalSsnOrItin)}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalApplyForItin ? \"YES\" : \"NO\"}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalDateOfBirth}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalVisaType}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        USA\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalStayCount}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        <Button\n                          disabled={isDependantDetailsLoading}\n                          startIcon={<DeleteIcon />}\n                          size=\"small\"\n                          onClick={() => {\n                            handleDeleteDependant(row.id);\n                          }}\n                          className={customStyles.buttons}\n                        >\n                          Delete{\" \"}\n                          {isDependantDetailsLoading && (\n                            <CircularProgress sx={{ ml: 1 }} size={14} />\n                          )}\n                        </Button>\n                      </TableCell>\n                      <TableCell className={customStyles.mobileView}>\n                        <Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                First Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalFirstName}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Last Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalLastName}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                RelationShip\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalRelationship}\n                              </Typography>\n                            </Box>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Visa Type\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalVisaType}\n                              </Typography>\n                            </Box>\n\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                SSN/ITIN\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {transform(row.additionalSsnOrItin)}\n                              </Typography>\n                            </Box>\n\n                            <Button\n                              disabled={isDependantDetailsLoading}\n                              startIcon={<DeleteIcon />}\n                              size=\"small\"\n                              onClick={() => {\n                                handleDeleteDependant(row.id);\n                              }}\n                            >\n                              Delete{\" \"}\n                              {isDependantDetailsLoading && (\n                                <CircularProgress sx={{ ml: 1 }} size={14} />\n                              )}\n                            </Button>\n                          </Box>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n\n            {dependantDetails.length === 0 && (\n              <Typography\n                variant=\"h5\"\n                sx={{ textAlign: \"center\", margin: \"5px 0\" }}\n              >\n                No Dependants Found\n              </Typography>\n            )}\n            <Typography\n              variant=\"h5\"\n              sx={{\n                textAlign: \"center\",\n                color: \"red\",\n                marginTop: \"20px\",\n              }}\n            >\n              TO MODIFY EXISTING DEPENDENT DETAILS, DELETE THE SAME and then\n              CLICK on \"Add Additional Dependents\"\n            </Typography>\n          </TableContainer>\n        )}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default DependantDetails;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  MenuItem,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  CircularProgress,\n  ButtonBase,\n} from \"@mui/material\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport { makeStyles } from \"@mui/styles\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport {\n  statesNames,\n  countryCode,\n  residentialStatus,\n  dependantRelationships,\n} from \"../../../constants\";\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\nimport DependantDetails from \"./DependantDetails\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: 600,\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: 400,\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    marginBottom: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nexport function CustomLabel({ label, required }) {\n  return (\n    <label style={{ display: \"flex\", alignItems: \"center\" }}>\n      {label}\n      {required && (\n        <span\n          style={{\n            color: \"red\",\n            fontSize: \"16px\",\n            marginLeft: \"3px\",\n          }}\n        >\n          *\n        </span>\n      )}\n    </label>\n  );\n}\n\nconst FilerDetails = ({\n  open,\n  setValue,\n  id,\n  personalDetails,\n  contactDetails,\n  spouseDetails,\n  incomeDetails,\n  providedLivingSupport,\n  handleFetchData,\n  handleDownloadTemplate,\n}) => {\n  const customStyles = customTextStyles();\n  const [isFilerDetailsLoading, setIsFilerDetailsLoading] = useState(false);\n  const [isDependantDetailsLoading, setIsDependantDetailsLoading] =\n    useState(false);\n  const [dependantDetails, setDependantDetails] = useState([]);\n\n  const transform = (input) => {\n    if (input === undefined || input === null) {\n      return \"\";\n    }\n\n    if (input.includes(\"-\")) {\n      return input;\n    }\n\n    const rawSsn = input.replace(/-/g, \"\"); // Remove hyphens\n    const formattedSsn = rawSsn\n      .replace(/\\D/g, \"\") // Remove non-digits\n      .replace(/(\\d{3})(\\d{2})(\\d{4})/, \"$1-$2-$3\"); // Format as 123-45-6789\n    return formattedSsn;\n  };\n\n  const formatPhoneNumber = (phoneNumber) => {\n    if (phoneNumber === undefined || phoneNumber === null) {\n      return \"\";\n    }\n\n    if (phoneNumber.includes(\"-\")) {\n      return phoneNumber;\n    }\n\n    // Remove non-numeric characters from the phone number\n    const numericOnly = phoneNumber.replace(/\\D/g, \"\");\n\n    // Use regex to capture groups of digits in the desired format\n    const formattedNumber = numericOnly.replace(\n      /(\\d{3})(\\d{3})(\\d{4})/,\n      \"($1)-$2-$3\"\n    );\n\n    return formattedNumber;\n  };\n\n  const [formData, setFormData] = useState({\n    // Personal Details\n\n    firstName: personalDetails[\"firstName\"],\n    middleName: personalDetails[\"middleName\"],\n    lastName: personalDetails[\"lastName\"],\n    ssn: personalDetails[\"ssn\"],\n    dateOfBirth: personalDetails[\"dateOfBirth\"],\n    gender: personalDetails[\"gender\"],\n    occupation: personalDetails[\"occupation\"],\n    residentialStatus: personalDetails[\"residentialStatus\"],\n    email: personalDetails[\"email\"],\n\n    // Contact Details\n    street: contactDetails[\"street\"],\n    apartment: contactDetails[\"apartment\"],\n    city: contactDetails[\"city\"],\n    state: contactDetails[\"state\"],\n    zipCode: contactDetails[\"zipCode\"],\n    country: contactDetails[\"country\"],\n    primaryCountryCode: contactDetails[\"primaryCountryCode\"],\n    primaryPhoneNumber: contactDetails[\"primaryPhoneNumber\"],\n    secondaryCountryCode: contactDetails[\"secondaryCountryCode\"],\n    secondaryPhoneNumber: contactDetails[\"secondaryPhoneNumber\"],\n    contactEmail: contactDetails[\"contactEmail\"],\n\n    taxFiledLastYear: incomeDetails[\"taxFiledLastYear\"], // Set an initial value for taxFiledLastYear\n\n    // additional Spouse Details (Initially hidden)\n    taxPayerStatus: personalDetails[\"taxPayerStatus\"], // Default to \"No\" (Single)\n    spouseFirstName: spouseDetails[\"spouseFirstName\"],\n    spouseMiddleInitial: spouseDetails[\"spouseMiddleInitial\"],\n    spouseLastName: spouseDetails[\"spouseLastName\"],\n    spouseSsnOrItin: spouseDetails[\"spouseSsnOrItin\"],\n    spouseApplyForItin: spouseDetails[\"spouseApplyForItin\"], // Default to \"No\"\n    spouseDateOfBirth: spouseDetails[\"spouseDateOfBirth\"],\n    spouseGender: spouseDetails[\"spouseGender\"],\n    spouseOccupation: spouseDetails[\"spouseOccupation\"],\n    spouseResidentialStatus: spouseDetails[\"spouseResidentialStatus\"],\n    spouseEmail: spouseDetails[\"spouseEmail\"],\n  });\n\n  const stateOptions = statesNames;\n  const countryCodes = countryCode;\n\n  const handleDeleteDependant = (dependantId) => {\n    setIsDependantDetailsLoading(true);\n    let payload = { taxFilingId: id, id: dependantId };\n    privateApiPOST(Api.deleteDependant, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setIsDependantDetailsLoading(false);\n          handleFetchDependantDetails();\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsFilerDetailsLoading(false);\n      });\n  };\n\n  const handleFetchDependantDetails = () => {\n    setIsDependantDetailsLoading(true);\n    let payload = { id: id };\n    privateApiPOST(Api.dependantDetails, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setDependantDetails(data?.data);\n          setIsDependantDetailsLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsDependantDetailsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (open) {\n      handleFetchDependantDetails();\n    }\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n        position: \"relative\",\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        {isFilerDetailsLoading ? (\n          <CircularProgress />\n        ) : (\n          <Box>\n            <Box>\n              <Formik\n                initialValues={formData}\n                validationSchema={Yup.object().shape({\n                  firstName: Yup.string()\n                    .max(255)\n                    .required(\"First Name is required\"),\n                  middleName: Yup.string().max(255),\n                  lastName: Yup.string()\n                    .max(255)\n                    .required(\"Last Name is required\"),\n                  ssn: Yup.string()\n                    .matches(\n                      /^\\d{9}$/,\n                      \"SSN must be exactly 9 digits long and contain only numbers\"\n                    )\n                    .required(\"SSN is required\"),\n                  dateOfBirth: Yup.date()\n                    .max(new Date(), \"Date of Birth cannot be in the future\")\n                    .required(\"Date of Birth is required\"),\n                  gender: Yup.string().required(\"Gender is required\"),\n                  occupation: Yup.string()\n                    .max(255)\n                    .required(\"Occupation is required\"),\n                  residentialStatus: Yup.string().required(\n                    \"Residential Status is required\"\n                  ),\n                  street: Yup.string().max(255).required(\"Street is required\"),\n                  apartment: Yup.string().max(255),\n                  city: Yup.string().max(255).required(\"City is required\"),\n                  state: Yup.string().max(255).required(\"State is required\"),\n                  zipCode: Yup.string()\n                    .max(10)\n                    .required(\"Zip Code is required\"),\n                  country: Yup.string()\n                    .max(255)\n                    .required(\"Country is required\"),\n                  primaryCountryCode: Yup.string().required(\n                    \" Country Code is required\"\n                  ),\n                  primaryPhoneNumber: Yup.string().required(\n                    \"Primary Phone Number is required\"\n                  ),\n                  secondaryCountryCode: Yup.string(),\n                  secondaryPhoneNumber: Yup.string(),\n                  contactEmail: Yup.string()\n                    .email(\"Must be a valid email\")\n                    .max(255)\n                    .required(\"Contact Email is required\"),\n                  taxFiledLastYear: Yup.boolean().required(\n                    \"Please select an option\"\n                  ),\n                  taxPayerStatus: Yup.string().required(\n                    \"Please select your status\"\n                  ),\n\n                  // additional Spouse Details (Add validation rules as needed)\n                  spouseFirstName: Yup.string().when(\"taxPayerStatus\", {\n                    is: \"MARRIED\",\n                    then: Yup.string().required(\n                      \"Spouse First Name is required\"\n                    ),\n                    otherwise: Yup.string(),\n                  }),\n                  spouseMiddleInitial: Yup.string(),\n                  spouseLastName: Yup.string(),\n                  spouseSsnOrItin: Yup.string(),\n                  spouseApplyForItin: Yup.string(),\n                  spouseDateOfBirth: Yup.string(),\n                  spouseGender: Yup.string(),\n                  spouseOccupation: Yup.string(),\n                  spouseResidentialStatus: Yup.string(),\n                  spouseEmail: Yup.string().when(\"taxPayerStatus\", {\n                    is: \"MARRIED\",\n                    then: Yup.string()\n                      .email(\"Must be a valid email\")\n                      .max(255)\n                      .required(\"Spouse Email is required\"),\n                    otherwise: Yup.string(),\n                  }),\n\n                  //  additional Details (Add validation rules as needed)\n                })}\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                  setIsFilerDetailsLoading(true);\n                  setSubmitting(true);\n                  let payload = { ...values, id: id };\n                  privateApiPOST(Api.personalContactDetails, payload)\n                    .then((response) => {\n                      const { status, data } = response;\n                      if (status === 200) {\n                        console.log(\"data\", data);\n                        setIsFilerDetailsLoading(false);\n                        handleFetchData();\n                        setSubmitting(false);\n                      }\n                    })\n                    .catch((error) => {\n                      console.log(\"Error\", error);\n                      setIsFilerDetailsLoading(false);\n                      setSubmitting(false);\n                    });\n                }}\n              >\n                {({\n                  errors,\n                  handleBlur,\n                  handleChange,\n                  handleSubmit,\n                  isSubmitting,\n                  touched,\n                  values,\n                  setFieldValue,\n                }) => (\n                  <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                      {/* Left Side - Personal Details */}\n\n                      <Grid item sm={6} xs={12}>\n                        <Box className={customStyles.leftSide}>\n                          <Typography\n                            variant=\"h4\"\n                            sx={{ marginBottom: \"36px\" }}\n                          >\n                            Personal Details\n                          </Typography>\n\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              maxWidth: \"96%\",\n                            }}\n                          >\n                            <Typography\n                              variant=\"subtitle1\"\n                              color=\"textSecondary\"\n                              sx={{ marginTop: \"20px\", maxWidth: \"25%\" }}\n                            >\n                              Taxpayer Name\n                              <font color=\"#11a63d\" size=\"2\">\n                                (As Per SSN):\n                              </font>\n                            </Typography>\n\n                            <Box>\n                              <CustomInputTextField\n                                attribute=\"First Name\"\n                                attributeTextAlign=\"right\"\n                                is_required={true}\n                                error={Boolean(\n                                  touched.firstName && errors.firstName\n                                )}\n                                fullWidth\n                                helperText={\n                                  touched.firstName && errors.firstName\n                                }\n                                // label={\n                                //   <CustomLabel label=\"First Name\" required={true} />\n                                // }\n                                margin=\"normal\"\n                                name=\"firstName\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                value={values.firstName}\n                                variant=\"outlined\"\n                              />\n\n                              <CustomInputTextField\n                                attribute=\"Middle Initial\"\n                                attributeTextAlign=\"right\"\n                                is_required={false}\n                                error={Boolean(\n                                  touched.middleName && errors.middleName\n                                )}\n                                fullWidth\n                                helperText={\n                                  touched.middleName && errors.middleName\n                                }\n                                // label={\n                                //   <CustomLabel label=\"Middle Name\" required={false} />\n                                // }\n                                margin=\"normal\"\n                                name=\"middleName\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                value={values.middleName}\n                                variant=\"outlined\"\n                              />\n                              <CustomInputTextField\n                                attribute=\"Last Name\"\n                                attributeTextAlign=\"right\"\n                                is_required={true}\n                                error={Boolean(\n                                  touched.lastName && errors.lastName\n                                )}\n                                fullWidth\n                                helperText={touched.lastName && errors.lastName}\n                                // label={\n                                //   <CustomLabel label=\"Last Name\" required={true} />\n                                // }\n                                margin=\"normal\"\n                                name=\"lastName\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                value={values.lastName}\n                                variant=\"outlined\"\n                              />\n                            </Box>\n                          </Box>\n\n                          <CustomInputTextField\n                            attribute=\"SSN\"\n                            attributeTextAlign=\"right\"\n                            is_required={true}\n                            error={Boolean(touched.ssn && errors.ssn)}\n                            fullWidth\n                            helperText={touched.ssn && errors.ssn}\n                            // label={<CustomLabel label=\"SSN\" required={true} />}\n                            margin=\"normal\"\n                            name=\"ssn\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={transform(values.ssn)}\n                            variant=\"outlined\"\n                          />\n                          <Grid item xs={12}>\n                            <Grid container>\n                              <Grid item xs={10}>\n                                <CustomInputTextField\n                                  attribute=\"Date of Birth\"\n                                  attributeTextAlign=\"right\"\n                                  is_required={true}\n                                  error={Boolean(\n                                    touched.dateOfBirth && errors.dateOfBirth\n                                  )}\n                                  fullWidth\n                                  helperText={\n                                    touched.dateOfBirth && errors.dateOfBirth\n                                  }\n                                  // label={\n                                  //   <CustomLabel\n                                  //     label=\"Date of Birth\"\n                                  //     required={true}\n                                  //   />\n                                  // }\n                                  margin=\"normal\"\n                                  name=\"dateOfBirth\"\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  value={values.dateOfBirth}\n                                  variant=\"outlined\"\n                                  InputLabelProps={{\n                                    shrink: true, // This is important for the label to behave correctly\n                                  }}\n                                  InputProps={{\n                                    style: {\n                                      color: \"black\", // Customize the label color\n                                    },\n                                  }}\n                                  inputProps={{\n                                    // To disable the default placeholder\n                                    placeholder: \"\",\n                                    // Other attributes you might need\n                                  }}\n                                />\n                              </Grid>\n                              <Grid item xs={2} sx={{ margin: \"auto 0\" }}>\n                                <Typography\n                                  variant=\"h6\"\n                                  sx={{\n                                    color: \"#11a63d\",\n                                    whiteSpace: \"nowrap\",\n                                    marginLeft: \"-20px\",\n                                  }}\n                                >\n                                  [MM/DD/YYYY]\n                                </Typography>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n\n                          <CustomInputTextField\n                            attribute=\"Gender\"\n                            attributeTextAlign=\"right\"\n                            is_required={true}\n                            error={Boolean(touched.gender && errors.gender)}\n                            select\n                            fullWidth\n                            helperText={touched.gender && errors.gender}\n                            // label={<CustomLabel label=\"Gender\" required={true} />}\n                            margin=\"normal\"\n                            name=\"gender\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.gender}\n                            variant=\"outlined\"\n                          >\n                            <MenuItem value=\"MALE\">Male</MenuItem>\n                            <MenuItem value=\"FEMALE\">Female</MenuItem>\n                            <MenuItem value=\"Other\">Other</MenuItem>\n                          </CustomInputTextField>\n                          <CustomInputTextField\n                            attribute=\"Occupation / Job Title\"\n                            attributeTextAlign=\"right\"\n                            is_required={true}\n                            error={Boolean(\n                              touched.occupation && errors.occupation\n                            )}\n                            fullWidth\n                            helperText={touched.occupation && errors.occupation}\n                            // label={\n                            //   <CustomLabel label=\"Occupation\" required={true} />\n                            // }\n                            margin=\"normal\"\n                            name=\"occupation\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.occupation}\n                            variant=\"outlined\"\n                          />\n                          <Grid item xs={12}>\n                            <Grid container>\n                              <Grid item xs={10}>\n                                <CustomInputTextField\n                                  attribute=\"Residential Status\"\n                                  attributeTextAlign=\"right\"\n                                  is_required={true}\n                                  error={Boolean(\n                                    touched.residentialStatus &&\n                                      errors.residentialStatus\n                                  )}\n                                  fullWidth\n                                  helperText={\n                                    touched.residentialStatus &&\n                                    errors.residentialStatus\n                                  }\n                                  // label={\n                                  //   <CustomLabel\n                                  //     label=\"Residential Status\"\n                                  //     required={true}\n                                  //   />\n                                  // }\n                                  margin=\"normal\"\n                                  name=\"residentialStatus\"\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  value={values.residentialStatus}\n                                  variant=\"outlined\"\n                                />\n                              </Grid>\n                              <Grid item xs={2} sx={{ margin: \"auto 0\" }}>\n                                <Typography\n                                  variant=\"h5\"\n                                  sx={{\n                                    color: \"#11a63d\",\n                                    whiteSpace: \"nowrap\",\n                                    marginLeft: \"-20px\",\n                                  }}\n                                >\n                                  [VISA TYPE]\n                                </Typography>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Box>\n                      </Grid>\n\n                      {/* Right Side - Contact Details */}\n                      <Grid\n                        item\n                        sm={6}\n                        xs={12}\n                        // sx={{ marginLeft: { xs: \"0px\", sm: \"60px\" } }}\n                      >\n                        <Box className={customStyles.rightSide}>\n                          <Typography\n                            variant=\"h4\"\n                            sx={{ marginBottom: \"16px\" }}\n                          >\n                            Contact Details\n                          </Typography>\n                          <Typography\n                            color={\"#11a63d\"}\n                            sx={{ marginLeft: \"10px\" }}\n                            variant=\"h5\"\n                          >\n                            (Provide U.S current communication Address)\n                          </Typography>\n                          <CustomInputTextField\n                            attribute=\"Street\"\n                            is_required={true}\n                            error={Boolean(touched.street && errors.street)}\n                            fullWidth\n                            helperText={touched.street && errors.street}\n                            // label={<CustomLabel label=\"Street\" required={true} />}\n                            margin=\"normal\"\n                            name=\"street\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.street}\n                            variant=\"outlined\"\n                          />\n                          <CustomInputTextField\n                            attribute=\"Apartment\"\n                            is_required={true}\n                            error={Boolean(\n                              touched.apartment && errors.apartment\n                            )}\n                            fullWidth\n                            helperText={touched.apartment && errors.apartment}\n                            // label={\n                            //   <CustomLabel label=\"Apartment\" required={true} />\n                            // }\n                            margin=\"normal\"\n                            name=\"apartment\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.apartment}\n                            variant=\"outlined\"\n                          />\n                          <CustomInputTextField\n                            attribute=\"City\"\n                            is_required={true}\n                            error={Boolean(touched.city && errors.city)}\n                            fullWidth\n                            helperText={touched.city && errors.city}\n                            // label={<CustomLabel label=\"City\" required={true} />}\n                            margin=\"normal\"\n                            name=\"city\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.city}\n                            variant=\"outlined\"\n                          />\n                          <CustomInputTextField\n                            attribute=\"State\"\n                            is_required={true}\n                            error={Boolean(touched.state && errors.state)}\n                            select\n                            fullWidth\n                            helperText={touched.state && errors.state}\n                            // label={<CustomLabel label=\"State\" required={true} />}\n                            margin=\"normal\"\n                            name=\"state\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.state}\n                            variant=\"outlined\"\n                          >\n                            {stateOptions.map((option) => (\n                              <MenuItem key={option.value} value={option.value}>\n                                {option.label}\n                              </MenuItem>\n                            ))}\n                          </CustomInputTextField>\n                          <CustomInputTextField\n                            attribute=\"Zip Code\"\n                            is_required={true}\n                            error={Boolean(touched.zipCode && errors.zipCode)}\n                            fullWidth\n                            helperText={touched.zipCode && errors.zipCode}\n                            // label={\n                            //   <CustomLabel label=\"Zip Code\" required={true} />\n                            // }\n                            margin=\"normal\"\n                            name=\"zipCode\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.zipCode}\n                            variant=\"outlined\"\n                          />\n                          <CustomInputTextField\n                            attribute=\"Country\"\n                            is_required={true}\n                            error={Boolean(touched.country && errors.country)}\n                            select\n                            fullWidth\n                            helperText={touched.country && errors.country}\n                            // label={\n                            //   <CustomLabel label=\"Country\" required={true} />\n                            // }\n                            margin=\"normal\"\n                            name=\"country\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.country}\n                            variant=\"outlined\"\n                          >\n                            {/* <MenuItem value=\"India\">India</MenuItem> */}\n                            <MenuItem value=\"USA\">USA</MenuItem>\n                            <MenuItem value=\"Other\">Other</MenuItem>\n                          </CustomInputTextField>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              alignItems: \"center\",\n                              width: \"93%\",\n                              margin: \"10px 0\",\n                              maxHeight: \"60px\",\n                            }}\n                          >\n                            <Typography\n                              variant=\"body1\"\n                              sx={{\n                                width: { xs: \"30%\", sm: \"120px\" },\n                              }}\n                            >\n                              <span>Primary Phone</span>\n                              <span\n                                style={{\n                                  color: \"red\",\n                                  fontSize: \"0.875rem\",\n                                  marginLeft: \"3px\",\n                                }}\n                              >\n                                *\n                              </span>\n                              &nbsp;:\n                            </Typography>\n\n                            <TextField\n                              attribute=\"Primary Phone\"\n                              error={Boolean(\n                                touched.primaryCountryCode &&\n                                  errors.primaryCountryCode\n                              )}\n                              select\n                              helperText={\n                                touched.primaryCountryCode &&\n                                errors.primaryCountryCode\n                              }\n                              // label={\n                              //   <CustomLabel label=\"+91\" required={true} />\n                              // }\n                              margin=\"normal\"\n                              name=\"primaryCountryCode\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={values.primaryCountryCode}\n                              variant=\"outlined\"\n                              sx={{\n                                width: \"18%\",\n                                \"& .MuiOutlinedInput-root\": {\n                                  \"& fieldset\": {\n                                    borderRadius: \"2px\",\n                                  },\n                                },\n                                \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                                  {\n                                    border: \"0.1px solid #bdbdbd\",\n                                  },\n                                \"& .MuiOutlinedInput-input\": {\n                                  padding: \"10px\",\n                                  backgroundColor: \"rgba(255,255,255,1)\",\n                                },\n                              }}\n                            >\n                              {countryCodes.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n\n                            <TextField\n                              error={Boolean(\n                                touched.primaryPhoneNumber &&\n                                  errors.primaryPhoneNumber\n                              )}\n                              helperText={\n                                touched.primaryPhoneNumber &&\n                                errors.primaryPhoneNumber\n                              }\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Primary Phone Number\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name=\"primaryPhoneNumber\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={formatPhoneNumber(\n                                values.primaryPhoneNumber\n                              )}\n                              variant=\"outlined\"\n                              sx={{\n                                \"& .MuiOutlinedInput-root\": {\n                                  \"& fieldset\": {\n                                    borderRadius: \"2px\",\n                                  },\n                                },\n                                \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                                  {\n                                    border: \"0.1px solid #bdbdbd\",\n                                  },\n                                \"& .MuiOutlinedInput-input\": {\n                                  padding: \"10px\",\n                                  backgroundColor: \"rgba(255,255,255,1)\",\n                                },\n                                width: { xs: \"50%\", sm: \"165px\" },\n                              }}\n                            />\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              alignItems: \"center\",\n                              width: \"93%\",\n                              margin: \"10px 0\",\n                              maxHeight: \"60px\",\n                            }}\n                          >\n                            <Typography\n                              variant=\"body1\"\n                              sx={{\n                                width: { xs: \"30%\", sm: \"120px\" },\n                              }}\n                            >\n                              <span>Secondary Phone</span>\n                              &nbsp;:\n                            </Typography>\n\n                            <TextField\n                              error={Boolean(\n                                touched.secondaryCountryCode &&\n                                  errors.secondaryCountryCode\n                              )}\n                              select\n                              helperText={\n                                touched.secondaryCountryCode &&\n                                errors.secondaryCountryCode\n                              }\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Country Code\"\n                              //     required={false}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name=\"secondaryCountryCode\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={values.secondaryCountryCode}\n                              variant=\"outlined\"\n                              sx={{\n                                \"& .MuiOutlinedInput-root\": {\n                                  \"& fieldset\": {\n                                    borderRadius: \"2px\",\n                                  },\n                                },\n                                \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                                  {\n                                    border: \"0.1px solid #bdbdbd\",\n                                  },\n                                \"& .MuiOutlinedInput-input\": {\n                                  padding: \"10px\",\n                                  backgroundColor: \"rgba(255,255,255,1)\",\n                                },\n                                width: \"18%\",\n                              }}\n                            >\n                              {countryCodes.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n\n                            <TextField\n                              attribute=\"Secondary Phone\"\n                              error={Boolean(\n                                touched.secondaryPhoneNumber &&\n                                  errors.secondaryPhoneNumber\n                              )}\n                              helperText={\n                                touched.secondaryPhoneNumber &&\n                                errors.secondaryPhoneNumber\n                              }\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Secondary Phone Number\"\n                              //     required={false}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name=\"secondaryPhoneNumber\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={formatPhoneNumber(\n                                values.secondaryPhoneNumber\n                              )}\n                              variant=\"outlined\"\n                              sx={{\n                                \"& .MuiOutlinedInput-root\": {\n                                  \"& fieldset\": {\n                                    borderRadius: \"2px\",\n                                  },\n                                },\n                                \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                                  {\n                                    border: \"0.1px solid #bdbdbd\",\n                                  },\n                                \"& .MuiOutlinedInput-input\": {\n                                  padding: \"10px\",\n                                  backgroundColor: \"rgba(255,255,255,1)\",\n                                },\n                                width: { xs: \"50%\", sm: \"165px\" },\n                              }}\n                            />\n                          </Box>\n\n                          <CustomInputTextField\n                            attribute=\"Email Id\"\n                            is_required={true}\n                            error={Boolean(\n                              touched.contactEmail && errors.contactEmail\n                            )}\n                            fullWidth\n                            helperText={\n                              touched.contactEmail && errors.contactEmail\n                            }\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Contact Email\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name=\"contactEmail\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.contactEmail}\n                            variant=\"outlined\"\n                          />\n                        </Box>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Box sx={{ margin: \"16px 0\" }}>\n                        <Grid container spacing={2}>\n                          <Grid\n                            item\n                            xs={10}\n                            sm={5}\n                            style={{ display: \"flex\", alignItems: \"center\" }}\n                          >\n                            <Typography variant=\"body1\">\n                              <CustomLabel\n                                label=\"Have you filed your taxes with Onecall Tax Services in the last year?\"\n                                required={true}\n                              />\n                            </Typography>\n                          </Grid>\n                          <Grid item xs={2} sm={1}>\n                            <select\n                              id=\"taxFiledLastYear\"\n                              name=\"taxFiledLastYear\"\n                              value={values.taxFiledLastYear}\n                              onChange={handleChange}\n                              style={{ width: \"100%\" }}\n                            >\n                              <option value=\"\">Select</option>\n                              {/* Add an empty option */}\n                              <option value={true}>Yes</option>\n                              <option value={false}>No</option>\n                            </select>\n                          </Grid>\n                        </Grid>\n                      </Box>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Box sx={{ margin: \"16px 0\" }}>\n                        <Grid container spacing={2}>\n                          <Grid\n                            item\n                            xs={8}\n                            sm={5}\n                            style={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <Typography variant=\"body1\">\n                              <CustomLabel\n                                label=\"Taxpayer Status\"\n                                required={true}\n                              />\n                            </Typography>\n                          </Grid>\n                          <Grid item xs={4} sm={1}>\n                            <select\n                              id=\"taxPayerStatus\"\n                              name=\"taxPayerStatus\"\n                              value={values.taxPayerStatus}\n                              onChange={handleChange}\n                              style={{ width: \"100%\" }}\n                            >\n                              <option value=\"\">Select Status</option>{\" \"}\n                              {/* Add an empty option */}\n                              <option value=\"SINGLE\">Single</option>\n                              <option value=\"MARRIED\">Married</option>\n                            </select>\n                          </Grid>\n                        </Grid>\n                      </Box>\n                    </Grid>\n                    {values.taxPayerStatus === \"MARRIED\" && (\n                      <Grid container spacing={2}>\n                        {/* Left Side - Spouse Details */}\n                        <Grid item lg={6} sm={6} xs={12}>\n                          <Typography variant=\"h4\">Spouse Details</Typography>\n                          <Grid container spacing={2}>\n                            <CustomInputTextField\n                              is_required={true}\n                              attribute=\"First Name\"\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"First Name\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name=\"spouseFirstName\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={values.spouseFirstName}\n                              variant=\"outlined\"\n                              error={Boolean(\n                                touched.spouseFirstName &&\n                                  errors.spouseFirstName\n                              )}\n                              helperText={\n                                touched.spouseFirstName &&\n                                errors.spouseFirstName\n                              }\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Middle Initial\"\n                              is_required={false}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Spouse Middle Initial\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name=\"spouseMiddleInitial\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={values.spouseMiddleInitial}\n                              variant=\"outlined\"\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Last Name\"\n                              is_required={false}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Spouse Last Name\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name=\"spouseLastName\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={values.spouseLastName}\n                              variant=\"outlined\"\n                              error={Boolean(\n                                touched.spouseLastName && errors.spouseLastName\n                              )}\n                              helperText={\n                                touched.spouseLastName && errors.spouseLastName\n                              }\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"SSN/ITIN\"\n                              is_required={false}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Spouse SSN/ITIN\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name=\"spouseSsnOrItin\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={transform(values.spouseSsnOrItin)}\n                              variant=\"outlined\"\n                              error={Boolean(\n                                touched.spouseSsnOrItin &&\n                                  errors.spouseSsnOrItin\n                              )}\n                              helperText={\n                                touched.spouseSsnOrItin &&\n                                errors.spouseSsnOrItin\n                              }\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Do you want to apply for ITIN?\"\n                              is_required={false}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Do you want to apply for ITIN?\"\n                              //     required={true}\n                              //   />\n                              // }\n                              select\n                              margin=\"normal\"\n                              name=\"spouseApplyForItin\"\n                              onBlur={handleBlur}\n                              fullWidth\n                              onChange={handleChange}\n                              value={values.spouseApplyForItin}\n                              variant=\"outlined\"\n                              error={Boolean(\n                                touched.spouseApplyForItin &&\n                                  errors.spouseApplyForItin\n                              )}\n                              helperText={\n                                touched.spouseApplyForItin &&\n                                errors.spouseApplyForItin\n                              }\n                            >\n                              <MenuItem value={false}>No</MenuItem>\n                              <MenuItem value={true}>Yes</MenuItem>\n                            </CustomInputTextField>\n                            {values.spouseApplyForItin === true && (\n                              <ButtonBase\n                                onClick={() =>\n                                  handleDownloadTemplate(\"ITIN_Information.xls\")\n                                }\n                                sx={{\n                                  marginTop: \"12px\",\n                                  textDecoration: \"underline\",\n                                }}\n                                disableTouchRipple\n                              >\n                                Download ITIN Information Excel\n                              </ButtonBase>\n                            )}\n                          </Grid>\n                        </Grid>\n\n                        {/* Right Side - Spouse Contact */}\n                        <Grid item lg={6} sm={6} xs={12}>\n                          <Typography variant=\"h4\">Spouse Contact</Typography>\n                          <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                              <Grid container>\n                                <Grid item xs={10}>\n                                  <CustomInputTextField\n                                    attribute=\"Date of Birth\"\n                                    is_required={false}\n                                    // label={\n                                    //   <CustomLabel\n                                    //     label=\"Date of Birth\"\n                                    //     required={true}\n                                    //   />\n                                    // }\n                                    margin=\"normal\"\n                                    name=\"spouseDateOfBirth\"\n                                    onBlur={handleBlur}\n                                    fullWidth\n                                    onChange={handleChange}\n                                    value={values.spouseDateOfBirth}\n                                    variant=\"outlined\"\n                                    error={Boolean(\n                                      touched.spouseDateOfBirth &&\n                                        errors.spouseDateOfBirth\n                                    )}\n                                    helperText={\n                                      touched.spouseDateOfBirth &&\n                                      errors.spouseDateOfBirth\n                                    }\n                                    InputLabelProps={{\n                                      shrink: true, // This is important for the label to behave correctly\n                                    }}\n                                    InputProps={{\n                                      style: {\n                                        color: \"black\", // Customize the label color\n                                      },\n                                    }}\n                                    inputProps={{\n                                      // To disable the default placeholder\n                                      placeholder: \"\",\n                                      // Other attributes you might need\n                                    }}\n                                  />\n                                </Grid>\n                                <Grid item xs={2} sx={{ margin: \"auto 0\" }}>\n                                  <Typography\n                                    variant=\"h6\"\n                                    sx={{\n                                      color: \"#11a63d\",\n                                      whiteSpace: \"nowrap\",\n                                      marginLeft: \"-20px\",\n                                    }}\n                                  >\n                                    [MM/DD/YYYY]\n                                  </Typography>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n\n                            <CustomInputTextField\n                              attribute=\"Gender\"\n                              is_required={false}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Spouse Gender\"\n                              //     required={true}\n                              //   />\n                              // }\n                              select\n                              margin=\"normal\"\n                              name=\"spouseGender\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                              value={values.spouseGender}\n                              variant=\"outlined\"\n                              error={Boolean(\n                                touched.spouseGender && errors.spouseGender\n                              )}\n                              helperText={\n                                touched.spouseGender && errors.spouseGender\n                              }\n                            >\n                              <MenuItem value=\"MALE\">Male</MenuItem>\n                              <MenuItem value=\"FEMALE\">Female</MenuItem>\n                              <MenuItem value=\"Other\">Other</MenuItem>\n                            </CustomInputTextField>\n\n                            <CustomInputTextField\n                              attribute=\"Occupation / Job Title\"\n                              is_required={false}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Spouse Occupation / Job Title\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name=\"spouseOccupation\"\n                              onBlur={handleBlur}\n                              fullWidth\n                              onChange={handleChange}\n                              value={values.spouseOccupation}\n                              variant=\"outlined\"\n                              error={Boolean(\n                                touched.spouseOccupation &&\n                                  errors.spouseOccupation\n                              )}\n                              helperText={\n                                touched.spouseOccupation &&\n                                errors.spouseOccupation\n                              }\n                            />\n\n                            <CustomInputTextField\n                              attribute=\"Residential Status\"\n                              is_required={false}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Spouse Residential Status\"\n                              //     required={true}\n                              //   />\n                              // }\n                              select\n                              margin=\"normal\"\n                              name=\"spouseResidentialStatus\"\n                              onBlur={handleBlur}\n                              fullWidth\n                              onChange={handleChange}\n                              value={values.spouseResidentialStatus}\n                              variant=\"outlined\"\n                              error={Boolean(\n                                touched.spouseResidentialStatus &&\n                                  errors.spouseResidentialStatus\n                              )}\n                              helperText={\n                                touched.spouseResidentialStatus &&\n                                errors.spouseResidentialStatus\n                              }\n                            >\n                              {residentialStatus.map((each, id) => (\n                                <MenuItem value={each} key={id}>\n                                  {each}\n                                </MenuItem>\n                              ))}\n                            </CustomInputTextField>\n\n                            <CustomInputTextField\n                              attribute=\"Email Id\"\n                              is_required={true}\n                              // label={\n                              //   <CustomLabel\n                              //     label=\"Spouse Email Id\"\n                              //     required={true}\n                              //   />\n                              // }\n                              margin=\"normal\"\n                              name=\"spouseEmail\"\n                              onBlur={handleBlur}\n                              fullWidth\n                              onChange={handleChange}\n                              value={values.spouseEmail}\n                              variant=\"outlined\"\n                              error={Boolean(\n                                touched.spouseEmail && errors.spouseEmail\n                              )}\n                              helperText={\n                                touched.spouseEmail && errors.spouseEmail\n                              }\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    )}\n                    <Grid item xs={12}>\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          margin: { xs: \"8px 0\", sm: \"26px 0 20px\" },\n                          position: \"absolute\",\n                          bottom: 0,\n                          left: \"40%\",\n                        }}\n                      >\n                        <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"primary\"\n                          sx={{ margin: \"0 10px\" }}\n                        >\n                          SAVE\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          onClick={() => setValue(1)}\n                          endIcon={<ArrowForwardIosIcon />}\n                          color=\"primary\"\n                          sx={{\n                            margin: \"0 10px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          Next\n                        </Button>\n                      </Box>\n                    </Grid>\n                  </form>\n                )}\n              </Formik>\n            </Box>\n            <DependantDetails\n              open={open}\n              id={id}\n              providedLivingSupport={providedLivingSupport}\n              dependantDetails={dependantDetails}\n              handleFetchDependantDetails={handleFetchDependantDetails}\n              handleDeleteDependant={handleDeleteDependant}\n            />\n          </Box>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default FilerDetails;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Typography,\n  Grid,\n  Button,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  CircularProgress,\n  Tooltip,\n  ButtonBase,\n} from \"@mui/material\";\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\"; // Import Yup for validation\nimport TextField from \"@mui/material/TextField\";\nimport Api from \"../../../components/Api\";\nimport { privateApiPOST } from \"../../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\n\nconst IncomeDetails = ({\n  open,\n  setValue,\n  id,\n  data,\n  handleFetchData,\n  handleDownloadTemplate,\n}) => {\n  const [isIncomeDetailsLoading, setIsIncomeDetailsLoading] = useState(false);\n\n  const initialValues = {\n    interestIncome: data[\"interestIncome\"],\n    dividendIncome: data[\"dividendIncome\"],\n    soldStocks: data[\"soldStocks\"],\n    soldCrypto: data[\"soldCrypto\"],\n    foreignIncome: data[\"foreignIncome\"],\n    retirementAccounts: data[\"retirementAccounts\"],\n    stateTaxRefund: data[\"stateTaxRefund\"],\n    foreignBankAccount: data[\"foreignBankAccount\"],\n    foreignAssets: data[\"foreignAssets\"],\n    rentalIncome: data[\"rentalIncome\"],\n    income1099: data[\"income1099\"],\n    incomeDescription: data[\"incomeDescription\"],\n    incomeAmount: data[\"incomeAmount\"],\n    addAdditionalInformation: false,\n  };\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Container maxWidth=\"lg\">\n        {isIncomeDetailsLoading ? (\n          <CircularProgress />\n        ) : (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={Yup.object().shape({\n              interestIncome: Yup.boolean(),\n              dividendIncome: Yup.boolean(),\n              soldStocks: Yup.boolean(),\n              soldCrypto: Yup.boolean(),\n              foreignIncome: Yup.boolean(),\n              retirementAccounts: Yup.boolean(),\n              stateTaxRefund: Yup.boolean(),\n              foreignBankAccount: Yup.boolean(),\n              foreignAssets: Yup.boolean(),\n              rentalIncome: Yup.boolean(),\n              income1099: Yup.boolean(),\n              incomeDescription: Yup.string().when(\"addAdditionalInformation\", {\n                is: true,\n                then: Yup.string().required(\"Income Description is Required\"),\n                otherwise: Yup.string(),\n              }),\n              incomeAmount: Yup.number().when(\"addAdditionalInformation\", {\n                is: true,\n                then: Yup.number().required(\"Income Amount is Required\"),\n                otherwise: Yup.number(),\n              }),\n              addAdditionalInformation: Yup.boolean(),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              setIsIncomeDetailsLoading(true);\n              setSubmitting(true);\n              let payload = { ...values, id: id };\n              privateApiPOST(Api.incomeDetails, payload)\n                .then((response) => {\n                  const { status, data } = response;\n                  if (status === 200) {\n                    console.log(\"data\", data);\n                    setIsIncomeDetailsLoading(false);\n                    handleFetchData();\n                    setSubmitting(false);\n                  }\n                })\n                .catch((error) => {\n                  console.log(\"Error\", error);\n                  setIsIncomeDetailsLoading(false);\n                  setSubmitting(false);\n                });\n            }}\n          >\n            {({\n              values,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              errors,\n              touched,\n            }) => (\n              <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <Grid container spacing={2}>\n                  {/* Interest Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have any Interest Income?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"interestIncome\"\n                        value={values.interestIncome}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Upload 1099-INT forms and Interest received in Foreign Banks\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Dividend Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have any Dividend Income?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"dividendIncome\"\n                        value={values.dividendIncome}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Upload 1099-DIV forms and dividends received in Foreign Banks\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Sold Stocks */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Did you sell any stocks in 2023?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"soldStocks\"\n                        value={values.soldStocks}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Upload 1099-B, Gain/Loss statement in excel format. If it is ESPP/RSU stocks, upload adjusted cost basis details as well.\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Sold Crypto */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Did you sell any Crypto Currency in 2023?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"soldCrypto\"\n                        value={values.soldCrypto}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Download and fill Crypto CSV.\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                      {values.soldCrypto ? (\n                        <ButtonBase\n                          onClick={() =>\n                            handleDownloadTemplate(\"Crypto_Information_1.xls\")\n                          }\n                          sx={{\n                            marginTop: \"2px\",\n                            textDecoration: \"underline\",\n                          }}\n                          disableTouchRipple\n                        >\n                          Download and fill Crypto Excel\n                        </ButtonBase>\n                      ) : null}\n                    </FormControl>\n                  </Grid>\n                  {/* Foreign Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have any foreign country income in 2023?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"foreignIncome\"\n                        value={values.foreignIncome}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n\n                      <Tooltip\n                        title=\"Upload Total income received in Foreign Country and Total taxes paid in Foreign Country\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Contributions/Distributions */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have contributions/distributions to/from\n                        retirement accounts in year 2023?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"retirementAccounts\"\n                        value={values.retirementAccounts}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"401k/IRA etc., which is not mentioned in your W2. Upload Bank Statement 1099 R in Upload Tax Docs section\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* State Tax Refund */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Did you get State tax refund(s) in 2023?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"stateTaxRefund\"\n                        value={values.stateTaxRefund}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"If yes, upload 1099 G you might have received from State in Upload Tax Docs section\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  {/* Foreign Bank Account */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have Account Balance in Foreign banks exceeding\n                        more than $10,000?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"foreignBankAccount\"\n                        value={values.foreignBankAccount}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"As per recent IRS laws, you need to report if the combined investments(stocks/bonds/real estate) of all your foreign accounts exceeds $10,000 on at least 1 day.\n                        You do not need to pay any tax on this amount. A separate form need to be sent to IRS\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                      {values.foreignBankAccount ? (\n                        <ButtonBase\n                          onClick={() =>\n                            handleDownloadTemplate(\"FBAR_Information_2023.xls\")\n                          }\n                          sx={{\n                            marginTop: \"2px\",\n                            textDecoration: \"underline\",\n                          }}\n                          disableTouchRipple\n                        >\n                          Download and fill FBAR Excel\n                        </ButtonBase>\n                      ) : null}\n                    </FormControl>\n                  </Grid>\n\n                  {/* Foreign Assets */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have Foreign Assets value more than $50,000 at\n                        any time during the tax year?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"foreignAssets\"\n                        value={values.foreignAssets}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"As per recent IRS laws, you need to report if the combined investments(stocks/bonds/Accounts/Partnerships) of all your foreign assets exceeds $50,000 on at least 1 day in year 2023. You do not need to pay any tax on this amount. You need to report these details to avoid penalties.\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                      {values.foreignAssets ? (\n                        <ButtonBase\n                          onClick={() =>\n                            handleDownloadTemplate(\n                              \"FBAR_Information_2023_1.xls\"\n                            )\n                          }\n                          sx={{\n                            marginTop: \"2px\",\n                            textDecoration: \"underline\",\n                          }}\n                          disableTouchRipple\n                        >\n                          Download and fill FBAR Excel(Financial Assets Tab)\n                        </ButtonBase>\n                      ) : null}\n                    </FormControl>\n                  </Grid>\n\n                  {/* Rental Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have Rental Income in Foreign Country/USA?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"rentalIncome\"\n                        value={values.rentalIncome}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n\n                  {/* 1099-Misc/1099-NEC Income */}\n                  <Grid item sm={12} xs={12}>\n                    <FormControl\n                      component=\"fieldset\"\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                      }}\n                    >\n                      <FormLabel\n                        sx={{\n                          width: \"550px\", // Set the width here\n                        }}\n                      >\n                        Do you have 1099-Misc/1099-NEC Income in year 2023?\n                      </FormLabel>\n                      <RadioGroup\n                        name=\"income1099\"\n                        value={values.income1099}\n                        onChange={handleChange}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <FormControlLabel\n                          value={true}\n                          control={<Radio />}\n                          label=\"Yes\"\n                        />\n                        <FormControlLabel\n                          value={false}\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                      <Tooltip\n                        title=\"Upload 1099 Misc / 1099 NEC\"\n                        placement=\"left-end\"\n                      >\n                        <Button>Details</Button>\n                      </Tooltip>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid\n                    container\n                    spacing={2}\n                    sx={{\n                      marginTop: \"30px\",\n                      marginBottom: \"30px\",\n                      marginLeft: \"0px\",\n                    }}\n                  >\n                    <Grid item xs={12} className=\"leftSide\">\n                      <Typography variant=\"h5\">\n                        Add other Income Information\n                      </Typography>\n\n                      <CustomInputTextField\n                        error={Boolean(\n                          touched.incomeDescription && errors.incomeDescription\n                        )}\n                        fullWidth\n                        helperText={\n                          touched.incomeDescription && errors.incomeDescription\n                        }\n                        attribute=\"Income Description\"\n                        margin=\"normal\"\n                        name=\"incomeDescription\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.incomeDescription}\n                        variant=\"outlined\"\n                      />\n\n                      <CustomInputTextField\n                        error={Boolean(\n                          touched.incomeAmount && errors.incomeAmount\n                        )}\n                        fullWidth\n                        helperText={touched.incomeAmount && errors.incomeAmount}\n                        attribute=\"Income Amount\"\n                        margin=\"normal\"\n                        name=\"incomeAmount\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.incomeAmount}\n                        variant=\"outlined\"\n                        type=\"number\"\n                      />\n\n                      {/* <Grid item xs={12} sm={6}>\n                        <Button\n                          variant={\n                            values.addAdditionalInformation\n                              ? \"contained\"\n                              : \"outlined\"\n                          }\n                          color=\"primary\"\n                          name=\"addAdditionalInformation\"\n                          onClick={() =>\n                            handleChange(!values.addAdditionalInformation)\n                          }\n                          value={values.addAdditionalInformation}\n                        >\n                          Add Additional Information\n                        </Button>\n                      </Grid> */}\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    paddingBottom: { xs: \"20px\" },\n                  }}\n                >\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Save\n                  </Button>\n                </Box>\n              </Form>\n            )}\n          </Formik>\n        )}\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              margin: { xs: \"8px 0\", sm: \"26px 0 20px\" },\n            }}\n          >\n            <Button\n              variant=\"outlined\"\n              onClick={() => setValue(0)}\n              startIcon={<ArrowBackIosIcon />}\n              color=\"primary\"\n              sx={{ margin: \"0 10px\", display: \"flex\", alignItems: \"center\" }}\n            >\n              Back\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => setValue(2)}\n              endIcon={<ArrowForwardIosIcon />}\n              color=\"primary\"\n              sx={{ margin: \"0 10px\", display: \"flex\", alignItems: \"center\" }}\n            >\n              Next\n            </Button>\n          </Box>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default IncomeDetails;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  Button,\n  CircularProgress,\n  FormControl,\n} from \"@mui/material\";\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\"; // Import Yup for validation\nimport Api from \"../../../components/Api\";\nimport { privateApiPOST } from \"../../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\n\nconst validationSchema = Yup.object().shape({\n  bankingType: Yup.string().required(\"Banking Type is required\"),\n  bankName: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Bank Name is required\"),\n  }),\n  accountHolderName: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Account Holder Name is required\"),\n  }),\n  ownership: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Ownership is required\"),\n  }),\n  routingNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .matches(/^\\d{9}$/, \"Routing Number must be a valid 9-digit number\")\n      .required(\"Routing Number is required\"),\n  }),\n  confirmRoutingNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .required(\"Confirm Routing Number is required\")\n      .oneOf([Yup.ref(\"routingNumber\"), null], \"Routing Numbers must match\"),\n  }),\n  accountNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Account Number is required\"),\n  }),\n  confirmAccountNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .required(\"Confirm Account Number is required\")\n      .oneOf([Yup.ref(\"accountNumber\"), null], \"Account Numbers must match\"),\n  }),\n  accountType: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Account Type is required\"),\n  }),\n  confirmAccountType: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .required(\"Confirm Account Type is required\")\n      .oneOf([Yup.ref(\"accountType\"), null], \"Account Types must match\"),\n  }),\n});\n\nconst BankDetails = ({ open, setValue, id, data, handleFetchData }) => {\n  const [isBankDetailsLoading, setIsBankDetailsLoading] = useState(false);\n\n  const initialValues = {\n    bankingType: data[\"bankingType\"],\n    bankName: data[\"bankName\"],\n    accountHolderName: data[\"accountHolderName\"],\n    ownership: data[\"ownership\"],\n    routingNumber: data[\"routingNumber\"],\n    confirmRoutingNumber: data[\"confirmRoutingNumber\"],\n    accountNumber: data[\"accountNumber\"],\n    confirmAccountNumber: data[\"confirmAccountNumber\"],\n    accountType: data[\"accountType\"],\n    confirmAccountType: data[\"confirmAccountType\"],\n  };\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Container maxWidth=\"lg\">\n        {isBankDetailsLoading ? (\n          <CircularProgress />\n        ) : (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              setIsBankDetailsLoading(true);\n              setSubmitting(true);\n              let payload = { ...values, id: id };\n              privateApiPOST(Api.bankDetails, payload)\n                .then((response) => {\n                  const { status, data } = response;\n                  if (status === 200) {\n                    console.log(\"data\", data);\n                    setIsBankDetailsLoading(false);\n                    handleFetchData();\n                    setSubmitting(false);\n                  }\n                })\n                .catch((error) => {\n                  console.log(\"Error\", error);\n                  setIsBankDetailsLoading(false);\n                  setSubmitting(false);\n                });\n            }}\n          >\n            {({ values, handleChange, errors, touched, handleBlur }) => (\n              <Form>\n                <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\n                  <Box\n                    width=\"98%\"\n                    align=\"left\"\n                    sx={{\n                      border: \"1px solid #000000\",\n                      padding: \"20px\",\n                      marginBottom: \"20px\",\n                      backgroundColor: \"#f7f7f7\",\n                    }}\n                  >\n                    <fieldset>\n                      <legend>Bank Details</legend>\n                      <br />\n                      <Typography\n                        color=\"brown\"\n                        variant=\"h4\"\n                        sx={{ marginTop: \"10px\" }}\n                      >\n                        <b>Important Note</b>\n                      </Typography>\n                      <Typography\n                        align=\"justify\"\n                        sx={{ marginTop: \"5px\", wordSpacing: \"3px\" }}\n                      >\n                        The IRS and certain State Revenue Departments facilitate\n                        DIRECT DEPOSIT / WITHDRAWAL of Tax Refund or Tax Dues on\n                        the Tax Returns. If you are interested in availing this\n                        option, we request you to kindly input the following\n                        details. You may also provide multiple bank accounts for\n                        IRS to direct deposit your Tax Refund in different\n                        accounts.\n                      </Typography>\n                      <br />\n                      <br />\n                    </fieldset>\n                  </Box>\n                  <Grid\n                    container\n                    sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}\n                  >\n                    <Grid\n                      item\n                      xs={10}\n                      sm={4}\n                      style={{ display: \"flex\", alignItems: \"center\" }}\n                    >\n                      <Typography variant=\"body1\">\n                        I prefer to receive my tax refunds by way of\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={2} sm={4}>\n                      <select\n                        id=\"bankingType\"\n                        name=\"bankingType\"\n                        value={values.bankingType}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        style={{ width: \"100%\" }}\n                      >\n                        <option value=\"\">Select Option</option>\n                        <option value=\"DIRECT DEPOSIT INTO MY BANK ACCOUNT\">\n                          Direct deposit into my bank account\n                        </option>\n                        <option value=\"PAPER CHECK\">Paper Check</option>\n                      </select>\n                      {touched.bankingType && errors.bankingType && (\n                        <div className=\"error\">{errors.bankingType}</div>\n                      )}\n                    </Grid>\n                    <Grid>\n                      {\" \"}\n                      <Typography\n                        variant=\"h5\"\n                        sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}\n                      >\n                        Bank Account Information\n                      </Typography>\n                      <Typography\n                        sx={{\n                          marginTop: \"30px\",\n                          marginLeft: \"15px\",\n                          color: \"#11a63d\",\n                        }}\n                      >\n                        Note: Please understand that there is no risk by\n                        entering Bank Account and Routing Numbers\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                {/* Additional Fields for Direct Deposit */}\n\n                <Grid>\n                  <Grid\n                    container\n                    spacing={2}\n                    sx={{\n                      border: \"1px solid #000000\",\n                      padding: \"20px\",\n                      marginBottom: \"20px\",\n                      backgroundColor: \"#C7DFF0\",\n                    }}\n                  >\n                    <Grid item lg={6} sm={6} xs={12}>\n                      <CustomInputTextField\n                        attribute=\"Bank Name\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"bankName\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.bankName}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(touched.bankName && errors.bankName)}\n                        helperText={touched.bankName && errors.bankName}\n                      />\n                      <CustomInputTextField\n                        attribute=\"Account Number\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"accountNumber\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.accountNumber}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.accountNumber && errors.accountNumber\n                        )}\n                        helperText={\n                          touched.accountNumber && errors.accountNumber\n                        }\n                      />\n\n                      <CustomInputTextField\n                        attribute=\"Routing Number\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"routingNumber\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.routingNumber}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.routingNumber && errors.routingNumber\n                        )}\n                        helperText={\n                          touched.routingNumber && errors.routingNumber\n                        }\n                      />\n                      <CustomInputTextField\n                        attribute=\"Account Type\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"accountType\"\n                        select\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.accountType}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.accountType && errors.accountType\n                        )}\n                        helperText={touched.accountType && errors.accountType}\n                      >\n                        <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                        <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                      </CustomInputTextField>\n                      <CustomInputTextField\n                        attribute=\"Ownership\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"ownership\"\n                        select\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.ownership}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(touched.ownership && errors.ownership)}\n                        helperText={touched.ownership && errors.ownership}\n                      >\n                        <MenuItem value=\"TAXPAYER\">Tax Payer</MenuItem>\n                        <MenuItem value=\"SPOUSE\">Spouse</MenuItem>\n                        <MenuItem value=\"JOINT\">Joint</MenuItem>\n                      </CustomInputTextField>\n                    </Grid>\n                    <Grid item lg={6} sm={6} xs={12}>\n                      <CustomInputTextField\n                        attribute=\"Account Holder Name\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"accountHolderName\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.accountHolderName}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.accountHolderName && errors.accountHolderName\n                        )}\n                        helperText={\n                          touched.accountHolderName && errors.accountHolderName\n                        }\n                      />\n\n                      <CustomInputTextField\n                        attribute=\"Confirm Account Number\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"confirmAccountNumber\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.confirmAccountNumber}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.confirmAccountNumber &&\n                            errors.confirmAccountNumber\n                        )}\n                        helperText={\n                          touched.confirmAccountNumber &&\n                          errors.confirmAccountNumber\n                        }\n                      />\n                      <CustomInputTextField\n                        attribute=\"Confirm Routing Number\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"confirmRoutingNumber\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        fullWidth\n                        value={values.confirmRoutingNumber}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.confirmRoutingNumber &&\n                            errors.confirmRoutingNumber\n                        )}\n                        helperText={\n                          touched.confirmRoutingNumber &&\n                          errors.confirmRoutingNumber\n                        }\n                      />\n                      <CustomInputTextField\n                        attribute=\"Confirm Account Type\"\n                        is_required={false}\n                        margin=\"normal\"\n                        name=\"confirmAccountType\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        select\n                        fullWidth\n                        value={values.confirmAccountType}\n                        variant=\"outlined\"\n                        disabled={values.bankingType === \"PAPER CHECK\"}\n                        error={Boolean(\n                          touched.confirmAccountType &&\n                            errors.confirmAccountType\n                        )}\n                        helperText={\n                          touched.confirmAccountType &&\n                          errors.confirmAccountType\n                        }\n                      >\n                        <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                        <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                      </CustomInputTextField>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    paddingBottom: { xs: \"20px\" },\n                    marginTop: { xs: \"20px\" },\n                  }}\n                >\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Save\n                  </Button>\n                </Box>\n              </Form>\n            )}\n          </Formik>\n        )}\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              margin: { xs: \"8px 0\", sm: \"26px 0 20px\" },\n            }}\n          >\n            <Button\n              variant=\"outlined\"\n              onClick={() => setValue(1)}\n              startIcon={<ArrowBackIosIcon />}\n              color=\"primary\"\n              sx={{ margin: \"0 10px\", display: \"flex\", alignItems: \"center\" }}\n            >\n              Back\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => setValue(3)}\n              endIcon={<ArrowForwardIosIcon />}\n              color=\"primary\"\n              sx={{ margin: \"0 10px\", display: \"flex\", alignItems: \"center\" }}\n            >\n              Next\n            </Button>\n          </Box>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default BankDetails;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Box,\n  Link,\n  Avatar,\n  Typography,\n  Button,\n  Container,\n  Card,\n  CardContent,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  TextField,\n  Radio,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n  FormControl,\n  CircularProgress,\n} from \"@mui/material\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport { GetApp, CloudUpload, FilterAltOffSharp } from \"@mui/icons-material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport Api from \"../../../components/Api\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport CustomAlert from \"../../../components/CustomAlert\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: 600,\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: 400,\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  headerText: {\n    fontSize: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"32px\",\n    marginBottom: \"16px\",\n    color: \"#2069DB\",\n  },\n  confirmButton: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    lineHeight: \"19px\",\n    color: \"#FFFFFF\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n}));\n\nconst TaxReturns = ({ open, setValue }) => {\n  const customStyles = customTextStyles();\n  const params = useParams();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n  const role = useSelector((state) => state.app.role);\n  const [isLoading, setIsLoading] = useState(false);\n  const [state, setState] = useState({\n    isImport: false,\n    isImpoFormSubmitting: false,\n    selectedFile: {},\n    remarks: \"\",\n    isMyTaxDocsLoading: false,\n    myTaxDocs: [],\n  });\n\n  const handleDownloadFile = (file) => {\n    setIsLoading(true);\n\n    let payload = {\n      file_name: file,\n      id: params.id,\n      type: \"returns\",\n    };\n\n    privateApiPOST(Api.downloadTaxDocsFile, payload, { responseType: \"blob\" })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setIsLoading(false);\n          const url = window.URL.createObjectURL(new Blob([data]));\n          const anchor = document.createElement(\"a\");\n          anchor.href = url;\n          anchor.setAttribute(\"download\", file);\n          document.body.appendChild(anchor);\n          anchor.click();\n        } else {\n          setIsLoading(false);\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDownloadFile--->\", err);\n        setIsLoading(false);\n      });\n  };\n\n  const handleDeleteFile = (id, file) => {\n    setIsLoading(true);\n\n    let payload = {\n      file_id: id,\n      file_name: file,\n      id: params.id,\n      type: \"returns\",\n    };\n\n    privateApiPOST(Api.deleteTaxDocsFile, payload)\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setShowAlert({\n            isAlert: true,\n            severity: \"success\",\n            alertText: data?.[\"message\"],\n          });\n          setIsLoading(false);\n          handleFetchMyTaxDocs();\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDeleteFile--->\", err);\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n        setIsLoading(false);\n      });\n  };\n\n  //CLICK - Upload input file\n  const handleUploadClick = (e) => {\n    let file = e.target.files[0];\n    if (file) {\n      setState((prev) => ({\n        ...prev,\n        selectedFile: file,\n      }));\n    }\n  };\n\n  //SUBMIT - Import form\n  const handleUploadTaxDocs = () => {\n    if (!state.selectedFile.name) {\n      setShowAlert({\n        isAlert: true,\n        severity: \"warning\",\n        alertText: \"Please choose file to import\",\n      });\n      return;\n    }\n\n    setState((prev) => ({\n      ...prev,\n      isImpoFormSubmitting: true,\n    }));\n\n    const formData = new FormData();\n    formData.append(\"upload\", state.selectedFile);\n    formData.append(\"id\", params.id);\n    formData.append(\"type\", \"returns\");\n    formData.append(\"remarks\", state.remarks);\n\n    const token = sessionStorage.getItem(\"token\");\n    axios\n      .post(Api.uploadTaxDocs, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: `Token ${token}`,\n        },\n      })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setShowAlert({\n            isAlert: true,\n            severity: \"success\",\n            alertText: data?.[\"message\"],\n          });\n          setState((prev) => ({\n            ...prev,\n            selectedFile: {},\n            isImpoFormSubmitting: false,\n            isImport: false,\n            remarks: \"\",\n          }));\n          handleFetchMyTaxDocs();\n        }\n      })\n      .catch((error) => {\n        console.log(\"handleUploadTaxDocs--->\", error);\n        const { data } = error.response;\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n\n        setState((prev) => ({\n          ...prev,\n          selectedFile: {},\n          isImpoFormSubmitting: false,\n          isImport: false,\n          remarks: \"\",\n        }));\n      });\n  };\n\n  const handleFetchMyTaxDocs = () => {\n    setState((prev) => ({ ...prev, isMyTaxDocsLoading: true }));\n    let payload = { id: params.id, type: \"returns\" };\n    privateApiPOST(Api.uploadTaxDocs, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setState((prev) => ({\n            ...prev,\n            isMyTaxDocsLoading: false,\n            myTaxDocs: data?.data,\n          }));\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setState((prev) => ({ ...prev, isMyTaxDocsLoading: false }));\n      });\n  };\n\n  useEffect(() => {\n    if (open) {\n      handleFetchMyTaxDocs();\n    }\n  }, []);\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n      }}\n    >\n      {showAlert.isAlert && (\n        <CustomAlert\n          open={showAlert.isAlert}\n          severity={showAlert.severity}\n          alertTitle={showAlert.alertTitle}\n          alertText={showAlert.alertText}\n          onClose={() =>\n            setShowAlert({\n              isAlert: false,\n              alertTitle: \"\",\n              alertText: \"\",\n              severity: \"\",\n            })\n          }\n        />\n      )}\n      <Container maxWidth=\"lg\">\n        {role === \"ADMIN\" ? (\n          <Box\n            sx={{\n              // padding: \"20px 0 5px\",\n              // border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n              minHeight: { xs: \"auto\", sm: \"400px\" },\n            }}\n          >\n            <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\n              Attach Client Tax Returns:\n            </Typography>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                margin: \"20px 0\",\n              }}\n            >\n              <Typography sx={{ marginRight: \"24px\" }}>Upload File</Typography>\n              <Box sx={{ marginRight: \"20px\" }}>\n                <input\n                  required\n                  id=\"import-file-button\"\n                  type=\"file\"\n                  onChange={handleUploadClick}\n                  accept=\".xlsx\"\n                  style={{ opacity: 0, visibility: \"hidden\", width: \"1px\" }}\n                />\n                <label htmlFor=\"import-file-button\">\n                  <Button\n                    startIcon={<CloudUploadIcon />}\n                    component=\"span\"\n                    variant=\"contained\"\n                  >\n                    Choose File\n                  </Button>\n                </label>\n                <Typography sx={{ marginTop: \"8px\", fontStyle: \"italic\" }}>\n                  {state.selectedFile.name}\n                </Typography>\n              </Box>\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                margin: \"20px 0\",\n              }}\n            >\n              <Typography sx={{ marginRight: \"24px\" }}>Remarks</Typography>\n              <TextField\n                size=\"large\"\n                name=\"remarks\"\n                value={state.remarks}\n                onChange={(e) =>\n                  setState((prev) => ({ ...prev, remarks: e.target.value }))\n                }\n              />\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                margin: \"20px 0\",\n              }}\n            >\n              <Button\n                onClick={handleUploadTaxDocs}\n                sx={{ marginBottom: \"10px\" }}\n              >\n                Upload Tax Returns\n              </Button>\n            </Box>\n          </Box>\n        ) : null}\n        <Box\n          sx={{\n            minHeight: { xs: \"auto\", sm: role === \"ADMIN\" ? \"400px\" : \"800px\" },\n          }}\n        >\n          <TableContainer sx={{ marginTop: \"32px\" }}>\n            <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\n              Tax Return Document List:\n            </Typography>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n                marginTop: \"30px\",\n              }}\n              aria-label=\"Place Order Series Table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={customStyles.tableHeader}>ID</TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Document Name\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    uploaded on\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Remarks\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Actions\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {state.myTaxDocs.length > 0 &&\n                  state.myTaxDocs.map((row, index) => (\n                    <TableRow key={index}>\n                      <TableCell className={customStyles.tableData}>\n                        {row.id}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.upload_time}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.remarks}\n                      </TableCell>\n                      <TableCell className={customStyles.buttons}>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            justifyContent: \"space-between\",\n                          }}\n                        >\n                          <Button\n                            disabled={isLoading}\n                            startIcon={<GetApp />}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleDownloadFile(row.file_name);\n                            }}\n                          >\n                            Download{\" \"}\n                          </Button>\n                          <Button\n                            disabled={isLoading}\n                            startIcon={<DeleteIcon />}\n                            size=\"small\"\n                            onClick={() => {\n                              handleDeleteFile(row.id, row.file_name);\n                            }}\n                            sx={{\n                              display: role === \"ADMIN\" ? \"flex\" : \"none\",\n                            }}\n                          >\n                            Delete{\" \"}\n                          </Button>\n                        </Box>\n                      </TableCell>\n\n                      <TableCell className={customStyles.mobileView}>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            marginTop: \"16px\",\n                          }}\n                        >\n                          <Box sx={{ marginTop: \"3px\" }}>\n                            <Typography\n                              className={customStyles.mobileViewTableCellHeader}\n                            >\n                              File Name\n                            </Typography>\n\n                            <Typography\n                              className={customStyles.mobileViewTableCellValue}\n                            >\n                              {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\n                            </Typography>\n                          </Box>\n                          <Box sx={{ marginTop: \"3px\" }}>\n                            <Typography\n                              className={customStyles.mobileViewTableCellHeader}\n                            >\n                              Upload Time\n                            </Typography>\n\n                            <Typography\n                              className={customStyles.mobileViewTableCellValue}\n                            >\n                              {row.upload_time}\n                            </Typography>\n                          </Box>\n\n                          <Box sx={{ marginTop: \"3px\" }}>\n                            <Typography\n                              className={customStyles.mobileViewTableCellHeader}\n                            >\n                              Remarks\n                            </Typography>\n\n                            <Typography\n                              className={customStyles.mobileViewTableCellValue}\n                            >\n                              {row.remarks}\n                            </Typography>\n                          </Box>\n\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Button\n                              disabled={isLoading}\n                              startIcon={<GetApp />}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              onClick={() => {\n                                handleDownloadFile(row.file_name);\n                              }}\n                            >\n                              Download{\" \"}\n                              {isLoading && (\n                                <CircularProgress sx={{ ml: 1 }} size={14} />\n                              )}\n                            </Button>\n                            <Button\n                              disabled={isLoading}\n                              startIcon={<DeleteIcon />}\n                              size=\"small\"\n                              onClick={() => {\n                                handleDeleteFile(row.file_name);\n                              }}\n                              sx={{\n                                display: role === \"ADMIN\" ? \"flex\" : \"none\",\n                              }}\n                            >\n                              Delete{\" \"}\n                              {isLoading && (\n                                <CircularProgress sx={{ ml: 1 }} size={14} />\n                              )}\n                            </Button>\n                          </Box>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n            {state.myTaxDocs.length === 0 && (\n              <Typography\n                variant=\"h5\"\n                sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n              >\n                No TaxReturns Found\n              </Typography>\n            )}\n          </TableContainer>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default TaxReturns;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Box,\n  Button,\n  TextField,\n  Grid,\n  Typography,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  CircularProgress,\n  Container,\n  Paper,\n} from \"@mui/material\";\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport { Card, CardContent, Link } from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport { GetApp, CloudUpload, FilterAltOffSharp } from \"@mui/icons-material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport Api from \"../../../components/Api\";\nimport CustomAlert from \"../../../components/CustomAlert\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: 600,\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: 400,\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  headerText: {\n    fontSize: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"32px\",\n    marginBottom: \"16px\",\n    color: \"#2069DB\",\n  },\n  confirmButton: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    lineHeight: \"19px\",\n    color: \"#FFFFFF\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  alertCard: {\n    border: \"1px solid #000000\",\n    marginBottom: theme.spacing(2),\n  },\n  alertIcon: {\n    color: \"#EB3414\",\n    marginRight: theme.spacing(1),\n  },\n  root: {\n    color: \"#11a63d\",\n    fontSize: \"1.0rem\",\n    marginLeft: \"10px\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    color: \"primary\",\n  },\n  info: {\n    color: \"green\",\n    fontSize: \"1.5rem\",\n    border: \"1px solid #000000\",\n    marginTop: \"10px\",\n  },\n}));\n\nconst UploadTaxDocs = ({ open, setValue, handleActiveTabChange, id }) => {\n  const customStyles = customTextStyles();\n  const role = useSelector((state) => state.app.role);\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [state, setState] = useState({\n    isImport: false,\n    isImpoFormSubmitting: false,\n    selectedFile: {},\n    isMyTaxDocsLoading: false,\n    myTaxDocs: [],\n  });\n\n  const handleDownloadFile = (file) => {\n    setIsLoading(true);\n\n    let payload = {\n      file_name: file,\n      id: id,\n      type: \"docs\",\n    };\n\n    privateApiPOST(Api.downloadTaxDocsFile, payload, { responseType: \"blob\" })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setIsLoading(false);\n          const url = window.URL.createObjectURL(new Blob([data]));\n          const anchor = document.createElement(\"a\");\n          anchor.href = url;\n          anchor.setAttribute(\"download\", file);\n          document.body.appendChild(anchor);\n          anchor.click();\n        } else {\n          setIsLoading(false);\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDownloadFile--->\", err);\n        setIsLoading(false);\n      });\n  };\n\n  const handleDeleteFile = (file) => {\n    setIsLoading(true);\n\n    let payload = {\n      file_name: file,\n      id: id,\n      type: \"docs\",\n    };\n\n    privateApiPOST(Api.deleteTaxDocsFile, payload)\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setShowAlert({\n            isAlert: true,\n            severity: \"success\",\n            alertText: data?.[\"message\"],\n          });\n          setIsLoading(false);\n          handleFetchMyTaxDocs();\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDeleteFile--->\", err);\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n        setIsLoading(false);\n      });\n  };\n\n  //CLICK - Upload input file\n  const handleUploadClick = (e) => {\n    let file = e.target.files[0];\n    if (file) {\n      setState((prev) => ({\n        ...prev,\n        selectedFile: file,\n      }));\n    }\n  };\n\n  //SUBMIT - Import form\n  const handleUploadTaxDocs = () => {\n    if (!state.selectedFile.name) {\n      setShowAlert({\n        isAlert: true,\n        severity: \"warning\",\n        alertText: \"Please choose file to import\",\n      });\n      return;\n    }\n\n    setState((prev) => ({\n      ...prev,\n      isImpoFormSubmitting: true,\n    }));\n\n    const formData = new FormData();\n    formData.append(\"upload\", state.selectedFile);\n    formData.append(\"id\", id);\n    formData.append(\"type\", \"docs\");\n\n    const token = sessionStorage.getItem(\"token\");\n    axios\n      .post(Api.uploadTaxDocs, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: `Token ${token}`,\n        },\n      })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setShowAlert({\n            isAlert: true,\n            severity: \"success\",\n            alertText: data?.[\"message\"],\n          });\n          setState((prev) => ({\n            ...prev,\n            selectedFile: {},\n            isImpoFormSubmitting: false,\n            isImport: false,\n          }));\n          handleFetchMyTaxDocs();\n        }\n      })\n      .catch((error) => {\n        console.log(\"handleUploadTaxDocs--->\", error);\n        const { data } = error.response;\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n\n        setState((prev) => ({\n          ...prev,\n          selectedFile: {},\n          isImpoFormSubmitting: false,\n          isImport: false,\n        }));\n      });\n  };\n\n  const handleFetchMyTaxDocs = () => {\n    setState((prev) => ({ ...prev, isMyTaxDocsLoading: true }));\n    let payload = { id: id, type: \"docs\" };\n    privateApiPOST(Api.uploadTaxDocs, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setState((prev) => ({\n            ...prev,\n            isMyTaxDocsLoading: false,\n            myTaxDocs: data?.data,\n          }));\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setState((prev) => ({ ...prev, isMyTaxDocsLoading: false }));\n      });\n  };\n\n  useEffect(() => {\n    if (open) {\n      handleFetchMyTaxDocs();\n    }\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Container maxWidth=\"lg\">\n        {showAlert.isAlert && (\n          <CustomAlert\n            open={showAlert.isAlert}\n            severity={showAlert.severity}\n            alertTitle={showAlert.alertTitle}\n            alertText={showAlert.alertText}\n            onClose={() =>\n              setShowAlert({\n                isAlert: false,\n                alertTitle: \"\",\n                alertText: \"\",\n                severity: \"\",\n              })\n            }\n          />\n        )}\n        <Card className={customStyles.alertCard}>\n          <CardContent>\n            <Typography sx={{ marginBottom: \"10px\", color: \"#11a63d\" }}>\n              Alerts\n            </Typography>\n            <Typography variant=\"body2\">\n              <span className={customStyles.alertIcon}>!&nbsp;</span>\n              Information / Documents submitted here will be secured.\n            </Typography>\n            <br />\n            <Typography variant=\"body2\">\n              <span className={customStyles.alertIcon}>!&nbsp;</span>\n              Please contact our Team if any issues in uploading documents\n            </Typography>\n          </CardContent>\n        </Card>\n\n        <Typography className={customStyles.root}>\n          If needed, use the following links to download the required documents:\n          <br />\n          <Link\n            href=\"/static/img/1099_NEC_Expenses_Tax_Information.xlsx\"\n            className={customStyles.link}\n          >\n            1099 NEC Expenses Tax Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/City_Tax_Return_Information.xlsx\"\n            className={customStyles.link}\n          >\n            City Tax Return Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/Crypto_Information.xls\"\n            className={customStyles.link}\n          >\n            Crypto Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/FBAR_Information_2023.xls\"\n            className={customStyles.link}\n          >\n            FBAR Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/ITIN_Information.xls\"\n            className={customStyles.link}\n          >\n            ITN Information\n          </Link>\n          <br />\n          <Link\n            href=\"/static/img/Rental_Property_Details.xls\"\n            className={customStyles.link}\n          >\n            Rental Property Details\n          </Link>\n          <br />\n          After downloading, please fill/complete these documents and upload\n          them in the attachment section.\n        </Typography>\n        <Paper elevation={3} className={customStyles.info}>\n          <Table width=\"100%\">\n            <TableBody>\n              <TableRow valign=\"top\">\n                <TableCell align=\"left\" width=\"20%\">\n                  Addition Information\n                </TableCell>\n                <TableCell width=\"5%\"> - </TableCell>\n                <TableCell align=\"left\" width=\"75%\">\n                  If you want to provide any additional information to our Tax\n                  Consultant, please discuss during the Tax Interview.\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Paper>\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          sx={{ marginTop: { xs: \"20px\" } }}\n        >\n          <Box sx={{ marginRight: \"20px\" }}>\n            <input\n              required\n              id=\"import-file-button\"\n              type=\"file\"\n              onChange={handleUploadClick}\n              accept=\".xlsx\"\n              style={{ opacity: 0, visibility: \"hidden\", width: \"1px\" }}\n            />\n            <label htmlFor=\"import-file-button\">\n              <Button\n                startIcon={<CloudUploadIcon />}\n                component=\"span\"\n                variant=\"contained\"\n              >\n                Choose File\n              </Button>\n            </label>\n            <Typography sx={{ marginTop: \"8px\", fontStyle: \"italic\" }}>\n              {state.selectedFile.name}\n            </Typography>\n          </Box>\n          <Button onClick={handleUploadTaxDocs} sx={{ marginBottom: \"10px\" }}>\n            Upload\n          </Button>\n        </Box>\n        <Box>\n          {state.isMyTaxDocsLoading ? (\n            <CircularProgress />\n          ) : (\n            <TableContainer sx={{ marginTop: \"32px\" }}>\n              <Table\n                sx={{\n                  borderCollapse: \"collapse\",\n                }}\n                aria-label=\"Place Order Series Table\"\n              >\n                <TableHead>\n                  <TableRow>\n                    <TableCell className={customStyles.tableHeader}>\n                      File Name\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      Upload Time\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      File Size\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      Actions\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {state.myTaxDocs.length > 0 &&\n                    state.myTaxDocs.map((row, index) => (\n                      <TableRow key={index}>\n                        <TableCell className={customStyles.tableData}>\n                          {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          {row.upload_time}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          {row.file_size}\n                        </TableCell>\n                        <TableCell className={customStyles.buttons}>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"nowrap\",\n                              justifyContent: \"space-between\",\n                            }}\n                          >\n                            <Button\n                              disabled={isLoading}\n                              startIcon={<GetApp />}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              onClick={() => {\n                                handleDownloadFile(row.file_name);\n                              }}\n                            >\n                              Download{\" \"}\n                              {isLoading && (\n                                <CircularProgress sx={{ ml: 1 }} size={14} />\n                              )}\n                            </Button>\n                            <Button\n                              disabled={isLoading}\n                              startIcon={<DeleteIcon />}\n                              size=\"small\"\n                              onClick={() => {\n                                handleDeleteFile(row.file_name);\n                              }}\n                            >\n                              Delete{\" \"}\n                              {isLoading && (\n                                <CircularProgress sx={{ ml: 1 }} size={14} />\n                              )}\n                            </Button>\n                          </Box>\n                        </TableCell>\n\n                        <TableCell className={customStyles.mobileView}>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                File Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Upload Time\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.upload_time}\n                              </Typography>\n                            </Box>\n\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                File Size\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.file_size}\n                              </Typography>\n                            </Box>\n\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                                justifyContent: \"space-between\",\n                                marginTop: \"16px\",\n                              }}\n                            >\n                              <Button\n                                disabled={isLoading}\n                                startIcon={<GetApp />}\n                                size=\"small\"\n                                variant=\"outlined\"\n                                onClick={() => {\n                                  handleDownloadFile(row.file_name);\n                                }}\n                              >\n                                Download{\" \"}\n                                {isLoading && (\n                                  <CircularProgress sx={{ ml: 1 }} size={14} />\n                                )}\n                              </Button>\n                              <Button\n                                disabled={isLoading}\n                                startIcon={<DeleteIcon />}\n                                size=\"small\"\n                                onClick={() => {\n                                  handleDeleteFile(row.file_name);\n                                }}\n                              >\n                                Delete{\" \"}\n                                {isLoading && (\n                                  <CircularProgress sx={{ ml: 1 }} size={14} />\n                                )}\n                              </Button>\n                            </Box>\n                          </Box>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n              {state.myTaxDocs.length === 0 && (\n                <Typography\n                  variant=\"h5\"\n                  sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n                >\n                  No TaxDocs Found\n                </Typography>\n              )}\n            </TableContainer>\n          )}\n        </Box>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              margin: { xs: \"8px 0\", sm: \"26px 0 20px\" },\n            }}\n          >\n            <Button\n              variant=\"outlined\"\n              onClick={() => setValue(2)}\n              startIcon={<ArrowBackIosIcon />}\n              color=\"primary\"\n              sx={{ margin: \"0 10px\", display: \"flex\", alignItems: \"center\" }}\n            >\n              Back\n            </Button>\n            {role === \"CLIENT\" && (\n              <Button\n                variant=\"contained\"\n                onClick={() => handleActiveTabChange(\"Confirm Details\")}\n                color=\"primary\"\n                sx={{ margin: \"0 10px\", display: \"flex\", alignItems: \"center\" }}\n              >\n                Confirm Details\n              </Button>\n            )}\n          </Box>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default UploadTaxDocs;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport config from \"../../config\";\n// Material UI\nimport { Grid, Box, Avatar, Typography, Tabs, Tab } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport FilerDeatils from \"./Forms/FilerDetails\";\nimport IncomeDetails from \"./Forms/IncomeDetails\";\nimport BankDetails from \"./Forms/BankDetails\";\nimport TaxReturns from \"./Forms/TaxReturns\";\nimport UploadTaxDocs from \"./Forms/TaxDocs\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst TabsDesktop = ({\n  value,\n  setValue,\n  handleChange,\n  handleActiveTabChange,\n  data,\n  handleFetchData,\n  handleDownloadTemplate,\n}) => {\n  const params = useParams();\n  const customTextClasses = customTextStyles();\n\n  function CustomTabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box>{children}</Box>}\n      </div>\n    );\n  }\n\n  CustomTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        marginBottom: \"64px\",\n      }}\n    >\n      <Box\n        sx={{\n          borderBottom: 1,\n          borderColor: \"divider\",\n          margin: \"8px\",\n        }}\n      >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"basic tabs example\"\n        >\n          <Tab\n            label=\"Filer Details\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(0)}\n          />\n          <Tab\n            label=\"Income Details\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(1)}\n          />\n          <Tab\n            label=\"Bank Details\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(2)}\n          />\n          <Tab\n            label=\"Upload Tax Docs\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(3)}\n          />\n          <Tab\n            label=\"Tax Returns\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(3)}\n          />\n        </Tabs>\n      </Box>\n\n      <CustomTabPanel value={value} index={0}>\n        <FilerDeatils\n          open={value === 0}\n          setValue={setValue}\n          id={data[\"id\"]}\n          personalDetails={data[\"personalDetails\"]}\n          contactDetails={data[\"contactDetails\"]}\n          spouseDetails={data[\"spouseDetails\"]}\n          incomeDetails={data[\"incomeDetails\"]}\n          providedLivingSupport={data[\"providedLivingSupport\"]}\n          handleFetchData={handleFetchData}\n          handleDownloadTemplate={handleDownloadTemplate}\n        />\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={1}>\n        <IncomeDetails\n          open={value === 1}\n          setValue={setValue}\n          id={data[\"id\"]}\n          data={data[\"incomeDetails\"]}\n          handleFetchData={handleFetchData}\n          handleDownloadTemplate={handleDownloadTemplate}\n        />\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={2}>\n        <BankDetails\n          open={value === 2}\n          setValue={setValue}\n          id={data[\"id\"]}\n          data={data[\"bankDetails\"]}\n          handleFetchData={handleFetchData}\n        />\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={3}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Box>\n              <UploadTaxDocs\n                open={value === 3}\n                setValue={setValue}\n                handleActiveTabChange={handleActiveTabChange}\n                id={data[\"id\"]}\n              />\n            </Box>\n          </Grid>\n        </Grid>\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={4}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Box>\n              <TaxReturns open={value === 4} id={data[\"id\"]} />\n            </Box>\n          </Grid>\n        </Grid>\n      </CustomTabPanel>\n    </Box>\n  );\n};\nexport default TabsDesktop;\n","import React, { useEffect, useState } from \"react\";\nimport Page from \"../../../components/Page\";\nimport {\n  Grid,\n  Container,\n  Box,\n  CircularProgress,\n  Typography,\n} from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport TabsDesktop from \"../TabsDesktop\";\nimport { makeStyles } from \"@mui/styles\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tabButton: {\n    display: \"block\",\n    width: \"100%\",\n    paddingLeft: \"15px\",\n    textAlign: \"left\",\n    fontWeight: \"500\",\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n  },\n}));\n\nconst AdminTaxFillingPage = () => {\n  const params = useParams();\n  const customStyles = customTextStyles();\n  const [data, setData] = useState({});\n  const [isLoadingSpin, setIsLoadingSpin] = useState(true);\n\n  const [tabsDesktopValue, setTabsDesktopValue] = useState(\n    parseInt(params.action)\n  );\n\n  const handleTabsDesktopChange = (event, newValue) => {\n    setTabsDesktopValue(newValue);\n  };\n\n  const handleFetchTaxFilingDetails = () => {\n    setIsLoadingSpin(true);\n    let payload = { id: params.id };\n    privateApiPOST(Api.taxFiling, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setData(data?.data);\n          setIsLoadingSpin(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsLoadingSpin(false);\n      });\n  };\n\n  const handleDownloadTemplate = (file) => {\n    let payload = {\n      file_name: file,\n    };\n\n    privateApiPOST(Api.templateDownload, payload, { responseType: \"blob\" })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          const url = window.URL.createObjectURL(new Blob([data]));\n          const anchor = document.createElement(\"a\");\n          anchor.href = url;\n          anchor.setAttribute(\"download\", file);\n          document.body.appendChild(anchor);\n          anchor.click();\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDownloadFile--->\", err);\n      });\n  };\n\n  useEffect(() => {\n    handleFetchTaxFilingDetails();\n  }, []);\n\n  return (\n    <Page title={\"Tax Filing\"}>\n      <Box>\n        <Container maxWidth=\"lg\">\n          <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n            {isLoadingSpin ? (\n              <Box\n                display=\"flex\"\n                height=\"100%\"\n                width=\"100%\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                sx={{\n                  position: \"absolute\",\n                  zIndex: \"10\",\n                  left: 0,\n                  top: \"60%\",\n                }}\n              >\n                <CircularProgress size={30} />\n              </Box>\n            ) : data ? (\n              <Box\n                sx={{\n                  backgroundColor: \"rgba(255,255,255,1)\",\n                  boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\",\n                  borderRadius: \"4px\",\n                  padding: \"20px 10px\",\n                  height: \"800px\", // Adjust the height as needed\n                  overflow: \"auto\", // Add overflow to enable scrolling\n                  maxHeight: \"800px\", // Add a maximum height to prevent content from overflowing\n                }}\n              >\n                <PerfectScrollbar>\n                  <Typography\n                    variant=\"h3\"\n                    sx={{\n                      marginLeft: \"20px\",\n                    }}\n                  >\n                    Tax-Filing For Year - {params.year}\n                  </Typography>\n\n                  <TabsDesktop\n                    value={tabsDesktopValue}\n                    setValue={setTabsDesktopValue}\n                    handleChange={handleTabsDesktopChange}\n                    data={data}\n                    handleFetchData={handleFetchTaxFilingDetails}\n                    handleDownloadTemplate={handleDownloadTemplate}\n                  />\n                </PerfectScrollbar>\n              </Box>\n            ) : null}\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default AdminTaxFillingPage;\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  Box,\n  DialogActions,\n  DialogContent,\n  CircularProgress,\n  DialogTitle,\n  IconButton,\n  Typography,\n  MenuItem,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  dialogBox: {\n    borderRadius: \"10px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      borderRadius: \"20px 20px 0px 0px\",\n      border: \"1px solid rgba(151,151,151, 1)\",\n      boxShadow: \"0px -3px 8px rgba(0,0,0, 0.1)\",\n    },\n  },\n  boldText: {\n    fontSize: \"18px\",\n    fontWeight: \"600\",\n    lineHeight: \"24px\",\n    marginBottom: \"7px\",\n  },\n\n  normalText: {\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"22px\",\n  },\n  headerText: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"23px\",\n  },\n  mainText: {\n    opacity: 1,\n    color: \"rgba(71,71,71,1)\",\n    fontSize: \"24px\",\n    fontWeight: \"400\",\n    textAlign: \"center\",\n    lineHeight: \"33px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"20px\",\n      lineHeight: \"27px\",\n      marginLeft: \"8px\",\n      marginRight: \"7px\",\n    },\n  },\n  paper: {\n    overflowY: \"unset\",\n  },\n  customizedButton: {\n    position: \"absolute\",\n    left: \"97.5%\",\n    top: \"-4%\",\n    backgroundColor: \"#F5A623\",\n    color: \"#FFFFFF\",\n    [theme.breakpoints.down(\"sm\")]: {\n      left: \"93%\",\n      top: \"-5%\",\n    },\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n    },\n  },\n  confirmButton: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    lineHeight: \"19px\",\n    backgroundColor: \"#FFFFFF\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n    \"&:hover\": {\n      backgroundColor: \"#FFFFFF\",\n    },\n  },\n}));\n\nconst ConfirmedClientConfirmationDialogBox = ({ open, handleClose }) => {\n  const customStyles = customTextStyles();\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      scroll=\"paper\"\n      aria-labelledby=\"scroll-dialog-title\"\n      aria-describedby=\"scroll-dialog-description\"\n      classes={{ paper: customStyles.paper }}\n      className={customStyles.dialogBox}\n    >\n      <DialogTitle\n        id=\"scroll-dialog-title\"\n        sx={{ backgroundColor: \"rgb(193, 210, 231)\" }}\n      >\n        <Typography\n          sx={{ fontSize: \"16px\", fontWeight: 600, color: \"rgb(21, 66, 139)\" }}\n        >\n          Confirmed Client\n        </Typography>\n      </DialogTitle>\n      <DialogContent\n        dividers={false}\n        sx={{ backgroundColor: \"rgb(193, 210, 231)\" }}\n      >\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          className={customStyles.customizedButton}\n        >\n          <CloseIcon />\n        </IconButton>\n        <Typography sx={{ margin: \"5px 0\" }}>\n          Become a confirmed client by paying advance filing fee and we will\n          complete your filing in 24 hours!!\n        </Typography>\n        <Typography sx={{ margin: \"10px 0\", color: \"#11a63d\" }}>\n          How to become a confirmed client?\n        </Typography>\n        <Typography> - Upload all your tax related documents</Typography>\n        <Typography sx={{ color: \"#11a63d\" }}>\n          - Pay minimum standard filing fee of $50**{\" \"}\n          <Box component=\"span\" color=\"#474747 !important\">\n            ( visit \"Pay Now\" section to make the payment)\n          </Box>\n        </Typography>\n        <Typography>\n          - Send us an email confirming your advance fee payment\n        </Typography>\n        <Typography>\n          {\" \"}\n          - We will call you and complete your estimates (for both standard and\n          itemized filing)\n        </Typography>\n        <Typography sx={{ color: \"#11a63d\" }}>\n          {\" \"}\n          - If you decide to go with itemized filing, standard filing fee will\n          be deducted from your itemized filing fee\n        </Typography>\n        <Typography sx={{ marginTop: \"10px\" }}>\n          * For missing information/complex returns, the estimated completion\n          time can be greater but we will let you know in advance.\n        </Typography>\n        <Typography>\n          ** Minimum Standard filing fee is for 1040 EZ returns with 1 state\n        </Typography>\n      </DialogContent>\n      <DialogActions\n        sx={{ justifyContent: \"center\", backgroundColor: \"rgb(193, 210, 231)\" }}\n      >\n        <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Button\n            variant=\"text\"\n            className={customStyles.confirmButton}\n            onClick={handleClose}\n            sx={{ marginRight: \"15px\", color: \"#474747 !important\" }}\n          >\n            Ok\n          </Button>\n        </Box>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ConfirmedClientConfirmationDialogBox;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  Box,\n  Grid,\n  TextField,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  MenuItem,\n  CircularProgress,\n  Chip,\n  IconButton,\n  Avatar,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport CustomAlert from \"../../../components/CustomAlert\";\n\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport { makeStyles } from \"@mui/styles\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\nimport { thousands_separators } from \"../../../utils/index\";\nimport ConfirmedClientConfirmationDialogBox from \"../ConfirmClientDialogBox\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: 600,\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: 400,\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    marginBottom: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst PickAppointment = ({ open, id }) => {\n  const customStyles = customTextStyles();\n  const [isPickAppointmentDetailsLoading, setIsPickAppointmentDetailsLoading] =\n    useState(false);\n  const state = useSelector((state) => state.app);\n  const [\n    isConfirmedClientConfirmationDialogBoxOpen,\n    setIsConfirmedClientConfirmationDialogBoxOpen,\n  ] = useState(false);\n\n  const [appointmentData, setAppointmentData] = useState({\n    date: \"\",\n    time: \"23:00\",\n    timezone: \"America/Chicago\",\n  });\n  const [appointmentDetails, setAppointmentDetails] = useState([]);\n\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  const handleDateChange = (event) => {\n    setAppointmentData({\n      ...appointmentData,\n      date: event.target.value,\n    });\n  };\n\n  const handleTimeChange = (event) => {\n    setAppointmentData({\n      ...appointmentData,\n      time: event.target.value,\n    });\n  };\n\n  const handleTimezoneChange = (event) => {\n    setAppointmentData({\n      ...appointmentData,\n      timezone: event.target.value,\n    });\n  };\n\n  const handleCancelAppointment = (appointmentId) => {\n    setIsPickAppointmentDetailsLoading(true);\n    let payload = { id: id, appointmentId: appointmentId };\n    privateApiPOST(Api.deleteAppointment, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setShowAlert({\n            isAlert: true,\n            alertText: \"Appointment Cancelled Successfully\",\n            severity: \"success\",\n          });\n        }\n        setIsPickAppointmentDetailsLoading(false);\n        handleFetchAppointmentDetails();\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n        setIsPickAppointmentDetailsLoading(false);\n      });\n  };\n\n  const handleFetchAppointmentDetails = () => {\n    setIsPickAppointmentDetailsLoading(true);\n    let payload = { id: id };\n    privateApiPOST(Api.appointmentDetails, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setIsPickAppointmentDetailsLoading(false);\n          setAppointmentDetails(data?.data);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        if (error.response.status === 400 || error.response.status === 401) {\n          setShowAlert({\n            isAlert: true,\n            alertText: error.response.data?.message,\n            severity: \"error\",\n            alertTitle: \"Error\",\n          });\n        } else {\n          setShowAlert({\n            isAlert: true,\n            alertText: \"Something went wrong\",\n            severity: \"error\",\n            alertTitle: \"Error\",\n          });\n        }\n        setIsPickAppointmentDetailsLoading(false);\n      });\n  };\n  const handleFetchAppointmentChange = (payload) => {\n    setIsPickAppointmentDetailsLoading(true);\n\n    privateApiPOST(Api.bookAppointment, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          if (status === 200) {\n            console.log(\"data\", data?.data);\n            setShowAlert({\n              isAlert: true,\n              alertText: data?.message,\n              severity: \"success\",\n            });\n          }\n          setAppointmentData({\n            date: \"\",\n            time: \"23:00\",\n            timezone: \"America/Chicago\",\n          });\n          handleFetchAppointmentDetails();\n        }\n        setIsPickAppointmentDetailsLoading(false);\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        if (error.response.status === 400 || error.response.status === 401) {\n          setShowAlert({\n            isAlert: true,\n            alertText: error.response.data?.message,\n            severity: \"error\",\n            alertTitle: \"Error\",\n          });\n        } else {\n          setShowAlert({\n            isAlert: true,\n            alertText: \"Something went wrong\",\n            severity: \"error\",\n            alertTitle: \"Error\",\n          });\n        }\n        setIsPickAppointmentDetailsLoading(false);\n      });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let payload = { ...appointmentData, id: id };\n    handleFetchAppointmentChange(payload);\n  };\n\n  const showMsg = () => {\n    // Add your showMsg function logic here\n  };\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\") && open) {\n      handleFetchAppointmentDetails();\n    }\n  }, []);\n\n  const generateTimeOptions = () => {\n    const timeOptions = [];\n    for (let hours = 11; hours <= 23; hours++) {\n      for (let minutes = 0; minutes < 60; minutes += 30) {\n        const hourStr = String(hours).padStart(2, \"0\");\n        const minuteStr = String(minutes).padStart(2, \"0\");\n        const timeOption = `${hourStr}:${minuteStr}`;\n        timeOptions.push(timeOption);\n      }\n    }\n    return timeOptions;\n  };\n\n  const timeOptions = generateTimeOptions();\n\n  const handleCloseConfirmedClientConfirmationDialogBoxOpen = () => {\n    setIsConfirmedClientConfirmationDialogBoxOpen(false);\n  };\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {showAlert.isAlert ? (\n        <CustomAlert\n          open={showAlert.isAlert}\n          severity={showAlert.severity}\n          alertTitle={showAlert.alertTitle}\n          alertText={showAlert.alertText}\n          onClose={() =>\n            setShowAlert({\n              isAlert: false,\n              alertTitle: \"\",\n              alertText: \"\",\n              severity: \"\",\n            })\n          }\n        />\n      ) : null}\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h5\">\n          Tax Notes Interview - Schedule your date:\n        </Typography>\n        <Box\n          sx={{\n            display: { xs: \"block\", sm: \"flex\" },\n            flexWrap: \"wrap\",\n            justifyContent: \"space-around\",\n            marginTop: \"30px\",\n          }}\n        >\n          <Box sx={{ width: { xs: \"100%\", sm: \"35%\" } }}>\n            <CustomInputTextField\n              attributeMarginTop=\"12px\"\n              attribute=\"Client Name\"\n              is_required={false}\n              fullWidth\n              // label=\"Name\"\n              name=\"name\"\n              value={`${state.first_name} ${state.last_name}`}\n              variant=\"outlined\"\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Box>\n\n          <Box sx={{ width: { xs: \"100%\", sm: \"35%\" } }}>\n            <CustomInputTextField\n              attributeMarginTop=\"12px\"\n              attribute={\"Phone Number\"}\n              is_required={false}\n              fullWidth\n              // label=\"Phone Number\"\n              name=\"phone_no\"\n              value={state ? state.phone_no : \"\"}\n              variant=\"outlined\"\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Box>\n        </Box>\n        <Typography variant=\"body1\" color=\"#11a63d\" sx={{ marginTop: \"30px\" }}>\n          Become a confirmed client by making an advance fee payment. Same day\n          tax filing available for Confirmed Clients.\n        </Typography>\n        <br />\n        <Typography variant=\"body1\" color=\"green\" sx={{ marginTop: \"10px\" }}>\n          How to become a Confirmed Client?&nbsp;&nbsp;&nbsp;\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setIsConfirmedClientConfirmationDialogBoxOpen(true)}\n            sx={{ marginTop: { xs: \"10px\" } }}\n          >\n            CLICK HERE\n          </Button>\n        </Typography>\n\n        <Typography variant=\"body1\" color=\"#11a63d\" sx={{ marginTop: \"30px\" }}>\n          {`We will call you anytime between 11.00 AM CST to 11.30 PM CST on your appointment date.`}\n        </Typography>\n        <Typography variant=\"body1\" color=\"#11a63d\" sx={{ marginLeft: \"10px\" }}>\n          {`- We try to match your preferred time. Unfortunately, it is not a guaranteed time.`}\n        </Typography>\n        <Typography variant=\"body1\" color=\"#11a63d\" sx={{ marginTop: \"30px\" }}>\n          Please pick your availability between{\" \"}\n          <Typography variant=\"body1\" color=\"primary\" component=\"span\">\n            01/11/2024 to 04/18/2024\n          </Typography>\n        </Typography>\n        <form autoComplete=\"off\" onSubmit={handleSubmit}>\n          <Box\n            sx={{\n              display: { xs: \"block\", sm: \"flex\" },\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n              marginTop: \"30px\",\n            }}\n          >\n            <Box sx={{ width: { xs: \"100%\", sm: \"35%\" } }}>\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={10}>\n                    <CustomInputTextField\n                      attributeMarginTop=\"12px\"\n                      attribute=\"Date\"\n                      is_required={false}\n                      value={appointmentData.date}\n                      onChange={handleDateChange}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={2} sx={{ margin: \"auto 0\" }}>\n                    <Typography\n                      variant=\"h6\"\n                      sx={{\n                        color: \"#11a63d\",\n                        whiteSpace: \"nowrap\",\n                        marginLeft: \"-15px\",\n                      }}\n                    >\n                      [MM/DD/YYYY]\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Box>\n            <Box sx={{ width: { xs: \"100%\", sm: \"35%\" } }}>\n              <CustomInputTextField\n                attributeMarginTop=\"12px\"\n                attribute=\"Preferrable Time\"\n                is_required={false}\n                select\n                // label=\"Time\"\n                value={appointmentData.time}\n                onChange={handleTimeChange}\n                variant=\"outlined\"\n                fullWidth\n                required\n              >\n                {timeOptions.map((option) => (\n                  <MenuItem key={option} value={option}>\n                    {option}\n                  </MenuItem>\n                ))}\n              </CustomInputTextField>\n            </Box>\n            <Box sx={{ width: { xs: \"100%\", sm: \"25%\" } }}>\n              <CustomInputTextField\n                attributeMarginTop=\"12px\"\n                attribute=\"Time Zone\"\n                is_required={false}\n                select\n                value={appointmentData.timezone}\n                onChange={handleTimezoneChange}\n                fullWidth\n                required\n              >\n                <MenuItem value=\"America/Chicago\">CST</MenuItem>\n                <MenuItem value=\"EST\">EST</MenuItem>\n                {/* Add more time zones as needed */}\n              </CustomInputTextField>\n            </Box>\n          </Box>\n          <Typography\n            variant=\"body1\"\n            color=\"#11a63d\"\n            sx={{ marginTop: \"30px\" }}\n          >\n            Maximum number of appointments you can have is \"ONE\". If you already\n            have an appointment delete it before scheduling new appointment\n          </Typography>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={showMsg}\n            sx={{ display: \"block\", margin: \"0 auto\", marginTop: \"20px\" }}\n          >\n            SUBMIT\n          </Button>\n        </form>\n        <Box>\n          {isPickAppointmentDetailsLoading ? (\n            <CircularProgress />\n          ) : (\n            <TableContainer\n              sx={{\n                marginTop: \"32px\",\n                paddingBottom: { xs: \"10px\", sm: \"0px\" },\n              }}\n            >\n              <Table\n                sx={{\n                  borderCollapse: \"collapse\",\n                }}\n                aria-label=\"Place Order Series Table\"\n              >\n                <TableHead>\n                  <TableRow>\n                    <TableCell className={customStyles.tableHeader}>\n                      Date\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      Start Time\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      End Time\n                    </TableCell>\n                    <TableCell className={customStyles.tableHeader}>\n                      Status\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {appointmentDetails.length > 0 &&\n                    appointmentDetails.map((row, index) => (\n                      <TableRow key={index}>\n                        <TableCell className={customStyles.tableData}>\n                          {row.date}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          {row.start_time}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          {row.end_time}\n                        </TableCell>\n                        <TableCell className={customStyles.tableData}>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              marginTop: \"8px\",\n                              alignItems: \"center\",\n                              marginBottom: {\n                                xs: row.status !== \"BOOKED\" ? \"14px\" : 0,\n                                sm: 0,\n                              },\n                            }}\n                          >\n                            <Chip\n                              label={row[\"status\"]}\n                              size=\"small\"\n                              color={\n                                row.status === \"BOOKED\"\n                                  ? \"info\"\n                                  : row.status === \"CANCELLED\"\n                                  ? \"error\"\n                                  : \"success\"\n                              }\n                            />\n\n                            <IconButton\n                              disabled={isPickAppointmentDetailsLoading}\n                              sx={{\n                                height: \"40px\",\n                                width: \"40px\",\n                                visibility:\n                                  row.status === \"BOOKED\"\n                                    ? \"visible\"\n                                    : \"hidden\",\n                                onCursor: \"pointer\",\n                                display: { xs: \"none\", sm: \"flex\" },\n                              }}\n                              onClick={() => handleCancelAppointment(row.id)}\n                            >\n                              <Avatar\n                                alt=\"delete\"\n                                src=\"/static/img/deleteIcon.svg\"\n                                sx={{ height: \"24px\", width: \"24px\" }}\n                              />\n                            </IconButton>\n                          </Box>\n                        </TableCell>\n\n                        <TableCell className={customStyles.mobileView}>\n                          <Box>\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                                justifyContent: \"space-between\",\n                                marginTop: \"16px\",\n                              }}\n                            >\n                              <Box sx={{ marginTop: \"3px\" }}>\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellHeader\n                                  }\n                                >\n                                  Date\n                                </Typography>\n\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellValue\n                                  }\n                                >\n                                  {row.date}\n                                </Typography>\n                              </Box>\n                              <Box sx={{ marginTop: \"3px\" }}>\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellHeader\n                                  }\n                                >\n                                  Status\n                                </Typography>\n\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellValue\n                                  }\n                                >\n                                  {row.status}\n                                </Typography>\n                              </Box>\n                              <Box sx={{ marginTop: \"3px\" }}>\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellHeader\n                                  }\n                                >\n                                  Start Time\n                                </Typography>\n\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellValue\n                                  }\n                                >\n                                  {row.start_time}\n                                </Typography>\n                              </Box>\n                            </Box>\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                                justifyContent: \"space-between\",\n                                marginTop: \"16px\",\n                              }}\n                            >\n                              <Box sx={{ marginTop: \"3px\" }}>\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellHeader\n                                  }\n                                >\n                                  End Time\n                                </Typography>\n\n                                <Typography\n                                  className={\n                                    customStyles.mobileViewTableCellValue\n                                  }\n                                >\n                                  {row.end_time}\n                                </Typography>\n                              </Box>\n                              <Box\n                              // sx={{\n                              //   display: \"flex\",\n                              //   justifyContent: \"center\", // Center the button horizontally\n                              //   alignItems: \"center\",\n                              // }}\n                              >\n                                <Button\n                                  disabled={isPickAppointmentDetailsLoading}\n                                  startIcon={<DeleteIcon />}\n                                  size=\"small\"\n                                  onClick={() => {\n                                    handleCancelAppointment(row.id);\n                                  }}\n                                  sx={{\n                                    visibility:\n                                      row.status === \"BOOKED\"\n                                        ? \"visible\"\n                                        : \"hidden\",\n                                  }}\n                                >\n                                  Delete{\" \"}\n                                  {isPickAppointmentDetailsLoading && (\n                                    <CircularProgress\n                                      sx={{ ml: 1 }}\n                                      size={14}\n                                    />\n                                  )}\n                                </Button>\n                              </Box>\n                            </Box>\n                          </Box>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n              {appointmentDetails.length === 0 && (\n                <Typography\n                  variant=\"h5\"\n                  sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n                >\n                  No Appointments Found\n                </Typography>\n              )}\n            </TableContainer>\n          )}\n        </Box>\n      </Container>\n      <ConfirmedClientConfirmationDialogBox\n        open={isConfirmedClientConfirmationDialogBoxOpen}\n        handleClose={handleCloseConfirmedClientConfirmationDialogBoxOpen}\n      />\n    </Box>\n  );\n};\n\nexport default PickAppointment;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  Container,\n} from \"@mui/material\";\n\nconst PayPalPayment = () => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid spacing={2} container justifyContent=\"center\" alignItems=\"center\">\n        <Grid item xs={12} sm={7}>\n          <Box\n            id=\"ppdiv\"\n            name=\"ppdiv\"\n            sx={{\n              fontSize: 12,\n              fontFamily: \"Verdana\",\n              display: \"block\",\n              p: \"20px\", // Padding\n              border: \"1px solid grey\", // Border style\n            }}\n          >\n            <Typography\n              variant=\"body1\"\n              color=\"#11a63d\"\n              sx={{ marginBottom: \"20px\" }}\n            >\n              P.S: If you choose this Payment option (PayPal), your tax filing\n              fee includes a 3% service charge.\n            </Typography>\n            <Typography variant=\"body1\" sx={{ marginBottom: \"20px\" }}>\n              <span id=\"scsppt\">\n                Your Service Fee amount (including 3% service charge)\n              </span>\n            </Typography>\n            <Typography variant=\"body1\" sx={{ marginBottom: \"20px\" }}>\n              If your payment is successful, you'll receive an automatic email\n              confirmation from \"PayPal.\"\n            </Typography>\n            <form\n              autoComplete=\"off\"\n              onSubmit={handleSubmit}\n              // action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\"\n            >\n              <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n              <input type=\"hidden\" name=\"business\" value=\"4KKFRTPBL3E8E\" />\n              <input type=\"hidden\" name=\"lc\" value=\"US\" />\n              <input\n                type=\"hidden\"\n                name=\"item_name\"\n                value=\"Tax Consultation Fee\"\n              />\n              <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n              <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n              <input type=\"hidden\" name=\"no_note\" value=\"0\" />\n              <input\n                type=\"hidden\"\n                name=\"cn\"\n                value=\"Add special instructions to the seller:\"\n              />\n              <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n              <input type=\"hidden\" name=\"rm\" value=\"1\" />\n              <input\n                type=\"hidden\"\n                name=\"return\"\n                value=\"https://www.Onecall Tax Services.com/payment_sucess\"\n              />\n              <input\n                type=\"hidden\"\n                name=\"bn\"\n                value=\"PP-BuyNowBF:btn_paynowCC_LG.gif:NonHosted\"\n              />\n              <TextField\n                label=\"Enter amount Here\"\n                type=\"text\"\n                id=\"pp_amount\"\n                name=\"amount\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{\n                  mt: \"20px\",\n                  width: \"50%\",\n                  display: \"block\",\n                  ml: { xs: \"20px\", sm: \"0px\" },\n                }} // Adjust the margin-top as needed\n              />\n              <Button type=\"submit\">\n                <img\n                  src=\"https://www.paypalobjects.com/en_US/i/btn/btn_paynowCC_LG.gif\"\n                  border=\"0\"\n                  name=\"submit\"\n                  alt=\"PayPal - The safer, easier way to pay online!\"\n                />\n              </Button>\n              <img\n                alt=\"\"\n                border=\"0\"\n                src=\"https://www.paypalobjects.com/en_US/i/scr/pixel.gif\"\n                width=\"1\"\n                height=\"1\"\n              />\n            </form>\n            <Typography color=\"#11a63d\">\n              We will send your tax filing copies with instructions with in 2\n              business days.\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default PayPalPayment;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  MenuItem,\n  Button,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  CircularProgress,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { statesNames, countryCode } from \"../../../constants\";\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\nimport { CustomLabel } from \"./FilerDetails\";\n\nconst useStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    marginBottom: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst ConfirmDetails = ({\n  open,\n  id,\n  personalDetails,\n  contactDetails,\n  spouseDetails,\n  incomeDetails,\n  providedLivingSupport,\n  bankDetails,\n  handlePickAppointment,\n  dependantDetails,\n}) => {\n  const customStyles = useStyles();\n  const stateOptions = statesNames;\n  const countryCodes = countryCode;\n\n  const transform = (input) => {\n    if (input === undefined || input === null) {\n      return \"\";\n    }\n\n    if (input.includes(\"-\")) {\n      return input;\n    }\n\n    const rawSsn = input.replace(/-/g, \"\"); // Remove hyphens\n    const formattedSsn = rawSsn\n      .replace(/\\D/g, \"\") // Remove non-digits\n      .replace(/(\\d{3})(\\d{2})(\\d{4})/, \"$1-$2-$3\"); // Format as 123-45-6789\n    return formattedSsn;\n  };\n\n  const formatPhoneNumber = (phoneNumber) => {\n    if (phoneNumber === undefined || phoneNumber === null) {\n      return \"\";\n    }\n\n    if (phoneNumber.includes(\"-\")) {\n      return phoneNumber;\n    }\n\n    // Remove non-numeric characters from the phone number\n    const numericOnly = phoneNumber.replace(/\\D/g, \"\");\n\n    // Use regex to capture groups of digits in the desired format\n    const formattedNumber = numericOnly.replace(\n      /(\\d{3})(\\d{3})(\\d{4})/,\n      \"($1)-$2-$3\"\n    );\n\n    return formattedNumber;\n  };\n\n  const [formData, setFormData] = useState({\n    // Personal Details\n\n    firstName: personalDetails[\"firstName\"],\n    middleName: personalDetails[\"middleName\"],\n    lastName: personalDetails[\"lastName\"],\n    ssn: personalDetails[\"ssn\"],\n    dateOfBirth: personalDetails[\"dateOfBirth\"],\n    gender: personalDetails[\"gender\"],\n    occupation: personalDetails[\"occupation\"],\n    residentialStatus: personalDetails[\"residentialStatus\"],\n    email: personalDetails[\"email\"],\n\n    // Contact Details\n    street: contactDetails[\"street\"],\n    apartment: contactDetails[\"apartment\"],\n    city: contactDetails[\"city\"],\n    state: contactDetails[\"state\"],\n    zipCode: contactDetails[\"zipCode\"],\n    country: contactDetails[\"country\"],\n    primaryCountryCode: contactDetails[\"primaryCountryCode\"],\n    primaryPhoneNumber: contactDetails[\"primaryPhoneNumber\"],\n    secondaryCountryCode: contactDetails[\"secondaryCountryCode\"],\n    secondaryPhoneNumber: contactDetails[\"secondaryPhoneNumber\"],\n    contactEmail: contactDetails[\"contactEmail\"],\n\n    taxFiledLastYear: incomeDetails[\"taxFiledLastYear\"], // Set an initial value for taxFiledLastYear\n\n    // additional Spouse Details (Initially hidden)\n    taxPayerStatus: personalDetails[\"taxPayerStatus\"], // Default to \"No\" (Single)\n    spouseFirstName: spouseDetails[\"spouseFirstName\"],\n    spouseMiddleInitial: spouseDetails[\"spouseMiddleInitial\"],\n    spouseLastName: spouseDetails[\"spouseLastName\"],\n    spouseSsnOrItin: spouseDetails[\"spouseSsnOrItin\"],\n    spouseApplyForItin: spouseDetails[\"spouseApplyForItin\"], // Default to \"No\"\n    spouseDateOfBirth: spouseDetails[\"spouseDateOfBirth\"],\n    spouseGender: spouseDetails[\"spouseGender\"],\n    spouseOccupation: spouseDetails[\"spouseOccupation\"],\n    spouseResidentialStatus: spouseDetails[\"spouseResidentialStatus\"],\n    spouseEmail: spouseDetails[\"spouseEmail\"],\n\n    providedLivingSupport: providedLivingSupport,\n\n    //Income Details\n    interestIncome: incomeDetails[\"interestIncome\"],\n    dividendIncome: incomeDetails[\"dividendIncome\"],\n    soldStocks: incomeDetails[\"soldStocks\"],\n    soldCrypto: incomeDetails[\"soldCrypto\"],\n    foreignIncome: incomeDetails[\"foreignIncome\"],\n    retirementAccounts: incomeDetails[\"retirementAccounts\"],\n    stateTaxRefund: incomeDetails[\"stateTaxRefund\"],\n    foreignBankAccount: incomeDetails[\"foreignBankAccount\"],\n    foreignAssets: incomeDetails[\"foreignAssets\"],\n    rentalIncome: incomeDetails[\"rentalIncome\"],\n    income1099: incomeDetails[\"income1099\"],\n    incomeDescription: incomeDetails[\"incomeDescription\"],\n    incomeAmount: incomeDetails[\"incomeAmount\"],\n    addAdditionalInformation: false,\n\n    //Bank Details\n    bankingType: bankDetails[\"bankingType\"],\n    bankName: bankDetails[\"bankName\"],\n    accountHolderName: bankDetails[\"accountHolderName\"],\n    ownership: bankDetails[\"ownership\"],\n    routingNumber: bankDetails[\"routingNumber\"],\n    confirmRoutingNumber: bankDetails[\"confirmRoutingNumber\"],\n    accountNumber: bankDetails[\"accountNumber\"],\n    confirmAccountNumber: bankDetails[\"confirmAccountNumber\"],\n    accountType: bankDetails[\"accountType\"],\n    confirmAccountType: bankDetails[\"confirmAccountType\"],\n  });\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={2}>\n          <Grid item lg={6} sm={6} xs={12}>\n            <Box className={customStyles.leftSide}>\n              <Typography variant=\"h4\" sx={{ marginBottom: \"36px\" }}>\n                Personal Details\n              </Typography>\n\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                  maxWidth: \"96%\",\n                }}\n              >\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"textSecondary\"\n                  sx={{ marginTop: \"20px\", maxWidth: \"25%\" }}\n                >\n                  Taxpayer Name\n                  <font color=\"#11a63d\" size=\"2\">\n                    (As Per SSN):\n                  </font>\n                </Typography>\n\n                <Box>\n                  <CustomInputTextField\n                    disabled\n                    attribute=\"First Name\"\n                    attributeTextAlign=\"right\"\n                    is_required={true}\n                    fullWidth\n                    margin=\"normal\"\n                    name=\"firstName\"\n                    value={formData.firstName}\n                    variant=\"outlined\"\n                  />\n\n                  <CustomInputTextField\n                    disabled\n                    attribute=\"Middle Initial\"\n                    attributeTextAlign=\"right\"\n                    is_required={false}\n                    fullWidth\n                    margin=\"normal\"\n                    name=\"middleName\"\n                    value={formData.middleName}\n                    variant=\"outlined\"\n                  />\n                  <CustomInputTextField\n                    disabled\n                    attribute=\"Last Name\"\n                    attributeTextAlign=\"right\"\n                    is_required={true}\n                    fullWidth\n                    margin=\"normal\"\n                    name=\"lastName\"\n                    value={formData.lastName}\n                    variant=\"outlined\"\n                  />\n                </Box>\n              </Box>\n\n              <CustomInputTextField\n                disabled\n                attribute=\"SSN\"\n                attributeTextAlign=\"right\"\n                is_required={true}\n                fullWidth\n                margin=\"normal\"\n                name=\"ssn\"\n                value={transform(formData.ssn)}\n                variant=\"outlined\"\n              />\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={10}>\n                    <CustomInputTextField\n                      disabled\n                      attribute=\"Date of Birth\"\n                      attributeTextAlign=\"right\"\n                      is_required={true}\n                      fullWidth\n                      margin=\"normal\"\n                      name=\"dateOfBirth\"\n                      value={formData.dateOfBirth}\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        shrink: true, // This is important for the label to behave correctly\n                      }}\n                      InputProps={{\n                        style: {\n                          color: \"black\", // Customize the label color\n                        },\n                      }}\n                      inputProps={{\n                        // To disable the default placeholder\n                        placeholder: \"\",\n                        // Other attributes you might need\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={2} sx={{ margin: \"auto 0\" }}>\n                    <Typography\n                      variant=\"h6\"\n                      sx={{\n                        color: \"#11a63d\",\n                        whiteSpace: \"nowrap\",\n                        marginLeft: \"-20px\",\n                      }}\n                    >\n                      [MM/DD/YYYY]\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <CustomInputTextField\n                disabled\n                attribute=\"Gender\"\n                attributeTextAlign=\"right\"\n                is_required={true}\n                select\n                fullWidth\n                margin=\"normal\"\n                name=\"gender\"\n                value={formData.gender}\n                variant=\"outlined\"\n              >\n                <MenuItem value=\"MALE\">Male</MenuItem>\n                <MenuItem value=\"FEMALE\">Female</MenuItem>\n                <MenuItem value=\"Other\">Other</MenuItem>\n              </CustomInputTextField>\n              <CustomInputTextField\n                disabled\n                attribute=\"Occupation / Job Title\"\n                attributeTextAlign=\"right\"\n                is_required={true}\n                fullWidth\n                margin=\"normal\"\n                name=\"occupation\"\n                value={formData.occupation}\n                variant=\"outlined\"\n              />\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={10}>\n                    <CustomInputTextField\n                      disabled\n                      attribute=\"Residential Status\"\n                      attributeTextAlign=\"right\"\n                      is_required={true}\n                      fullWidth\n                      margin=\"normal\"\n                      name=\"residentialStatus\"\n                      value={formData.residentialStatus}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item xs={2} sx={{ margin: \"auto 0\" }}>\n                    <Typography\n                      variant=\"h5\"\n                      sx={{\n                        color: \"#11a63d\",\n                        whiteSpace: \"nowrap\",\n                        marginLeft: \"-20px\",\n                      }}\n                    >\n                      [VISA TYPE]\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Box>\n          </Grid>\n\n          {/* Right Side - Contact Details */}\n          <Grid item lg={6} sm={6} xs={12}>\n            <Box className={customStyles.rightSide}>\n              <Typography variant=\"h4\" sx={{ marginBottom: \"16px\" }}>\n                Contact Details\n              </Typography>\n              <Typography\n                color={\"#11a63d\"}\n                sx={{ marginLeft: \"10px\" }}\n                variant=\"h5\"\n              >\n                (Provide U.S current communication Address)\n              </Typography>\n              <CustomInputTextField\n                attribute=\"Street\"\n                is_required={true}\n                fullWidth\n                name=\"street\"\n                value={formData.street}\n                variant=\"outlined\"\n                disabled\n              />\n              <CustomInputTextField\n                attribute=\"Apartment\"\n                is_required={true}\n                fullWidth\n                name=\"apartment\"\n                value={formData.apartment}\n                variant=\"outlined\"\n                disabled\n              />\n              <CustomInputTextField\n                attribute=\"City\"\n                is_required={true}\n                fullWidth\n                name=\"city\"\n                value={formData.city}\n                variant=\"outlined\"\n                disabled\n              />\n              <CustomInputTextField\n                attribute=\"State\"\n                is_required={true}\n                select\n                fullWidth\n                name=\"state\"\n                value={formData.state}\n                variant=\"outlined\"\n                disabled\n              >\n                {stateOptions.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </CustomInputTextField>\n              <CustomInputTextField\n                attribute=\"Zip Code\"\n                is_required={true}\n                fullWidth\n                name=\"zipCode\"\n                value={formData.zipCode}\n                variant=\"outlined\"\n                disabled\n              />\n              <CustomInputTextField\n                attribute=\"Country\"\n                is_required={true}\n                select\n                fullWidth\n                name=\"country\"\n                value={formData.country}\n                variant=\"outlined\"\n                disabled\n              >\n                <MenuItem value=\"USA\">USA</MenuItem>\n                <MenuItem value=\"Other\">Other</MenuItem>\n              </CustomInputTextField>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  width: \"93%\",\n                  margin: \"10px 0\",\n                  maxHeight: \"60px\",\n                }}\n              >\n                <Typography\n                  variant=\"body1\"\n                  sx={{\n                    width: { xs: \"30%\", sm: \"120px\" },\n                  }}\n                >\n                  <span>Primary Phone</span>\n                  <span\n                    style={{\n                      color: \"red\",\n                      fontSize: \"0.875rem\",\n                      marginLeft: \"3px\",\n                    }}\n                  >\n                    *\n                  </span>\n                  &nbsp;:\n                </Typography>\n                <TextField\n                  attribute=\"Primary Phone\"\n                  select\n                  name=\"primaryCountryCode\"\n                  value={formData.primaryCountryCode}\n                  variant=\"outlined\"\n                  disabled\n                  sx={{\n                    width: \"18%\",\n                    \"& .MuiOutlinedInput-root\": {\n                      \"& fieldset\": {\n                        borderRadius: \"2px\",\n                      },\n                    },\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                      {\n                        border: \"0.1px solid #bdbdbd\",\n                      },\n                    \"& .MuiOutlinedInput-input\": {\n                      padding: \"10px\",\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                    },\n                  }}\n                >\n                  {countryCodes.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  name=\"primaryPhoneNumber\"\n                  value={formatPhoneNumber(formData.primaryPhoneNumber)}\n                  variant=\"outlined\"\n                  disabled\n                  sx={{\n                    width: { xs: \"50%\", sm: \"165px\" },\n                    \"& .MuiOutlinedInput-root\": {\n                      \"& fieldset\": {\n                        borderRadius: \"2px\",\n                      },\n                    },\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                      {\n                        border: \"0.1px solid #bdbdbd\",\n                      },\n                    \"& .MuiOutlinedInput-input\": {\n                      padding: \"10px\",\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                    },\n                  }}\n                />\n              </Box>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  width: \"93%\",\n                  margin: \"10px 0\",\n                  maxHeight: \"60px\",\n                }}\n              >\n                <Typography\n                  variant=\"body1\"\n                  sx={{\n                    width: { xs: \"30%\", sm: \"120px\" },\n                  }}\n                >\n                  <span>Secondary Phone</span>\n                  &nbsp;:\n                </Typography>\n                <TextField\n                  name=\"secondaryCountryCode\"\n                  value={formData.secondaryCountryCode}\n                  variant=\"outlined\"\n                  disabled\n                  sx={{\n                    width: \"18%\",\n                    \"& .MuiOutlinedInput-root\": {\n                      \"& fieldset\": {\n                        borderRadius: \"2px\",\n                      },\n                    },\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                      {\n                        border: \"0.1px solid #bdbdbd\",\n                      },\n                    \"& .MuiOutlinedInput-input\": {\n                      padding: \"10px\",\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                    },\n                  }}\n                >\n                  {countryCodes.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  attribute=\"Secondary Phone\"\n                  name=\"secondaryPhoneNumber\"\n                  value={formatPhoneNumber(formData.secondaryPhoneNumber)}\n                  variant=\"outlined\"\n                  disabled\n                  sx={{\n                    width: { xs: \"50%\", sm: \"165px\" },\n                    \"& .MuiOutlinedInput-root\": {\n                      \"& fieldset\": {\n                        borderRadius: \"2px\",\n                      },\n                    },\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                      {\n                        border: \"0.1px solid #bdbdbd\",\n                      },\n                    \"& .MuiOutlinedInput-input\": {\n                      padding: \"10px\",\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                    },\n                  }}\n                />\n              </Box>\n              <CustomInputTextField\n                attribute=\"Email Id\"\n                is_required={true}\n                fullWidth\n                name=\"contactEmail\"\n                value={formData.contactEmail}\n                variant=\"outlined\"\n                disabled\n              />\n            </Box>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Box sx={{ margin: \"16px 0\" }}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={10}\n                sm={5}\n                style={{ display: \"flex\", alignItems: \"center\" }}\n              >\n                <Typography variant=\"body1\">\n                  <CustomLabel\n                    label=\"Have you filed your taxes with Onecall Tax Services in the last year?\"\n                    required={true}\n                  />\n                </Typography>\n              </Grid>\n              <Grid item xs={2} sm={1}>\n                <select\n                  id=\"taxFiledLastYear\"\n                  name=\"taxFiledLastYear\"\n                  value={formData.taxFiledLastYear}\n                  style={{ width: \"100%\" }}\n                  disabled\n                >\n                  <option value=\"\">Select</option>\n                  {/* Add an empty option */}\n                  <option value={true}>Yes</option>\n                  <option value={false}>No</option>\n                </select>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box sx={{ margin: \"16px 0\" }}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                xs={8}\n                sm={5}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography variant=\"body1\">\n                  <CustomLabel label=\"Taxpayer Status\" required={true} />\n                </Typography>\n              </Grid>\n              <Grid item xs={4} sm={1}>\n                <select\n                  id=\"taxPayerStatus\"\n                  name=\"taxPayerStatus\"\n                  value={formData.taxPayerStatus}\n                  style={{ width: \"100%\" }}\n                  disabled\n                >\n                  <option value=\"\">Select Status</option>{\" \"}\n                  {/* Add an empty option */}\n                  <option value=\"SINGLE\">Single</option>\n                  <option value=\"MARRIED\">Married</option>\n                </select>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        {formData.taxPayerStatus === \"MARRIED\" && (\n          <Grid container spacing={2}>\n            {/* Left Side - Spouse Details */}\n            <Grid item lg={6} sm={6} xs={12}>\n              <Typography variant=\"h4\" mb={2}>\n                Spouse Details\n              </Typography>\n              <Grid container spacing={2}>\n                <CustomInputTextField\n                  attribute=\"First Name\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseFirstName\"\n                  value={formData.spouseFirstName}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Middle Initial\"\n                  is_required={false}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseMiddleInitial\"\n                  value={formData.spouseMiddleInitial}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Last Name\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseLastName\"\n                  value={formData.spouseLastName}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"SSN/ITIN\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseSsnOrItin\"\n                  value={transform(formData.spouseSsnOrItin)}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Do you want to apply for ITIN?\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  select\n                  fullWidth\n                  name=\"spouseApplyForItin\"\n                  value={formData.spouseApplyForItin}\n                  variant=\"outlined\"\n                  disabled\n                >\n                  <MenuItem value={false}>No</MenuItem>\n                  <MenuItem value={true}>Yes</MenuItem>\n                </CustomInputTextField>\n              </Grid>\n            </Grid>\n\n            {/* Right Side - Spouse Contact */}\n            <Grid item lg={6} sm={6} xs={12}>\n              <Typography variant=\"h4\" mb={2}>\n                Spouse Contact\n              </Typography>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Grid container>\n                    <Grid item xs={10}>\n                      <CustomInputTextField\n                        disabled\n                        attribute=\"Date of Birth\"\n                        is_required={true}\n                        margin=\"normal\"\n                        name=\"spouseDateOfBirth\"\n                        fullWidth\n                        value={formData.spouseDateOfBirth}\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                          shrink: true, // This is important for the label to behave correctly\n                        }}\n                        InputProps={{\n                          style: {\n                            color: \"black\", // Customize the label color\n                          },\n                        }}\n                        inputProps={{\n                          // To disable the default placeholder\n                          placeholder: \"\",\n                          // Other attributes you might need\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={2} sx={{ margin: \"auto 0\" }}>\n                      <Typography\n                        variant=\"h6\"\n                        sx={{\n                          color: \"#11a63d\",\n                          whiteSpace: \"nowrap\",\n                          marginLeft: \"-20px\",\n                        }}\n                      >\n                        [MM/DD/YYYY]\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n                <CustomInputTextField\n                  attribute=\"Gender\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  select\n                  fullWidth\n                  name=\"spouseGender\"\n                  value={formData.spouseGender}\n                  variant=\"outlined\"\n                  disabled\n                >\n                  <MenuItem value=\"MALE\">Male</MenuItem>\n                  <MenuItem value=\"FEMALE\">Female</MenuItem>\n                  <MenuItem value=\"Other\">Other</MenuItem>\n                </CustomInputTextField>\n\n                <CustomInputTextField\n                  attribute=\"Occupation / Job Title\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseOccupation\"\n                  value={formData.spouseOccupation}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Residential Status\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseResidentialStatus\"\n                  value={formData.spouseResidentialStatus}\n                  variant=\"outlined\"\n                  disabled\n                />\n\n                <CustomInputTextField\n                  attribute=\"Email Id\"\n                  is_required={true}\n                  attributeMarginTop=\"8px\"\n                  fullWidth\n                  name=\"spouseEmail\"\n                  value={formData.spouseEmail}\n                  variant=\"outlined\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n        <Grid container>\n          <Grid\n            container\n            sx={{\n              marginTop: \"36px\",\n              marginBottom: \"24px\",\n            }}\n          >\n            <Grid\n              item\n              xs={10}\n              sm={9}\n              sx={{ display: \"flex\", alignItems: \"center\" }}\n            >\n              <Typography variant=\"body1\">\n                <CustomLabel\n                  label=\" Have you (or your spouse, if married) provided living\n                        support to your kids and/or dependents during the tax\n                        year?\"\n                />\n              </Typography>\n            </Grid>\n            <Grid item xs={2}>\n              <CustomInputTextField\n                attribute=\"\"\n                is_required={true}\n                // label={<CustomLabel label=\"\" />}\n                select\n                margin=\"normal\"\n                name=\"providedLivingSupport\"\n                value={formData.providedLivingSupport}\n                variant=\"outlined\"\n                disabled\n              >\n                <MenuItem value={true}>Yes</MenuItem>\n                <MenuItem value={false}>No</MenuItem>\n              </CustomInputTextField>\n            </Grid>\n          </Grid>\n          <Grid>\n            <Typography\n              variant=\"body1\"\n              style={{ color: \"blue\", wordSpacing: \"2px\" }}\n            >\n              NOTE: Make sure the kids or dependants reported in your (Taxpayer)\n              2023 Tax Return are not claimed as dependants in any other 2023\n              Individual Tax Returns.\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12}>\n          <TableContainer\n            sx={{\n              marginTop: \"32px\",\n              marginBottom: \"16px\",\n              paddingBottom: { xs: \"10px\", sm: \"0px\" },\n            }}\n          >\n            <Typography variant=\"h4\">Dependant Details</Typography>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={customStyles.tableHeader}>\n                    Name\n                  </TableCell>\n\n                  <TableCell className={customStyles.tableHeader}>\n                    Relationship\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    SSN/ITIN\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Apply ?\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    DOB\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Visa Type\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    C.S\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    Months\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {dependantDetails.length > 0 &&\n                  dependantDetails.map((row, index) => (\n                    <TableRow key={index}>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalFirstName} {row.additionalLastName}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalRelationship}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {transform(row.additionalSsnOrItin)}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalApplyForItin ? \"YES\" : \"NO\"}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalDateOfBirth}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalVisaType}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        USA\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.additionalStayCount}\n                      </TableCell>\n\n                      <TableCell className={customStyles.mobileView}>\n                        <Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                First Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalFirstName}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Last Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalLastName}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                RelationShip\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalRelationship}\n                              </Typography>\n                            </Box>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Visa Type\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.additionalVisaType}\n                              </Typography>\n                            </Box>\n\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                SSN/ITIN\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {transform(row.additionalSsnOrItin)}\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n            {dependantDetails.length === 0 && (\n              <Typography\n                variant=\"h5\"\n                sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n              >\n                No Dependants Found\n              </Typography>\n            )}\n          </TableContainer>\n        </Grid>\n        <Grid container spacing={2}>\n          {/* Interest Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have any Interest Income?\n              </FormLabel>\n              <RadioGroup\n                name=\"interestIncome\"\n                value={formData.interestIncome}\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Dividend Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have any Dividend Income?\n              </FormLabel>\n              <RadioGroup\n                name=\"dividendIncome\"\n                value={formData.dividendIncome}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Sold Stocks */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Did you sell any stocks in 2023?\n              </FormLabel>\n              <RadioGroup\n                name=\"soldStocks\"\n                value={formData.soldStocks}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Sold Crypto */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Did you sell any Crypto Currency in 2023?\n              </FormLabel>\n              <RadioGroup\n                name=\"soldCrypto\"\n                value={formData.soldCrypto}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n          {/* Foreign Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have any foreign country income in 2023?\n              </FormLabel>\n              <RadioGroup\n                name=\"foreignIncome\"\n                value={formData.foreignIncome}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Contributions/Distributions */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have contributions/distributions to/from retirement\n                accounts in year 2023?\n              </FormLabel>\n              <RadioGroup\n                name=\"retirementAccounts\"\n                value={formData.retirementAccounts}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* State Tax Refund */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Did you get State tax refund(s) in 2023?\n              </FormLabel>\n              <RadioGroup\n                name=\"stateTaxRefund\"\n                value={formData.stateTaxRefund}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Foreign Bank Account */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have Account Balance in Foreign banks exceeding more than\n                $10,000?\n              </FormLabel>\n              <RadioGroup\n                name=\"foreignBankAccount\"\n                value={formData.foreignBankAccount}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Foreign Assets */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have Foreign Assets value more than $50,000 at any time\n                during the tax year?\n              </FormLabel>\n              <RadioGroup\n                name=\"foreignAssets\"\n                value={formData.foreignAssets}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* Rental Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have Rental Income in Foreign Country/USA?\n              </FormLabel>\n              <RadioGroup\n                name=\"rentalIncome\"\n                value={formData.rentalIncome}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          {/* 1099-Misc/1099-NEC Income */}\n          <Grid item sm={12} xs={12}>\n            <FormControl\n              component=\"fieldset\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n              }}\n            >\n              <FormLabel\n                sx={{\n                  width: \"550px\", // Set the width here\n                }}\n              >\n                Do you have 1099-Misc/1099-NEC Income in year 2023?\n              </FormLabel>\n              <RadioGroup\n                name=\"income1099\"\n                value={formData.income1099}\n                disabled\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"No\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          <Grid\n            container\n            spacing={2}\n            sx={{\n              marginTop: \"30px\",\n              marginBottom: \"30px\",\n              marginLeft: \"0px\",\n            }}\n          >\n            <Grid item xs={12} className=\"leftSide\">\n              <Typography variant=\"h5\">Add other Income Information</Typography>\n\n              <CustomInputTextField\n                disabled\n                fullWidth\n                attribute=\"Income Description\"\n                margin=\"normal\"\n                name=\"incomeDescription\"\n                value={formData.incomeDescription}\n                variant=\"outlined\"\n              />\n\n              <CustomInputTextField\n                disabled\n                fullWidth\n                attribute=\"Income Amount\"\n                margin=\"normal\"\n                name=\"incomeAmount\"\n                value={formData.incomeAmount}\n                variant=\"outlined\"\n                type=\"number\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\n          <Typography variant=\"h4\" sx={{ marginTop: \"30px\" }}>\n            Important Note\n          </Typography>\n          <Typography\n            sx={{\n              marginTop: \"30px\",\n              wordSpacing: \"2px\",\n            }}\n          >\n            The IRS and certain State Revenue Departments facilitate DIRECT\n            DEPOSIT / WITHDRAWAL of Tax Refund or Tax Dues on the Tax Returns.\n            If you are interested in availing this option, we request you to\n            kindly input the following details.\n          </Typography>\n\n          <Grid container sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}>\n            <Grid\n              item\n              xs={10}\n              sm={4}\n              style={{ display: \"flex\", alignItems: \"center\" }}\n            >\n              <Typography variant=\"body1\">\n                I prefer to receive my tax refunds by way of\n              </Typography>\n            </Grid>\n            <Grid item xs={2} sm={4}>\n              <select\n                id=\"bankingType\"\n                name=\"bankingType\"\n                value={formData.bankingType}\n                style={{ width: \"100%\" }}\n                disabled\n              >\n                <option value=\"\">Select Option</option>\n                <option value=\"DIRECT DEPOSIT INTO MY BANK ACCOUNT\">\n                  Direct deposit into my bank account\n                </option>\n                <option value=\"PAPER CHECK\">Paper Check</option>\n              </select>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        {formData.bankingType === \"DIRECT DEPOSIT INTO MY BANK ACCOUNT\" && (\n          <Grid item xs={12}>\n            {/* Additional Fields for Direct Deposit */}\n            <Typography\n              variant=\"h5\"\n              sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}\n            >\n              Direct Deposit Information\n            </Typography>\n            <Typography sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}>\n              Note : Please understand that there is no risk by entering Bank\n              Account and Routing Numbers\n            </Typography>\n            <Grid\n              container\n              spacing={2}\n              sx={{\n                border: \"1px solid #000000\",\n                padding: \"20px\",\n                marginBottom: \"20px\",\n                backgroundColor: \"#C7DFF0\",\n              }}\n            >\n              <Grid item lg={6} sm={6} xs={12}>\n                <CustomInputTextField\n                  attribute=\"Bank Name\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"bankName\"\n                  fullWidth\n                  value={formData.bankName}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                />\n                <CustomInputTextField\n                  attribute=\"Account Number\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"accountNumber\"\n                  fullWidth\n                  value={formData.accountNumber}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                />\n                <CustomInputTextField\n                  attribute=\"Routing Number\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"routingNumber\"\n                  fullWidth\n                  value={formData.routingNumber}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                />\n                <CustomInputTextField\n                  attribute=\"Account Type\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"accountType\"\n                  select\n                  fullWidth\n                  value={formData.accountType}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                >\n                  <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                  <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                </CustomInputTextField>\n                <CustomInputTextField\n                  attribute=\"Ownership\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"ownership\"\n                  select\n                  fullWidth\n                  value={formData.ownership}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                >\n                  <MenuItem value=\"TAXPAYER\">Tax Payer</MenuItem>\n                  <MenuItem value=\"SPOUSE\">Spouse</MenuItem>\n                  <MenuItem value=\"JOINT\">Joint</MenuItem>\n                </CustomInputTextField>\n              </Grid>\n              <Grid item lg={6} sm={6} xs={12}>\n                <CustomInputTextField\n                  attribute=\"Account Holder Name\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"accountHolderName\"\n                  fullWidth\n                  value={formData.accountHolderName}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                />\n                <CustomInputTextField\n                  attribute=\"Confirm Account Number\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"confirmAccountNumber\"\n                  fullWidth\n                  value={formData.confirmAccountNumber}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                />\n                <CustomInputTextField\n                  attribute=\"Confirm Routing Number\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"confirmRoutingNumber\"\n                  fullWidth\n                  value={formData.confirmRoutingNumber}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                />\n                <CustomInputTextField\n                  attribute=\"Confirm Account Type\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"confirmAccountType\"\n                  select\n                  fullWidth\n                  value={formData.confirmAccountType}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                >\n                  <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                  <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                </CustomInputTextField>\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handlePickAppointment(\"Pick Appointment\")}\n            sx={{ display: { xs: \"none\", sm: \"block\", margin: \"20px 0\" } }}\n          >\n            Confirm Personal Details To Pick An Appointment\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handlePickAppointment(\"panel6\")}\n            sx={{ display: { xs: \"block\", sm: \"none\" } }}\n          >\n            Confirm Personal Details To Pick An Appointment\n          </Button>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default ConfirmDetails;\n","import { Container, Typography, Box, Paper, Grid } from \"@mui/material\";\nimport React from \"react\";\n\nconst RefundQuote = ({ open }) => {\n  return (\n    <Box\n      sx={{\n        padding: \"20px 0 5px\",\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Container maxWidth=\"lg\">\n        <Paper elevation={3} style={{ padding: \"16px\" }}>\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\n            <Grid item>\n              <Typography variant=\"h5\" color=\"error\" align=\"center\">\n                Refund Quote will be available after a telephone call with Tax\n                Consultant.\n              </Typography>\n              <Box mt={2}>\n                <Typography variant=\"h5\" color=\"error\" align=\"center\">\n                  You will be receiving an email as soon as the Refund quote is\n                  ready.\n                </Typography>\n              </Box>\n              <Box mt={2}>\n                <Typography variant=\"h5\" color=\"error\" align=\"center\">\n                  Please visit the Refund Quote section later.\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Container>\n    </Box>\n  );\n};\n\nexport default RefundQuote;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport { Grid, Box, Avatar, Typography } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { makeStyles } from \"@mui/styles\";\nimport BankDetails from \"./Forms/BankDetails\";\nimport FilerDetails from \"./Forms/FilerDetails\";\nimport IncomeDetails from \"./Forms/IncomeDetails\";\nimport PickAppointment from \"./Forms/PickAppointment\";\nimport UploadTaxDocs from \"./Forms/TaxDocs\";\nimport TaxReturns from \"./Forms/TaxReturns\";\nimport PayPalPayment from \"../Home/payPalPayment\";\nimport ConfirmDetails from \"./Forms/ConfirmDetails\";\nimport RefundQuote from \"./Forms/RefundQuote\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst BasicAccordion = ({ data, handleFetchData, handleDownloadTemplate }) => {\n  const customTextClasses = customTextStyles();\n  const params = useParams();\n  const [expanded, setExpanded] =\n    parseInt(params.action) === 7 ? useState(\"panel7\") : useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    console.log(panel);\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handlePickAppointment = () => {\n    setExpanded(\"panel6\");\n  };\n\n  return (\n    <Box>\n      <Accordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel1\" ? \"600\" : \"400\" }}\n          >\n            Filer Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <FilerDetails\n            open={expanded === \"panel1\"}\n            id={data[\"id\"]}\n            personalDetails={data[\"personalDetails\"]}\n            contactDetails={data[\"contactDetails\"]}\n            spouseDetails={data[\"spouseDetails\"]}\n            incomeDetails={data[\"incomeDetails\"]}\n            providedLivingSupport={data[\"providedLivingSupport\"]}\n            handleFetchData={handleFetchData}\n            handleDownloadTemplate={handleDownloadTemplate}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel2\"}\n        onChange={handleChange(\"panel2\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel2\" ? \"600\" : \"400\" }}\n          >\n            Income Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <IncomeDetails\n            open={expanded === \"panel2\"}\n            id={data[\"id\"]}\n            data={data[\"incomeDetails\"]}\n            handleFetchData={handleFetchData}\n            handleDownloadTemplate={handleDownloadTemplate}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel3\"}\n        onChange={handleChange(\"panel3\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3a-content\"\n          id=\"panel3a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\n          >\n            Bank Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\", paddingLeft: \"0px\" }}>\n          <BankDetails\n            open={expanded === \"panel3\"}\n            id={data[\"id\"]}\n            data={data[\"bankDetails\"]}\n            handleFetchData={handleFetchData}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel4\"}\n        onChange={handleChange(\"panel4\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel4a-content\"\n          id=\"panel4a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          Upload Tax Docs\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <UploadTaxDocs open={expanded === \"panel4\"} id={data[\"id\"]} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel5\"}\n        onChange={handleChange(\"panel5\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel5a-content\"\n          id=\"panel5a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel5\" ? \"600\" : \"400\" }}\n          >\n            Confirm Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <ConfirmDetails\n            open={expanded === \"panel5\"}\n            id={data[\"id\"]}\n            personalDetails={data[\"personalDetails\"]}\n            contactDetails={data[\"contactDetails\"]}\n            spouseDetails={data[\"spouseDetails\"]}\n            providedLivingSupport={data[\"providedLivingSupport\"]}\n            incomeDetails={data[\"incomeDetails\"]}\n            bankDetails={data[\"bankDetails\"]}\n            handlePickAppointment={handlePickAppointment}\n            dependantDetails={data[\"dependantDetails\"]}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel6\"}\n        onChange={handleChange(\"panel6\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel6a-content\"\n          id=\"panel6a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel6\" ? \"600\" : \"400\" }}\n          >\n            Pick Appointment\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <PickAppointment open={expanded === \"panel6\"} id={data[\"id\"]} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel7\"}\n        onChange={handleChange(\"panel7\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel7a-content\"\n          id=\"panel7a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel7\" ? \"600\" : \"400\" }}\n          >\n            Pay Now\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <PayPalPayment open={expanded === \"panel7\"} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel8\"}\n        onChange={handleChange(\"panel8\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel8a-content\"\n          id=\"panel8a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel8\" ? \"600\" : \"400\" }}\n          >\n            Tax Return\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <TaxReturns open={expanded === \"panel8\"} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel9\"}\n        onChange={handleChange(\"panel9\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel9a-content\"\n          id=\"panel9a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel9\" ? \"600\" : \"400\" }}\n          >\n            Refund Quote\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <RefundQuote open={expanded === \"panel9\"} />\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n};\n\nexport default BasicAccordion;\n","import React, { useEffect, useState } from \"react\";\nimport Page from \"../../../components/Page\";\nimport {\n  Grid,\n  Container,\n  Box,\n  CircularProgress,\n  Typography,\n  Card,\n  Button,\n  Avatar,\n} from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport TabsDesktop from \"../TabsDesktop\";\nimport BasicAccordion from \"../AccordionMobile\";\nimport { makeStyles } from \"@mui/styles\";\nimport ConfirmDetails from \"../Forms/ConfirmDetails\";\nimport PickAppointment from \"../Forms/PickAppointment\";\nimport PayPalPayment from \"../../Home/payPalPayment\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport RefundQuote from \"../Forms/RefundQuote\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tabButton: {\n    display: \"block\",\n    width: \"100%\",\n    paddingLeft: \"15px\",\n    textAlign: \"left\",\n    fontWeight: \"500\",\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n  },\n}));\n\nconst ClientTaxFillingPage = () => {\n  const params = useParams();\n  const customStyles = customTextStyles();\n  const [data, setData] = useState({});\n  const [isLoadingSpin, setIsLoadingSpin] = useState(true);\n  const [isActiveTab, setIsActiveTab] =\n    parseInt(params.action) === 7\n      ? useState(\"Pay Now\")\n      : useState(\"My Details\");\n\n  const handleActiveTabChange = (tabName) => {\n    setIsActiveTab(tabName);\n  };\n\n  const [tabsDesktopValue, setTabsDesktopValue] = useState(\n    parseInt(params.action)\n  );\n\n  const handleTabsDesktopChange = (event, newValue) => {\n    setTabsDesktopValue(newValue);\n  };\n\n  const handleFetchTaxFilingDetails = () => {\n    setIsLoadingSpin(true);\n    let payload = { id: params.id };\n    privateApiPOST(Api.taxFiling, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setData(data?.data);\n          setIsLoadingSpin(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsLoadingSpin(false);\n      });\n  };\n\n  const handleDownloadTemplate = (file) => {\n    let payload = {\n      file_name: file,\n    };\n\n    privateApiPOST(Api.templateDownload, payload, { responseType: \"blob\" })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          const url = window.URL.createObjectURL(new Blob([data]));\n          const anchor = document.createElement(\"a\");\n          anchor.href = url;\n          anchor.setAttribute(\"download\", file);\n          document.body.appendChild(anchor);\n          anchor.click();\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDownloadFile--->\", err);\n      });\n  };\n\n  useEffect(() => {\n    handleFetchTaxFilingDetails();\n  }, []);\n\n  return (\n    <Page title={\"Tax Filing\"}>\n      <Box>\n        <Container maxWidth=\"lg\">\n          <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n            <Grid container>\n              <Grid item xs={2}>\n                <Card\n                  sx={{\n                    minHeight: \"240px\",\n                    borderRadius: \"2px\",\n                  }}\n                >\n                  {[\n                    \"My Details\",\n                    \"Confirm Details\",\n                    \"Pick Appointment\",\n                    \"Refund Quote\",\n                    \"Pay Now\",\n                  ].map((each, index) =>\n                    each === \"Pay Now\" ? (\n                      // Conditional rendering for \"Pay Now\" button\n                      <Button\n                        key={index}\n                        onClick={() => handleActiveTabChange(each)}\n                      >\n                        <img\n                          src=\"/static/img/pay_now.jpg\"\n                          alt=\"Pay Now\"\n                          style={{\n                            minWidth: \"100px\",\n                            width: \"190px\",\n                            height: \"50px\",\n                          }}\n                        />\n                      </Button>\n                    ) : (\n                      // Conditional rendering for other tabs\n                      <Button\n                        key={index}\n                        onClick={() => handleActiveTabChange(each)}\n                        variant={isActiveTab === each ? \"contained\" : \"text\"}\n                        className={customStyles.tabButton}\n                        sx={{\n                          color: isActiveTab === each ? \"#fff\" : \"#474747\",\n                        }}\n                      >\n                        {each}\n                      </Button>\n                    )\n                  )}\n                </Card>\n              </Grid>\n              <Grid item xs={10}>\n                {isLoadingSpin ? (\n                  <Box\n                    display=\"flex\"\n                    height=\"100%\"\n                    width=\"100%\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    sx={{\n                      position: \"absolute\",\n                      zIndex: \"10\",\n                      left: 0,\n                      top: \"30%\",\n                    }}\n                  >\n                    <CircularProgress size={30} />\n                  </Box>\n                ) : data ? (\n                  <Box\n                    sx={{\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                      boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\",\n                      borderRadius: \"4px\",\n                      padding: \"20px 10px\",\n                      height: \"800px\", // Adjust the height as needed\n                      overflow: \"auto\", // Add overflow to enable scrolling\n                      maxHeight: \"800px\", // Add a maximum height to prevent content from overflowing\n                      marginLeft: \"20px\",\n                    }}\n                  >\n                    <PerfectScrollbar>\n                      <Typography\n                        variant=\"h3\"\n                        sx={{\n                          marginLeft: \"20px\",\n                          marginBottom:\n                            isActiveTab === \"My Details\" ? 0 : \"30px\",\n                        }}\n                      >\n                        Tax-Filing For Year - {params.year}\n                      </Typography>\n\n                      {isActiveTab === \"My Details\" && (\n                        <Box>\n                          <Typography\n                            color={\"primary\"}\n                            sx={{\n                              marginTop: \"10px\",\n                              marginLeft: \"auto\",\n                              marginRight: \"auto\",\n                              textAlign: \"center\",\n                            }}\n                          >\n                            NOTE : ON FILLING ALL INFORMATION PLEASE MENTION\n                            YOUR AVAILABILITY IN Pick an Appointment PAGE\n                          </Typography>\n                          <Typography\n                            color={\"#11a63d\"}\n                            sx={{\n                              marginLeft: \"24px\",\n                              wordSpacing: \"3px\",\n                              marginTop: \"4px\",\n                            }}\n                          >\n                            Taxpayer and spouse's SSN and Date of Birth fields\n                            are set to default values. Please don't change them.\n                            We will collect these details via phone call at the\n                            time of tax filing\n                          </Typography>\n\n                          <TabsDesktop\n                            value={tabsDesktopValue}\n                            setValue={setTabsDesktopValue}\n                            handleChange={handleTabsDesktopChange}\n                            handleActiveTabChange={handleActiveTabChange}\n                            data={data}\n                            handleFetchData={handleFetchTaxFilingDetails}\n                            handleDownloadTemplate={handleDownloadTemplate}\n                          />\n                        </Box>\n                      )}\n                      {isActiveTab === \"Confirm Details\" && (\n                        <ConfirmDetails\n                          open={isActiveTab === \"Confirm Details\"}\n                          id={data[\"id\"]}\n                          personalDetails={data[\"personalDetails\"]}\n                          contactDetails={data[\"contactDetails\"]}\n                          spouseDetails={data[\"spouseDetails\"]}\n                          providedLivingSupport={data[\"providedLivingSupport\"]}\n                          incomeDetails={data[\"incomeDetails\"]}\n                          bankDetails={data[\"bankDetails\"]}\n                          handlePickAppointment={handleActiveTabChange}\n                          dependantDetails={data[\"dependantDetails\"]}\n                        />\n                      )}\n                      {isActiveTab === \"Pick Appointment\" && (\n                        <PickAppointment\n                          open={isActiveTab === \"Pick Appointment\"}\n                          id={data[\"id\"]}\n                        />\n                      )}\n                      {isActiveTab === \"Refund Quote\" && (\n                        <RefundQuote open={isActiveTab === \"Refund Quote\"} />\n                      )}\n                      {isActiveTab === \"Pay Now\" && (\n                        <PayPalPayment open={isActiveTab === \"Pay Now\"} />\n                      )}\n                    </PerfectScrollbar>\n                  </Box>\n                ) : null}\n              </Grid>\n            </Grid>\n          </Box>\n          <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\n            {isLoadingSpin ? (\n              <Box\n                display=\"flex\"\n                height=\"100%\"\n                width=\"100%\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                sx={{\n                  position: \"absolute\",\n                  zIndex: \"10\",\n                  left: 0,\n                  top: \"70%\",\n                }}\n              >\n                <CircularProgress size={30} />\n              </Box>\n            ) : data ? (\n              <BasicAccordion\n                data={data}\n                handleFetchData={handleFetchTaxFilingDetails}\n                handleDownloadTemplate={handleDownloadTemplate}\n              />\n            ) : null}\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default ClientTaxFillingPage;\n","import React, { useEffect, useState } from \"react\";\nimport Page from \"../../components/Page\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport AdminTaxFillingPage from \"./AdminTaxFilingpage\";\nimport ClientTaxFillingPage from \"./ClientTaxFilingPage\";\n\nconst HomePage = () => {\n  const state = useSelector((state) => state.app);\n\n  return (\n    <Page title={\"Home\"}>\n      {state.role === \"ADMIN\" ? (\n        <AdminTaxFillingPage />\n      ) : state.role === \"CLIENT\" ? (\n        <ClientTaxFillingPage />\n      ) : null}\n    </Page>\n  );\n};\n\nexport default HomePage;\n","import React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Box, Button, Typography } from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CustomAlert from \"../../components/CustomAlert\";\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport Api from \"../../components/Api\";\nimport Page from \"../../components/Page\";\nimport { setTaxYear } from \"../../redux/app/appSlice\";\n\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst useStyles = makeStyles((theme) => ({\n  // root: {\n  //   backgroundColor: theme.palette.background.dark,\n  //   height: \"100%\",\n  //   paddingBottom: \"0px\",\n  //   paddingTop: \"0px\",\n  //   position: \"relative\",\n  // },\n\n  // logo: {\n  //   width: 150,\n  //   padding: 10,\n  //   [theme.breakpoints.down(\"sm\")]: {\n  //     width: 110,\n  //   },\n  // },\n  submitProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  mainBlock: {\n    // width: \"50vw\",\n    // height: \"100vh\",\n    // display: \"flex\",\n    // flexDirection: \"row\",\n    minWidth: \"400px\",\n    margin: \"0\",\n    padding: \"0\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // flexDirection: \"column\",\n      minWidth: \"300px\",\n    },\n  },\n  // leftSide: {\n  //   width: \"70%\",\n  //   height: \"100vh\",\n  //   position: \"relative\",\n  //   backgroundColor: \"#2069D8\",\n  //   [theme.breakpoints.down(\"sm\")]: {\n  //     width: \"100%\",\n  //     height: \"40vh\",\n  //     margin: \"0\",\n  //   },\n  // },\n\n  avatarLogo: {\n    width: 200,\n    height: 72,\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"33%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      left: \"20%\",\n      top: \"30%\",\n    },\n  },\n  title: {\n    fontFamily: \"Montserrat\",\n    fontWeight: \"700\",\n    fontSize: \"72px\",\n    textAlign: \"center\",\n    lineHeight: \"87.7px\",\n    color: \"#FFFFFF\",\n    margin: \"auto\",\n    marginTop: \"50vh\",\n    marginBottom: \"auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"10vh\",\n    },\n  },\n\n  rightSide: {\n    width: \"100%\",\n    height: \"100vh\",\n    backgroundColor: \"#F5F5F5\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\", // Center vertically\n    alignItems: \"center\", // Center horizontally\n    margin: \"0\",\n    paddingRight: \"200px\",\n    padding: \"0\", // Reset padding\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: \"244px\", // Adjust padding for medium and larger screens\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\", // Set width to 100%\n      paddingLeft: \"0\", // Reset padding\n      justifyContent: \"center\", // Center vertically\n      alignItems: \"center\", // Center horizontally\n      paddingRight: \"0px\",\n      marginTop: \"-100px\",\n    },\n  },\n}));\n\nconst LoginView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  return (\n    <>\n      <Box className={classes.mainBlock}>\n        {showAlert.isAlert ? (\n          <CustomAlert\n            open={showAlert.isAlert}\n            severity={showAlert.severity}\n            alertTitle={showAlert.alertTitle}\n            alertText={showAlert.alertText}\n            onClose={() =>\n              setShowAlert({\n                isAlert: false,\n                alertTitle: \"\",\n                alertText: \"\",\n                severity: \"\",\n              })\n            }\n          />\n        ) : null}\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          height=\"100%\"\n          justifyContent=\"center\"\n        >\n          {/* <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              marginBottom={2}\n            >\n              \n            </Box> */}\n          <Formik\n            initialValues={{\n              email: \"\",\n              password: \"\",\n              // taxYear: \"\",\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email(\"Must be a valid email\")\n                .max(255)\n                .required(\"Email is required\"),\n              password: Yup.string().max(255).required(\"Password is required\"),\n              // taxYear: Yup.string()\n              //   .max(255)\n              //   .required(\"Tax Year is required\"),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              const url = Api.login;\n\n              const config = {\n                headers: {\n                  \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                },\n              };\n\n              axios\n                .post(url, values, config)\n                .then((res) => {\n                  if (res.status === 200) {\n                    window.sessionStorage.setItem(\n                      \"token\",\n                      res.data?.data?.token\n                    );\n                    setSubmitting(false);\n                    dispatch(setTaxYear(values.taxYear));\n                    navigate(\"/\");\n                  }\n                })\n                .catch((error) => {\n                  if (error.response.status === 400) {\n                    setShowAlert({\n                      isAlert: true,\n                      alertText: \"Invalid credentials\",\n                      severity: \"error\",\n                      alertTitle: \"Error\",\n                    });\n                    setSubmitting(false);\n                  } else {\n                    setShowAlert({\n                      isAlert: true,\n                      alertText: \"Something went wrong\",\n                      severity: \"error\",\n                      alertTitle: \"Error\",\n                    });\n                    resetForm();\n                    setSubmitting(false);\n                  }\n                });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values,\n            }) => (\n              <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography color=\"textPrimary\" variant=\"h4\">\n                    SIGN IN TO YOUR ACCOUNT\n                  </Typography>\n                </Box>\n\n                <CustomInputTextField\n                  attribute=\"Email Address\"\n                  is_required={true}\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <CustomInputTextField\n                  attribute=\"Password\"\n                  is_required={true}\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                {/* <TextField\n                        select\n                        error={Boolean(touched.taxYear && errors.taxYear)}\n                        helperText={touched.taxYear && errors.taxYear}\n                        fullWidth\n                        label=\"Tax Year\"\n                        margin=\"normal\"\n                        name=\"taxYear\" // Change \"taxyear\" to \"taxYear\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.taxYear}\n                        variant=\"outlined\"\n                      >\n                        <MenuItem value=\"currentYear\">Current Year</MenuItem>\n                        <MenuItem value=\"AllYears\">All Years</MenuItem>\n                      </TextField> */}\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default LoginView;\n","import React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Box, Button, Typography, CircularProgress } from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CustomAlert from \"../../components/CustomAlert\";\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport Api from \"../../components/Api\";\nimport Page from \"../../components/Page\";\nimport { setTaxYear } from \"../../redux/app/appSlice\";\n\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst useStyles = makeStyles((theme) => ({\n  submitProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  mainBlock: {\n    // width: \"50vw\",\n    // height: \"100vh\",\n    // display: \"flex\",\n    // flexDirection: \"row\",\n    minWidth: \"400px\",\n    margin: \"0\",\n    padding: \"0\",\n    [theme.breakpoints.down(\"sm\")]: {\n      //   flexDirection: \"column\",\n      minWidth: \"300px\",\n    },\n  },\n}));\n\nconst ForgotPasswordView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\n  const [forgotPasswordState, setForgetPasswordState] = useState({ email: \"\" });\n  const [isResetPasswordSubmitting, setIsRestPasswordSubmitting] =\n    useState(false);\n\n  const handleForgotPassword = () => {\n    const url = Api.forgotPassword;\n    setIsRestPasswordSubmitting(true);\n    const config = {\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n    };\n\n    axios\n      .post(url, forgotPasswordState, config)\n      .then((res) => {\n        setShowAlert({\n          isAlert: true,\n          alertText: res.data[\"message\"],\n          severity: \"success\",\n        });\n        setIsForgotPassword(false);\n        setIsRestPasswordSubmitting(false);\n        setForgetPasswordState({ email: \"\" });\n      })\n      .catch((error) => {\n        console.log(error.response);\n        setShowAlert({\n          isAlert: true,\n          alertText: error.response.data[\"message\"],\n          severity: \"error\",\n          alertTitle: \"Error\",\n        });\n        setIsForgotPassword(false);\n        setIsRestPasswordSubmitting(false);\n        setForgetPasswordState({ email: \"\" });\n      });\n  };\n\n  return (\n    <Box className={classes.mainBlock}>\n      {showAlert.isAlert ? (\n        <CustomAlert\n          open={showAlert.isAlert}\n          severity={showAlert.severity}\n          alertTitle={showAlert.alertTitle}\n          alertText={showAlert.alertText}\n          onClose={() =>\n            setShowAlert({\n              isAlert: false,\n              alertTitle: \"\",\n              alertText: \"\",\n              severity: \"\",\n            })\n          }\n        />\n      ) : null}\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        {/* <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              marginBottom={2}\n            >\n              \n            </Box> */}\n\n        <Box mb={3}>\n          <Typography color=\"textPrimary\" variant=\"h4\">\n            FORGOT PASSWORD?\n          </Typography>\n        </Box>\n\n        <CustomInputTextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          attribute=\"Email ID (User ID)\"\n          is_required={true}\n          type=\"email\"\n          fullWidth\n          autoComplete=\"off\"\n          value={forgotPasswordState.email}\n          onChange={(e) => setForgetPasswordState({ email: e.target.value })}\n        />\n\n        <Box my={2}>\n          <Button\n            onClick={handleForgotPassword}\n            color=\"primary\"\n            disabled={isResetPasswordSubmitting}\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Reset Password\n            {isResetPasswordSubmitting && (\n              <CircularProgress size={24} className={classes.submitProgress} />\n            )}\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ForgotPasswordView;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Avatar, Typography, Box, Grid, Container } from \"@mui/material\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport PaidIcon from \"@mui/icons-material/Paid\";\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\n\n// Your remaining components and code here\nimport Page from \"../../components/Page\";\nimport LoginView from \"./LoginView\";\nimport ForgotPasswordView from \"./ForgotPassword\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    border: \"1px solid #000000\",\n    padding: \"20px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#f7f7f7\",\n    // maxHeight: \"50vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"300px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      minHeight: \"280px\",\n      padding: \"20px 10px\",\n    },\n  },\n  logoAvatar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      //   marginLeft: \"200px\",\n      marginRight: \"auto\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"150px\",\n    },\n  },\n}));\n\nexport const AppBar = () => {\n  const customStyles = useStyles();\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#fafafa\",\n        padding: \"5px 20px\",\n      }}\n    >\n      <Box\n        sx={{\n          display: { xs: \"none\", sm: \"block\" },\n        }}\n      >\n        <Box sx={{ display: \"flex\" }}>\n          <Avatar\n            variant=\"square\"\n            src=\"/static/img/onecall-logo.png\"\n            sx={{\n              height: 50,\n              width: 140,\n              marginBottom: \"10px\",\n            }}\n            className={customStyles.logoAvatar}\n          />\n          <Typography\n            variant=\"h6\"\n            sx={{\n              fontSize: \"16px\",\n              marginTop: \"12px\",\n              marginLeft: \"20px\",\n            }}\n          >\n            WE MAKE TAX SIMPLE\n          </Typography>\n        </Box>\n        <Typography variant=\"body2\" sx={{ fontSize: \"16px\" }}>\n          <strong>Phone:</strong> (248) 971-3300\n        </Typography>\n        <Typography variant=\"body2\" sx={{ fontSize: \"16px\" }}>\n          <strong>E-mail:</strong> Onecalltaxservices.digital@gmail.com\n        </Typography>\n      </Box>\n      <Avatar\n        variant=\"square\"\n        src=\"/static/img/irs_image.jpg\"\n        sx={{\n          width: \"81px\",\n          height: \"83px\",\n          display: { xs: \"none\", sm: \"flex\" },\n        }}\n      />\n\n      <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\n        <Avatar\n          variant=\"square\"\n          src=\"/static/img/onecall-logo.png\"\n          sx={{\n            height: 50,\n            width: 140,\n            marginTop: \"12px\",\n            marginBottom: \"10px\",\n          }}\n          className={customStyles.logoAvatar}\n        />\n        <Typography\n          variant=\"h6\"\n          sx={{\n            fontSize: \"16px\",\n          }}\n        >\n          WE MAKE TAX SIMPLE\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst Authentication = () => {\n  const customStyles = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Page title=\"Login\">\n      <Box\n        sx={{\n          height: \"100vh\",\n          backgroundImage: \"url(/static/img/green_bg.jpg)\",\n          paddingTop: \"8%\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"100% 100%\",\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Box sx={{ backgroundColor: \"#fafafa\", padding: \"5px 5px 30px\" }}>\n            <AppBar />\n            <Box sx={{ padding: { xs: 0, sm: \"20px 30px\" } }}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <Box className={customStyles.box}>\n                    <LoginView />\n                  </Box>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Box className={customStyles.box}>\n                    <ForgotPasswordView />\n                  </Box>\n                </Grid>\n              </Grid>\n\n              <Box\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography variant=\"h5\">New Client? Please</Typography>\n\n                <Avatar\n                  onClick={() => navigate(\"/register\")}\n                  variant=\"square\"\n                  src=\"/static/img/register.png\"\n                  sx={{ height: 33, width: 99, marginLeft: \"10px\" }}\n                />\n              </Box>\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default Authentication;\n","import React from \"react\";\nimport { Box, TextField, Grid, Typography } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst NO_WRAP_ATTRIBUTES = [\n  \"Middle Initial\",\n  \"Email Address\",\n  \"Password\",\n  \"Email ID (User ID)\",\n  \"Confirm Password\",\n  \"Referral ID (Optional)\",\n  \"Preferrable Time\",\n  \"Time Zone\",\n];\n\nconst CustomInputTextField = ({\n  attribute,\n  is_required,\n  attributeTextAlign,\n  attributeMarginTop,\n  ...others\n}) => {\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        maxHeight: \"60px\",\n      }}\n    >\n      <Grid container>\n        <Grid\n          item\n          xs={4}\n          sx={{ marginTop: attributeMarginTop ? attributeMarginTop : \"24px\" }}\n        >\n          {/* <Typography\n            sx={{\n              margin: \"20px 10px\",\n              fontSize: \"16px\",\n              lineHeight: \"24px\",\n              fontWeight: 400,\n            }}\n          >\n            {is_required ? (\n              <>\n                {attribute}\n                <span\n                  style={{\n                    color: \"red\", // Set color to red\n                    fontSize: \"16px\",\n                    marginLeft: \"3px\",\n                  }}\n                >\n                  {\" \"}\n                  *\n                </span>\n              </>\n            ) : (\n              attribute\n            )}\n          </Typography> */}\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              marginRight: { xs: 0, sm: attributeTextAlign ? \"5px\" : 0 },\n              justifyContent: {\n                xs: \"flex-start\",\n                sm: attributeTextAlign ? \"flex-end\" : \"flex-start\",\n              },\n            }}\n          >\n            <Typography\n              variant=\"body1\"\n              sx={{\n                whiteSpace: NO_WRAP_ATTRIBUTES.includes(attribute)\n                  ? \"nowrap\"\n                  : \"pre-wrap\",\n              }}\n            >\n              {attribute}\n            </Typography>\n            {is_required && (\n              <Typography\n                sx={{\n                  color: \"red\",\n                  fontSize: \"0.875rem\",\n                  marginLeft: \"3px\",\n                }}\n              >\n                *\n              </Typography>\n            )}\n            &nbsp;:\n          </Box>\n        </Grid>\n        <Grid item xs={attribute === \"Income Amount\" ? 4 : 8}>\n          <TextField\n            {...others}\n            sx={{\n              \"& .MuiOutlinedInput-root\": {\n                \"& fieldset\": {\n                  borderRadius: \"2px\",\n                },\n              },\n              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n                border: \"0.1px solid #bdbdbd\",\n              },\n              \"& .MuiOutlinedInput-input\": {\n                padding: \"10px\",\n                backgroundColor: \"rgba(255,255,255,1)\",\n              },\n              width: \"90%\",\n            }}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nCustomInputTextField.prototype = {\n  is_required: PropTypes.bool,\n  attribute: PropTypes.string, //['success','warning', 'error']\n  attributeTextAlign: PropTypes.string, //['success','warning', 'error']\n  attributeMarginTop: PropTypes.string,\n};\n\nexport default CustomInputTextField;\n","export const statesNames = [\n  { value: \"SELECT\", label: \"SELECT\" },\n  { value: \"Alabama\", label: \"Alabama\" },\n  { value: \"Alaska\", label: \"Alaska\" },\n  { value: \"Arizona\", label: \"Arizona\" },\n  { value: \"Arkansas\", label: \"Arkansas\" },\n  { value: \"California\", label: \"California\" },\n  { value: \"Colorado\", label: \"Colorado\" },\n  { value: \"Connecticut\", label: \"Connecticut\" },\n  { value: \"Delaware\", label: \"Delaware\" },\n  { value: \"Florida\", label: \"Florida\" },\n  { value: \"Georgia\", label: \"Georgia\" },\n  { value: \"Hawaii\", label: \"Hawaii\" },\n  { value: \"Idaho\", label: \"Idaho\" },\n  { value: \"Illinois\", label: \"Illinois\" },\n  { value: \"Indiana\", label: \"Indiana\" },\n  { value: \"Iowa\", label: \"Iowa\" },\n  { value: \"Kansas\", label: \"Kansas\" },\n  { value: \"Kentucky\", label: \"Kentucky\" },\n  { value: \"Louisiana\", label: \"Louisiana\" },\n  { value: \"Maine\", label: \"Maine\" },\n  { value: \"Maryland\", label: \"Maryland\" },\n  { value: \"Massachusetts\", label: \"Massachusetts\" },\n  { value: \"Michigan\", label: \"Michigan\" },\n  { value: \"Minnesota\", label: \"Minnesota\" },\n  { value: \"Mississippi\", label: \"Mississippi\" },\n  { value: \"Missouri\", label: \"Missouri\" },\n  { value: \"Montana\", label: \"Montana\" },\n  { value: \"Nebraska\", label: \"Nebraska\" },\n  { value: \"Nevada\", label: \"Nevada\" },\n  { value: \"New Hampshire\", label: \"New Hampshire\" },\n  { value: \"New Jersey\", label: \"New Jersey\" },\n  { value: \"New Mexico\", label: \"New Mexico\" },\n  { value: \"New York\", label: \"New York\" },\n  { value: \"North Carolina\", label: \"North Carolina\" },\n  { value: \"North Dakota\", label: \"North Dakota\" },\n  { value: \"Ohio\", label: \"Ohio\" },\n  { value: \"Oklahoma\", label: \"Oklahoma\" },\n  { value: \"Oregon\", label: \"Oregon\" },\n  { value: \"Pennsylvania\", label: \"Pennsylvania\" },\n  { value: \"Rhode Island\", label: \"Rhode Island\" },\n  { value: \"South Carolina\", label: \"South Carolina\" },\n  { value: \"South Dakota\", label: \"South Dakota\" },\n  { value: \"Tennessee\", label: \"Tennessee\" },\n  { value: \"Texas\", label: \"Texas\" },\n  { value: \"Utah\", label: \"Utah\" },\n  { value: \"Vermont\", label: \"Vermont\" },\n  { value: \"Virginia\", label: \"Virginia\" },\n  { value: \"Washington\", label: \"Washington\" },\n  { value: \"West Virginia\", label: \"West Virginia\" },\n  { value: \"Wisconsin\", label: \"Wisconsin\" },\n  { value: \"Wyoming\", label: \"Wyoming\" },\n  { value: \"Foreign\", label: \"Foreign\" },\n  { value: \"District of Columbia\", label: \"District of Columbia\" },\n];\n\nexport const countryCode = [\n  { value: \"Select\", label: \"Select\" },\n  { value: \"+91 (India)\", label: \"+91 (India)\" },\n  { value: \"+1 (USA / Canada)\", label: \"+1 (USA / Canada)\" },\n  { value: \"+44 (U.K)\", label: \"+44 (U.K)\" },\n  { value: \"+49 (Germany)\", label: \"+49 (Germany)\" },\n  { value: \"+60 (Malaysia)\", label: \"+60 (Malaysia)\" },\n  { value: \"+61 (Australia)\", label: \"+61 (Australia)\" },\n  { value: \"+65 (Singapore)\", label: \"+65 (Singapore)\" },\n  { value: \"+81 (Japan)\", label: \"+81 (Japan)\" },\n  { value: \"+86 (China)\", label: \"+86 (China)\" },\n  { value: \"Others\", label: \"Others\" },\n];\nexport const refundTypes = [\n  \"FEDERAL REFUND\",\n  \"FEDERAL AMENDMENT\",\n  \"STATE AMENDMENT\",\n  \"FBAR TAX PAYER\",\n  \"FBAR SPOUSE\",\n  \"FBAR COMBINED\",\n  \"CITY FILING 1\",\n  \"CITY FILING 2\",\n  \"CITY FILING 3\",\n  \"CITY FILING 4\",\n  \"EXTENSION FILING\",\n  \"OTHER\",\n  \"ADVANCE PAYMENT\",\n  \"REFERRAL DISCOUNT\",\n];\n\nexport const dependantRelationships = [\n  \"FATHER\",\n  \"MOTHER\",\n  \"DAUGHTER\",\n  \"SON\",\n  \"FATHER IN LAW\",\n  \"MOTHER IN LAW\",\n  \"OTHER\",\n];\n\nexport const residentialStatus = [\n  \"H4\",\n  \"US Citizen\",\n  \"L2\",\n  \"Green Card\",\n  \"Other\",\n];\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Snackbar } from \"@mui/material\";\nimport { Alert, AlertTitle } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(10),\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\n  },\n  alertContainer: {\n    minWidth: 350,\n  },\n}));\n\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\n  let vertical = \"top\",\n    horizontal = \"right\";\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={onClose}\n      className={classes.root}\n    >\n      <Alert\n        severity={severity}\n        onClose={onClose}\n        className={classes.alertContainer}\n      >\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\n        {alertText}!\n      </Alert>\n    </Snackbar>\n  );\n};\n\nCustomAlert.prototype = {\n  open: PropTypes.bool,\n  severity: PropTypes.string, //['success','warning', 'error']\n  alertText: PropTypes.string,\n  alertTitle: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default CustomAlert;\n"],"sourceRoot":""}