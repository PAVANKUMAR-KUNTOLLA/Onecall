{"version":3,"sources":["webpack:///./src/views/Home/home.page.js","webpack:///./src/components/Page.js"],"names":["customTextStyles","makeStyles","theme","tableHeader","_defineProperty","fontSize","fontWeight","lineHeight","breakpoints","down","display","tableData","headerText","marginTop","marginBottom","color","confirmButton","padding","mobileViewTableCellValue","mobileView","borderRadius","boxShadow","backgroundColor","cursor","border","up","mobileViewTableCellHeader","HomePage","customStyles","navigate","useNavigate","_useState2","useSelector","state","issue","_slicedToArray","useState","myServices","setMyServices","_useState4","taxYearServices","setTaxYearServices","_useState6","setIsMyServicesLoading","_useState8","setIsTaxYearsLoading","_useState10","currSelectedYear","setCurrSelectedYear","handleNavigate","useDispatch","value","useEffect","privateApiGET","Api","taxYears","then","response","status","data","console","log","error","React","createElement","Page","title","Box","Container","maxWidth","Typography","className","TableContainer","sx","Table","borderCollapse","TableHead","TableRow","TableCell","TableBody","length","map","row","index","key","id","service_type","year","Link","to","concat","onClick","flexWrap","justifyContent","FormControl","FormLabel","RadioGroup","name","onChange","event","target","Grid","container","each","item","xs","marginLeft","FormControlLabel","control","Radio","label","style","whiteSpace","overflow","textOverflow","width","Button","payload","new","privateApiPOST","handleAddTaxServiceChange","variant","opacity","forwardRef","_ref","ref","children","_ref$title","rest","_objectWithoutProperties","_excluded","_extends","Helmet","propTypes","PropTypes","node","isRequired","string"],"mappings":"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","file":"home.page.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Page from \"../../components/Page\";\n\n// Material UI\nimport {\n  Grid,\n  Box,\n  Link,\n  Avatar,\n  Typography,\n  Button,\n  Container,\n  Card,\n  CardContent,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  TextField,\n  Radio,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n  FormControl,\n} from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport config from \"../../config\";\nimport { makeStyles } from \"@mui/styles\";\nimport taxServicesData from \"../../mock-adapter/taxServicesData.json\";\nimport { thousands_separators } from \"../../utils\";\n\nimport Api from \"../../components/Api\";\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: \"700\",\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  headerText: {\n    fontSize: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"32px\",\n    marginBottom: \"16px\",\n    color: \"#2069DB\",\n  },\n  confirmButton: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    lineHeight: \"19px\",\n    color: \"#FFFFFF\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n  },\n  mobileViewTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n}));\n\nconst HomePage = () => {\n  const customStyles = customTextStyles();\n  let navigate = useNavigate();\n  const state = useSelector((state) => state.issue);\n  const [myServices, setMyServices] = useState([]);\n  const [taxYearServices, setTaxYearServices] = useState([]);\n  const [isMyServicesLoading, setIsMyServicesLoading] = useState(false);\n  const [isTaxYearsLoading, setIsTaxYearsLoading] = useState(false);\n  const [currSelectedYear, setCurrSelectedYear] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleNavigate = (value) => {\n    let path = value;\n    navigate(path);\n  };\n\n  const handleCurrYearTaxServiceChange = (event) => {\n    setCurrSelectedYear(event.target.value);\n  };\n\n  const handleAddTaxServiceChange = () => {\n    setIsMyServicesLoading(true);\n    let payload = { new: true, year: currSelectedYear };\n    privateApiPOST(Api.myServices, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setMyServices(data?.data);\n          setIsMyServicesLoading(false);\n          setCurrSelectedYear(\"\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsMyServicesLoading(false);\n      });\n  };\n\n  const handleFetchTaxYearServices = () => {\n    setIsTaxYearsLoading(true);\n    privateApiGET(Api.taxYears)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setTaxYearServices(data?.data);\n          setIsTaxYearsLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsTaxYearsLoading(false);\n      });\n  };\n\n  const handleFetchMyServices = () => {\n    setIsMyServicesLoading(true);\n    privateApiGET(Api.myServices)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setMyServices(data?.data);\n          setIsMyServicesLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsMyServicesLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    handleFetchTaxYearServices();\n    handleFetchMyServices();\n  }, []);\n\n  return (\n    <Page title={\"One Call Tax Services\"}>\n      <Box>\n        <Container maxWidth=\"md\">\n          <Typography className={customStyles.headerText}>\n            My Selected Services\n          </Typography>\n          <TableContainer sx={{ marginTop: \"32px\" }}>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n              aria-label=\"Place Order Series Table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={customStyles.tableHeader}>ID</TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    SERVICE TYPE\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    YEAR\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    STATUS\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    ACTIONS\n                  </TableCell>\n                  <TableCell className={customStyles.tableHeader}>\n                    PAY NOW\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {myServices.length > 0 &&\n                  myServices.map((row, index) => (\n                    <TableRow key={index}>\n                      <TableCell className={customStyles.tableData}>\n                        {row.id}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.service_type}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.year}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        {row.status}\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        <Link\n                          to={`../tax-filing/${row.year}/${row.id}/0`}\n                          onClick={() =>\n                            handleNavigate(\n                              `../tax-filing/${row.year}/${row.id}/0`\n                            )\n                          }\n                          sx={{ cursor: \"pointer\" }}\n                        >\n                          Start Process\n                        </Link>\n                      </TableCell>\n                      <TableCell className={customStyles.tableData}>\n                        <Link\n                          to={`../tax-filing/${row.year}/${row.id}/6`}\n                          onClick={() =>\n                            handleNavigate(\n                              `../tax-filing/${row.year}/${row.id}/6`\n                            )\n                          }\n                          sx={{ cursor: \"pointer\" }}\n                        >\n                          Pay Now\n                        </Link>\n                      </TableCell>\n                      <TableCell className={customStyles.mobileView}>\n                        <Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                id\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.id}\n                              </Typography>\n                            </Box>\n                            <Box>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Year\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.year}\n                              </Typography>\n                            </Box>\n                            <Box>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Service Type\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.service_type}\n                              </Typography>\n                            </Box>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Status\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                {row.status}\n                              </Typography>\n                            </Box>\n                            <Box>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Actions\n                              </Typography>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                <Link\n                                  to={`../tax-filing/${row.year}/${row.id}/0`}\n                                  onClick={() =>\n                                    handleNavigate(\n                                      `../tax-filing/${row.year}/${row.id}/0`\n                                    )\n                                  }\n                                  sx={{ cursor: \"pointer\" }}\n                                >\n                                  Start Process\n                                </Link>\n                              </Typography>\n                            </Box>\n                            <Box>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellHeader\n                                }\n                              >\n                                Pay Now\n                              </Typography>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewTableCellValue\n                                }\n                              >\n                                <Link\n                                  to={`../tax-filing/${row.year}/${row.id}/6`}\n                                  onClick={() =>\n                                    handleNavigate(\n                                      `../tax-filing/${row.year}/${row.id}/6`\n                                    )\n                                  }\n                                  sx={{ cursor: \"pointer\" }}\n                                >\n                                  Pay Now\n                                </Link>\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Box\n            sx={{\n              marginTop: \"25px\",\n            }}\n          >\n            <FormControl>\n              <FormLabel\n                id=\"demo-radio-buttons-group-label\"\n                className={customStyles.headerText}\n              >\n                Select Tax Service\n              </FormLabel>\n              <RadioGroup\n                aria-labelledby=\"demo-radio-buttons-group-label\"\n                name=\"radio-buttons-group\"\n                value={currSelectedYear}\n                onChange={handleCurrYearTaxServiceChange}\n                color=\"secondary\"\n              >\n                <Grid container>\n                  {taxYearServices.length > 0 &&\n                    taxYearServices.map((each, id) => (\n                      <Grid item xs={4} key={id} sx={{ marginLeft: \"30px\" }}>\n                        <FormControlLabel\n                          value={each.name}\n                          control={<Radio />}\n                          label={\n                            <div\n                              style={{\n                                whiteSpace: \"nowrap\",\n                                overflow: \"hidden\",\n                                textOverflow: \"ellipsis\",\n                                width: \"100%\",\n                              }}\n                            >\n                              {`${each.name} - Tax Filing`}\n                            </div>\n                          }\n                        />\n                      </Grid>\n                    ))}\n                </Grid>\n              </RadioGroup>\n            </FormControl>\n            <Button\n              onClick={() => currSelectedYear && handleAddTaxServiceChange()}\n              variant=\"contained\"\n              className={customStyles.confirmButton}\n              color=\"secondary\"\n              sx={{\n                opacity:\n                  // isLoadingSpin ||\n                  !currSelectedYear ? 0.5 : 1,\n                marginLeft: \"12px\",\n                marginTop: \"10px\",\n                display: \"block\",\n              }}\n            >\n              Add Service{\"  \"}\n              {/* {isLoadingSpin && (\n                <CircularProgress\n                  size={15}\n                  color=\"primary\"\n                  sx={{ marginLeft: \"15px\" }}\n                />\n              )} */}\n            </Button>\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default HomePage;\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n"],"sourceRoot":""}