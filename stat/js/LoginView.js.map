{"version":3,"sources":["webpack:///./src/views/Auth/LoginView.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["useStyles","makeStyles","theme","_rightSide","root","backgroundColor","palette","background","dark","height","paddingBottom","paddingTop","position","logo","_defineProperty","width","padding","breakpoints","down","submitProgress","top","left","marginTop","marginLeft","mainBlock","display","flexDirection","margin","leftSide","avatarLogo","title","fontFamily","fontWeight","fontSize","textAlign","lineHeight","color","marginBottom","rightSide","justifyContent","alignItems","paddingRight","up","paddingLeft","LoginView","classes","navigate","useNavigate","dispatch","useDispatch","_useState2","_slicedToArray","useState","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","_useState4","isForgotPassword","setIsForgotPassword","_useState6","email","forgotPasswordState","setForgetPasswordState","_useState8","isResetPasswordSubmitting","setIsRestPasswordSubmitting","React","createElement","Fragment","Page","className","Box","Avatar","variant","src","CustomAlert","open","onClose","Container","maxWidth","Formik","initialValues","password","validationSchema","Yup","shape","max","required","onSubmit","values","_ref","setSubmitting","resetForm","url","Api","login","config","headers","Cookies","get","axios","post","then","res","_res$data","status","window","sessionStorage","setItem","data","token","setTaxYear","taxYear","error","response","_ref2","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","autoComplete","mb","Typography","TextField","Boolean","fullWidth","helperText","label","name","onBlur","onChange","type","value","my","Button","disabled","size","right","Link","onClick","component","RouterLink","to","Dialog","DialogTitle","id","DialogContent","DialogContentText","autoFocus","e","target","DialogActions","forgotPassword","console","log","CircularProgress","forwardRef","ref","children","_ref$title","rest","_objectWithoutProperties","_excluded","_extends","Helmet","propTypes","PropTypes","node","isRequired","string","spacing","boxShadow","alertContainer","minWidth","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","prototype","bool","func"],"mappings":"+nEA+BA,IAAMA,EAAYC,aAAW,SAACC,GAAK,IAAAC,EAAA,MAAM,CACvCC,KAAM,CACJC,gBAAiBH,EAAMI,QAAQC,WAAWC,KAC1CC,OAAQ,OACRC,cAAe,MACfC,WAAY,MACZC,SAAU,YAGZC,KAAIC,EAAA,CACFC,MAAO,IACPC,QAAS,IACRd,EAAMe,YAAYC,KAAK,MAAQ,CAC9BH,MAAO,MAGXI,eAAgB,CACdP,SAAU,WACVQ,IAAK,MACLC,KAAM,MACNC,WAAY,GACZC,YAAa,IAEfC,UAASV,EAAA,CACPC,MAAO,QACPN,OAAQ,QACRgB,QAAS,OACTC,cAAe,MACfC,OAAQ,IACRX,QAAS,KACRd,EAAMe,YAAYC,KAAK,MAAQ,CAC9BQ,cAAe,WAGnBE,SAAQd,EAAA,CACNC,MAAO,MACPN,OAAQ,QACRG,SAAU,WACVP,gBAAiB,WAChBH,EAAMe,YAAYC,KAAK,MAAQ,CAC9BH,MAAO,OACPN,OAAQ,OACRkB,OAAQ,MAIZE,WAAUf,EAAA,CACRC,MAAO,IACPN,OAAQ,GACRG,SAAU,WACVQ,IAAK,MACLC,KAAM,OACLnB,EAAMe,YAAYC,KAAK,MAAQ,CAC9BG,KAAM,MACND,IAAK,QAGTU,MAAKhB,EAAA,CACHiB,WAAY,aACZC,WAAY,MACZC,SAAU,OACVC,UAAW,SACXC,WAAY,SACZC,MAAO,UACPT,OAAQ,OACRL,UAAW,OACXe,aAAc,QACbnC,EAAMe,YAAYC,KAAK,MAAQ,CAC9BI,UAAW,SAIfgB,WAASnC,EAAA,CACPY,MAAO,OACPN,OAAQ,QACRJ,gBAAiB,UACjBoB,QAAS,OACTC,cAAe,SACfa,eAAgB,SAChBC,WAAY,SACZb,OAAQ,IACRc,aAAc,QACdzB,QAAS,KAAGF,EAAAX,EACXD,EAAMe,YAAYyB,GAAG,MAAQ,CAC5BC,YAAa,UACd7B,EAAAX,EACAD,EAAMe,YAAYC,KAAK,MAAQ,CAC9BH,MAAO,OACP4B,YAAa,IACbJ,eAAgB,SAChBC,WAAY,SACZC,aAAc,QACftC,GAEJ,IAsTcyC,UApTG,WAChB,IAAMC,EAAU7C,IACV8C,EAAWC,cACXC,EAAWC,cAMfC,EAAAC,EALgCC,mBAAS,CACzCC,SAAS,EACTC,WAAY,GACZC,UAAW,GACXC,SAAU,KACV,GALKC,EAASP,EAAA,GAAEQ,EAAYR,EAAA,GAOiCS,EAAAR,EAAfC,oBAAS,GAAM,GAAxDQ,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GACiCG,EAAAX,EAAvBC,mBAAS,CAAEW,MAAO,KAAK,GAAtEC,EAAmBF,EAAA,GAAEG,EAAsBH,EAAA,GAEjCI,EAAAf,EAAfC,oBAAS,GAAM,GADVe,EAAyBD,EAAA,GAAEE,EAA2BF,EAAA,GAsC7D,OACEG,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACE,IAAI,CAACC,UAAW5B,EAAQzC,KAAM0B,MAAM,SACnCuC,IAAAC,cAACI,IAAG,CAACD,UAAW5B,EAAQrB,WACtB6C,IAAAC,cAACI,IAAG,CAACD,UAAW5B,EAAQjB,UACtByC,IAAAC,cAACK,IAAM,CACLC,QAAQ,SACRC,IAAI,+BACJJ,UAAW5B,EAAQhB,cAGvBwC,IAAAC,cAACI,IAAG,CAACD,UAAW5B,EAAQP,WACrBmB,EAAUJ,QACTgB,IAAAC,cAACQ,IAAW,CACVC,KAAMtB,EAAUJ,QAChBG,SAAUC,EAAUD,SACpBF,WAAYG,EAAUH,WACtBC,UAAWE,EAAUF,UACrByB,QAAS,kBACPtB,EAAa,CACXL,SAAS,EACTC,WAAY,GACZC,UAAW,GACXC,SAAU,IACV,IAGJ,KACJa,IAAAC,cAACI,IAAG,CACFjD,QAAQ,OACRC,cAAc,SACdjB,OAAO,OACP8B,eAAe,UAEf8B,IAAAC,cAACW,IAAS,CAACC,SAAS,MAClBb,IAAAC,cAACI,IAAG,CACFjD,QAAQ,OACRe,WAAW,SACXD,eAAe,SACfF,aAAc,IAIhBgC,IAAAC,cAACa,IAAM,CACLC,cAAe,CACbrB,MAAO,GACPsB,SAAU,IAGZC,iBAAkBC,MAAaC,MAAM,CACnCzB,MAAOwB,MACJxB,MAAM,yBACN0B,IAAI,KACJC,SAAS,qBACZL,SAAUE,MACPE,IAAI,KACJC,SAAS,0BAKdC,SAAU,SAACC,EAAMC,GAAmC,IAA/BC,EAAaD,EAAbC,cAAeC,EAASF,EAATE,UAC5BC,EAAMC,IAAIC,MAEVC,EAAS,CACbC,QAAS,CACP,cAAeC,IAAQC,IAAI,eAI/BC,IACGC,KAAKR,EAAKJ,EAAQO,GAClBM,MAAK,SAACC,GACmB,IAAAC,EAAL,MAAfD,EAAIE,SACNC,OAAOC,eAAeC,QACpB,QACQ,QADDJ,EACPD,EAAIM,YAAI,IAAAL,GAAM,QAANA,EAARA,EAAUK,YAAI,IAAAL,OAAA,EAAdA,EAAgBM,OAElBnB,GAAc,GACd9C,EAASkE,YAAWtB,EAAOuB,UAC3BrE,EAAS,KAEb,IAAE,OACK,SAACsE,GACwB,MAA1BA,EAAMC,SAAST,QACjBlD,EAAa,CACXL,SAAS,EACTE,UAAW,sBACXC,SAAU,QACVF,WAAY,UAEdwC,GAAc,KAEdpC,EAAa,CACXL,SAAS,EACTE,UAAW,uBACXC,SAAU,QACVF,WAAY,UAEdyC,IACAD,GAAc,GAElB,GACJ,IAEC,SAAAwB,GAAA,IACCC,EAAMD,EAANC,OACAC,EAAUF,EAAVE,WACAC,EAAYH,EAAZG,aACAC,EAAYJ,EAAZI,aACAC,EAAYL,EAAZK,aACAC,EAAON,EAAPM,QACAhC,EAAM0B,EAAN1B,OAAM,OAENvB,IAAAC,cAAA,QAAMuD,aAAa,MAAMlC,SAAU+B,GACjCrD,IAAAC,cAACI,IAAG,CAACoD,GAAI,GACPzD,IAAAC,cAACyD,IAAU,CAAC3F,MAAM,cAAcwC,QAAQ,MAAK,YAK/CP,IAAAC,cAAC0D,IAAS,CACRZ,MAAOa,QAAQL,EAAQ7D,OAASwD,EAAOxD,OACvCmE,WAAS,EACTC,WAAYP,EAAQ7D,OAASwD,EAAOxD,MACpCqE,MAAM,gBACNzG,OAAO,SACP0G,KAAK,QACLC,OAAQd,EACRe,SAAUd,EACVe,KAAK,QACLC,MAAO7C,EAAO7B,MACda,QAAQ,aAEVP,IAAAC,cAAC0D,IAAS,CACRZ,MAAOa,QAAQL,EAAQvC,UAAYkC,EAAOlC,UAC1C6C,WAAS,EACTC,WAAYP,EAAQvC,UAAYkC,EAAOlC,SACvC+C,MAAM,WACNzG,OAAO,SACP0G,KAAK,WACLC,OAAQd,EACRe,SAAUd,EACVe,KAAK,WACLC,MAAO7C,EAAOP,SACdT,QAAQ,aAkBVP,IAAAC,cAACI,IAAG,CAACgE,GAAI,GACPrE,IAAAC,cAACqE,IAAM,CACLvG,MAAM,UACNwG,SAAUjB,EACVO,WAAS,EACTW,KAAK,QACLL,KAAK,SACL5D,QAAQ,aACT,gBAUHP,IAAAC,cAACI,IAAG,CAACjD,QAAQ,OAAOc,eAAe,iBACjC8B,IAAAC,cAACyD,IAAU,CACT3F,MAAM,gBACNwC,QAAQ,QACRkE,MAAO,GAEPzE,IAAAC,cAACyE,IAAI,CACHC,QAAS,kBAAMnF,GAAoB,EAAK,EACxCzB,MAAM,UACNwC,QAAQ,MACT,qBAIHP,IAAAC,cAACyD,IAAU,CAAC3F,MAAM,gBAAgBwC,QAAQ,SAAQ,yBACpB,IAC5BP,IAAAC,cAACyE,IAAI,CACHE,UAAWC,IACXC,GAAG,YACHvE,QAAQ,MACT,aAKA,SASrBP,IAAAC,cAAC8E,IAAM,CACLrE,KAAMnB,EACNoB,QAAS,kBAAMnB,GAAoB,EAAM,EACzC,kBAAgB,qBAEhBQ,IAAAC,cAAC+E,IAAW,CAACC,GAAG,qBAAoB,oBACpCjF,IAAAC,cAACiF,IAAa,KACZlF,IAAAC,cAACkF,IAAiB,KAAC,qDAGnBnF,IAAAC,cAAC0D,IAAS,CACRyB,WAAS,EACT9H,OAAO,QACP2H,GAAG,OACHlB,MAAM,gBACNI,KAAK,QACLN,WAAS,EACTL,aAAa,MACbY,MAAOzE,EAAoBD,MAC3BwE,SAAU,SAACmB,GAAC,OAAKzF,EAAuB,CAAEF,MAAO2F,EAAEC,OAAOlB,OAAQ,KAGtEpE,IAAAC,cAACsF,IAAa,KACZvF,IAAAC,cAACqE,IAAM,CAACK,QAAS,kBAAMnF,GAAoB,EAAM,EAAEzB,MAAM,WAAU,UAGnEiC,IAAAC,cAACqE,IAAM,CACLK,QArRmB,WAC3B,IAAMhD,EAAMC,IAAI4D,eAChBzF,GAA4B,GAC5B,IAAM+B,EAAS,CACbC,QAAS,CACP,cAAeC,IAAQC,IAAI,eAI/BC,IACGC,KAAKR,EAAKhC,EAAqBmC,GAC/BM,MAAK,SAACC,GACLhD,EAAa,CACXL,SAAS,EACTE,UAAWmD,EAAIM,KAAc,QAC7BxD,SAAU,YAEZK,GAAoB,GACpBO,GAA4B,GAC5BH,EAAuB,CAAEF,MAAO,IAClC,IAAE,OACK,SAACqD,GACN0C,QAAQC,IAAI3C,EAAMC,UAClB3D,EAAa,CACXL,SAAS,EACTE,UAAW6D,EAAMC,SAASL,KAAc,QACxCxD,SAAU,QACVF,WAAY,UAEdO,GAAoB,GACpBO,GAA4B,GAC5BH,EAAuB,CAAEF,MAAO,IAClC,GACJ,EAqPU3B,MAAM,UACNwG,SAAUzE,GACX,iBAEEA,GACCE,IAAAC,cAAC0F,IAAgB,CAACnB,KAAM,GAAIpE,UAAW5B,EAAQ1B,oBAO7D,C,6sBC7aA,IAAMqD,EAAOyF,sBAAW,SAAApE,EAAoCqE,GAAQ,IAAzCC,EAAQtE,EAARsE,SAAQC,EAAAvE,EAAE/D,aAAK,IAAAsI,EAAG,GAAEA,EAAKC,EAAIC,EAAAzE,EAAA0E,GACtD,OACElG,IAAAC,cAAA,MAAAkG,EAAA,CAAKN,IAAKA,GAASG,GACjBhG,IAAAC,cAACmG,IAAM,KACLpG,IAAAC,cAAA,aAAQxC,IAETqI,EAGP,IAEA3F,EAAKkG,UAAY,CACfP,SAAUQ,IAAUC,KAAKC,WACzB/I,MAAO6I,IAAUG,QAGJtG,K,oCCpBf,8FAOMxE,EAAYC,aAAW,SAACC,GAAK,MAAM,CACvCE,KAAM,CACJkB,UAAWpB,EAAM6K,QAAQ,IACzBC,UAAW,uCAEbC,eAAgB,CACdC,SAAU,KAEb,IAEKpG,EAAc,SAAHe,GAA2D,IAArDd,EAAIc,EAAJd,KAAMvB,EAAQqC,EAARrC,SAAUF,EAAUuC,EAAVvC,WAAYC,EAASsC,EAATtC,UAAWyB,EAAOa,EAAPb,QAItDnC,EAAU7C,IAEhB,OACEqE,IAAAC,cAAC6G,IAAQ,CACPC,aAAc,CAAEC,SAPL,MAOeC,WANf,SAOXvG,KAAMA,EACNwG,iBAAkB,IAClBvG,QAASA,EACTP,UAAW5B,EAAQzC,MAEnBiE,IAAAC,cAACkH,IAAK,CACJhI,SAAUA,EACVwB,QAASA,EACTP,UAAW5B,EAAQoI,gBAElB3H,EAAae,IAAAC,cAACmH,IAAU,KAAEnI,GAA2B,KACrDC,EAAU,KAInB,EAEAuB,EAAY4G,UAAY,CACtB3G,KAAM4F,IAAUgB,KAChBnI,SAAUmH,IAAUG,OACpBvH,UAAWoH,IAAUG,OACrBxH,WAAYqH,IAAUG,OACtB9F,QAAS2F,IAAUiB,MAGN9G,K","file":"LoginView.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  CircularProgress,\r\n  Avatar,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAlert from \"../../components/CustomAlert\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport Api from \"../../components/Api\";\r\nimport Page from \"../../components/Page\";\r\nimport { setTaxYear } from \"../../redux/app/appSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: \"0px\",\r\n    paddingTop: \"0px\",\r\n    position: \"relative\",\r\n  },\r\n\r\n  logo: {\r\n    width: 150,\r\n    padding: 10,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: 110,\r\n    },\r\n  },\r\n  submitProgress: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  mainBlock: {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  leftSide: {\r\n    width: \"70%\",\r\n    height: \"100vh\",\r\n    position: \"relative\",\r\n    backgroundColor: \"#2069D8\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      height: \"40vh\",\r\n      margin: \"0\",\r\n    },\r\n  },\r\n\r\n  avatarLogo: {\r\n    width: 200,\r\n    height: 72,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"33%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      left: \"20%\",\r\n      top: \"30%\",\r\n    },\r\n  },\r\n  title: {\r\n    fontFamily: \"Montserrat\",\r\n    fontWeight: \"700\",\r\n    fontSize: \"72px\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"87.7px\",\r\n    color: \"#FFFFFF\",\r\n    margin: \"auto\",\r\n    marginTop: \"50vh\",\r\n    marginBottom: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"10vh\",\r\n    },\r\n  },\r\n\r\n  rightSide: {\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#F5F5F5\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\", // Center vertically\r\n    alignItems: \"center\", // Center horizontally\r\n    margin: \"0\",\r\n    paddingRight: \"200px\",\r\n    padding: \"0\", // Reset padding\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingLeft: \"244px\", // Adjust padding for medium and larger screens\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\", // Set width to 100%\r\n      paddingLeft: \"0\", // Reset padding\r\n      justifyContent: \"center\", // Center vertically\r\n      alignItems: \"center\", // Center horizontally\r\n      paddingRight: \"0px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n\r\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\r\n  const [forgotPasswordState, setForgetPasswordState] = useState({ email: \"\" });\r\n  const [isResetPasswordSubmitting, setIsRestPasswordSubmitting] =\r\n    useState(false);\r\n\r\n  const handleForgotPassword = () => {\r\n    const url = Api.forgotPassword;\r\n    setIsRestPasswordSubmitting(true);\r\n    const config = {\r\n      headers: {\r\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(url, forgotPasswordState, config)\r\n      .then((res) => {\r\n        setShowAlert({\r\n          isAlert: true,\r\n          alertText: res.data[\"message\"],\r\n          severity: \"success\",\r\n        });\r\n        setIsForgotPassword(false);\r\n        setIsRestPasswordSubmitting(false);\r\n        setForgetPasswordState({ email: \"\" });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        setShowAlert({\r\n          isAlert: true,\r\n          alertText: error.response.data[\"message\"],\r\n          severity: \"error\",\r\n          alertTitle: \"Error\",\r\n        });\r\n        setIsForgotPassword(false);\r\n        setIsRestPasswordSubmitting(false);\r\n        setForgetPasswordState({ email: \"\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Login\">\r\n        <Box className={classes.mainBlock}>\r\n          <Box className={classes.leftSide}>\r\n            <Avatar\r\n              variant=\"square\"\r\n              src=\"/static/img/onecall-logo.png\"\r\n              className={classes.avatarLogo}\r\n            />\r\n          </Box>\r\n          <Box className={classes.rightSide}>\r\n            {showAlert.isAlert ? (\r\n              <CustomAlert\r\n                open={showAlert.isAlert}\r\n                severity={showAlert.severity}\r\n                alertTitle={showAlert.alertTitle}\r\n                alertText={showAlert.alertText}\r\n                onClose={() =>\r\n                  setShowAlert({\r\n                    isAlert: false,\r\n                    alertTitle: \"\",\r\n                    alertText: \"\",\r\n                    severity: \"\",\r\n                  })\r\n                }\r\n              />\r\n            ) : null}\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection=\"column\"\r\n              height=\"100%\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Container maxWidth=\"sm\">\r\n                <Box\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"center\"\r\n                  marginBottom={2}\r\n                >\r\n                  {/* We can place our logo here */}\r\n                </Box>\r\n                <Formik\r\n                  initialValues={{\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    // taxYear: \"\",\r\n                  }}\r\n                  validationSchema={Yup.object().shape({\r\n                    email: Yup.string()\r\n                      .email(\"Must be a valid email\")\r\n                      .max(255)\r\n                      .required(\"Email is required\"),\r\n                    password: Yup.string()\r\n                      .max(255)\r\n                      .required(\"Password is required\"),\r\n                    // taxYear: Yup.string()\r\n                    //   .max(255)\r\n                    //   .required(\"Tax Year is required\"),\r\n                  })}\r\n                  onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                    const url = Api.login;\r\n\r\n                    const config = {\r\n                      headers: {\r\n                        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\r\n                      },\r\n                    };\r\n\r\n                    axios\r\n                      .post(url, values, config)\r\n                      .then((res) => {\r\n                        if (res.status === 200) {\r\n                          window.sessionStorage.setItem(\r\n                            \"token\",\r\n                            res.data?.data?.token\r\n                          );\r\n                          setSubmitting(false);\r\n                          dispatch(setTaxYear(values.taxYear));\r\n                          navigate(\"/\");\r\n                        }\r\n                      })\r\n                      .catch((error) => {\r\n                        if (error.response.status === 400) {\r\n                          setShowAlert({\r\n                            isAlert: true,\r\n                            alertText: \"Invalid credentials\",\r\n                            severity: \"error\",\r\n                            alertTitle: \"Error\",\r\n                          });\r\n                          setSubmitting(false);\r\n                        } else {\r\n                          setShowAlert({\r\n                            isAlert: true,\r\n                            alertText: \"Something went wrong\",\r\n                            severity: \"error\",\r\n                            alertTitle: \"Error\",\r\n                          });\r\n                          resetForm();\r\n                          setSubmitting(false);\r\n                        }\r\n                      });\r\n                  }}\r\n                >\r\n                  {({\r\n                    errors,\r\n                    handleBlur,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    touched,\r\n                    values,\r\n                  }) => (\r\n                    <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                      <Box mb={3}>\r\n                        <Typography color=\"textPrimary\" variant=\"h2\">\r\n                          Sign in\r\n                        </Typography>\r\n                      </Box>\r\n\r\n                      <TextField\r\n                        error={Boolean(touched.email && errors.email)}\r\n                        fullWidth\r\n                        helperText={touched.email && errors.email}\r\n                        label=\"Email Address\"\r\n                        margin=\"normal\"\r\n                        name=\"email\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"email\"\r\n                        value={values.email}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <TextField\r\n                        error={Boolean(touched.password && errors.password)}\r\n                        fullWidth\r\n                        helperText={touched.password && errors.password}\r\n                        label=\"Password\"\r\n                        margin=\"normal\"\r\n                        name=\"password\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"password\"\r\n                        value={values.password}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      {/* <TextField\r\n                        select\r\n                        error={Boolean(touched.taxYear && errors.taxYear)}\r\n                        helperText={touched.taxYear && errors.taxYear}\r\n                        fullWidth\r\n                        label=\"Tax Year\"\r\n                        margin=\"normal\"\r\n                        name=\"taxYear\" // Change \"taxyear\" to \"taxYear\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.taxYear}\r\n                        variant=\"outlined\"\r\n                      >\r\n                        <MenuItem value=\"currentYear\">Current Year</MenuItem>\r\n                        <MenuItem value=\"AllYears\">All Years</MenuItem>\r\n                      </TextField> */}\r\n                      <Box my={2}>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          disabled={isSubmitting}\r\n                          fullWidth\r\n                          size=\"large\"\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                        >\r\n                          Sign in now\r\n                        </Button>\r\n                      </Box>\r\n                      {/* <Typography color=\"textSecondary\" variant=\"body1\">\r\n                  Don&apos;t have an account?{\" \"}\r\n                  <Link component={RouterLink} to=\"/register\" variant=\"h6\">\r\n                    Sign up\r\n                  </Link>\r\n                </Typography> */}\r\n                      <Box display=\"flex\" justifyContent=\"space-between\">\r\n                        <Typography\r\n                          color=\"textSecondary\"\r\n                          variant=\"body1\"\r\n                          right={0}\r\n                        >\r\n                          <Link\r\n                            onClick={() => setIsForgotPassword(true)}\r\n                            color=\"primary\"\r\n                            variant=\"h6\"\r\n                          >\r\n                            Forgot Password?\r\n                          </Link>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"body1\">\r\n                          Don&apos;t have an account?{\" \"}\r\n                          <Link\r\n                            component={RouterLink}\r\n                            to=\"/register\"\r\n                            variant=\"h6\"\r\n                          >\r\n                            Sign up\r\n                          </Link>\r\n                        </Typography>\r\n                      </Box>\r\n                    </form>\r\n                  )}\r\n                </Formik>\r\n              </Container>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Page>\r\n\r\n      <Dialog\r\n        open={isForgotPassword}\r\n        onClose={() => setIsForgotPassword(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Forgot Password?</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please enter your email address to reset password\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            value={forgotPasswordState.email}\r\n            onChange={(e) => setForgetPasswordState({ email: e.target.value })}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setIsForgotPassword(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleForgotPassword}\r\n            color=\"primary\"\r\n            disabled={isResetPasswordSubmitting}\r\n          >\r\n            Reset Password\r\n            {isResetPasswordSubmitting && (\r\n              <CircularProgress size={24} className={classes.submitProgress} />\r\n            )}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React, { forwardRef } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\r\n  return (\r\n    <div ref={ref} {...rest}>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Snackbar } from \"@mui/material\";\r\nimport { Alert, AlertTitle } from \"@mui/material\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(10),\r\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\r\n  },\r\n  alertContainer: {\r\n    minWidth: 350,\r\n  },\r\n}));\r\n\r\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\r\n  let vertical = \"top\",\r\n    horizontal = \"right\";\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical, horizontal }}\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={onClose}\r\n      className={classes.root}\r\n    >\r\n      <Alert\r\n        severity={severity}\r\n        onClose={onClose}\r\n        className={classes.alertContainer}\r\n      >\r\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\r\n        {alertText}!\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nCustomAlert.prototype = {\r\n  open: PropTypes.bool,\r\n  severity: PropTypes.string, //['success','warning', 'error']\r\n  alertText: PropTypes.string,\r\n  alertTitle: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default CustomAlert;\r\n"],"sourceRoot":""}