{"version":3,"sources":["webpack:///./src/views/Profile/profile.page.js","webpack:///./src/components/Page.js"],"names":["customProfileStyles","makeStyles","theme","mainBlock","marginTop","justifyContent","alignItems","alignSelf","textAlign","width","account","_defineProperty","breakpoints","down","maxWidth","marginBottom","title","textTransform","color","fontSize","fontWeight","letterSpacing","subTitle","ProfilePage","useNavigate","useDispatch","name","_useState2","_slicedToArray","useState","first_name","last_name","gender","email","phone_no","address","userInfo","setUserInfo","_useState4","scrollEl","customStyles","useEffect","sessionStorage","getItem","privateApiGET","Api","profile","then","response","status","data","console","log","info","prev","_objectSpread","id","error","scrollTop","React","createElement","Page","Container","className","Box","Avatar","_extends","split","length","children","concat","sx","height","backgroundColor","marginLeft","marginRight","Typography","Card","CardHeader","subheader","CardContent","Grid","container","spacing","item","md","xs","TextField","fullWidth","label","value","variant","InputProps","readOnly","disabled","forwardRef","_ref","ref","_ref$title","rest","_objectWithoutProperties","_excluded","Helmet","propTypes","PropTypes","node","isRequired","string"],"mappings":"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","file":"profile.page.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Page from \"../../components/Page\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  useMediaQuery,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n} from \"@mui/material\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { privateApiGET } from \"../../components/PrivateRoute\";\r\nimport Api from \"../../components/Api\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst customProfileStyles = makeStyles((theme) => ({\r\n  mainBlock: {\r\n    marginTop: \"50px\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  account: {\r\n    justifyContent: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      maxWidth: \"100%\",\r\n      marginBottom: \"10px\",\r\n    },\r\n  },\r\n  title: {\r\n    textTransform: \"uppercase\",\r\n    color: \"#3e4152\",\r\n    fontSize: \"28px\",\r\n    fontWeight: \"700\",\r\n    marginTop: \"34px\",\r\n    marginBottom: \"10px\",\r\n    letterSpacing: \"1.5px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"0\",\r\n      fontSize: \"20px\",\r\n      letterSpacing: \"0.5px\",\r\n    },\r\n  },\r\n  subTitle: {\r\n    textTransform: \"uppercase\",\r\n    color: \"#3e4152\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"left\",\r\n    marginTop: \"24px\",\r\n    letterSpacing: \"1px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"16px\",\r\n      letterSpacing: \"0.5px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ProfilePage = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [userInfo, setUserInfo] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    gender: \"\",\r\n    email: \"\",\r\n    phone_no: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  const [scrollEl, setScrollEl] = useState();\r\n  const customStyles = customProfileStyles();\r\n\r\n  const handleFetchProfileData = () => {\r\n    privateApiGET(Api.profile)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          let info = data?.data;\r\n          setUserInfo((prev) => ({\r\n            ...prev,\r\n            id: info.id,\r\n            first_name: info.first_name,\r\n            last_name: info.last_name,\r\n            gender: info.gender,\r\n            email: info.email,\r\n            phone_no: info.phone_no,\r\n            address: info.address,\r\n          }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n      });\r\n  };\r\n\r\n  function stringAvatar(name) {\r\n    if (name.split(\" \").length == 1) {\r\n      return {\r\n        children: `${name.split(\" \")[0][0]}`,\r\n      };\r\n    }\r\n    return {\r\n      children: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`,\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"token\")) {\r\n      handleFetchProfileData();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (scrollEl) {\r\n      scrollEl.scrollTop = 100;\r\n    }\r\n  }, [scrollEl]);\r\n\r\n  return (\r\n    <Page title=\"Profile\">\r\n      <Container maxWidth=\"md\" className={customStyles.mainBlock}>\r\n        <Box className={customStyles.account}>\r\n          {userInfo.first_name && (\r\n            <Avatar\r\n              {...stringAvatar(userInfo.first_name + userInfo.last_name)}\r\n              sx={{\r\n                width: \"100px\",\r\n                height: \"100px\",\r\n                fontSize: \"48px\",\r\n                color: \"white\",\r\n                backgroundColor: \"rgb(0,76,153,0.8)\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n              }}\r\n            />\r\n          )}\r\n\r\n          <Typography\r\n            sx={{ fontWeight: \"700\", marginTop: \"10px\", fontSize: \"16px\" }}\r\n          >\r\n            {userInfo.first_name} {userInfo.last_name}\r\n          </Typography>\r\n\r\n          <Card sx={{ marginTop: \"20px\" }}>\r\n            <CardHeader\r\n              subheader={\"This information can't be edited\"}\r\n              title={\"PROFILE\"}\r\n            />\r\n            <CardContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={12} xs={12}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item md={4} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"First_Name\"\r\n                        name=\"name\"\r\n                        value={userInfo?.[\"first_name\"]}\r\n                        variant=\"outlined\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={4} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Last_Name\"\r\n                        name=\"name\"\r\n                        value={userInfo?.[\"last_name\"]}\r\n                        variant=\"outlined\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={4} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Gender\"\r\n                        name=\"name\"\r\n                        value={userInfo?.[\"gender\"]}\r\n                        variant=\"outlined\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={4} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={userInfo?.[\"email\"]}\r\n                        variant=\"outlined\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={4} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Phone Number\"\r\n                        name=\"phone_no\"\r\n                        value={userInfo ? userInfo[\"phone_no\"] : \"\"}\r\n                        variant=\"outlined\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={4} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Address\"\r\n                        name=\"address\"\r\n                        value={userInfo ? userInfo[\"address\"] : \"\"}\r\n                        variant=\"outlined\"\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React, { forwardRef } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\r\n  return (\r\n    <div ref={ref} {...rest}>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n"],"sourceRoot":""}